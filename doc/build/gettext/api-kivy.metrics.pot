# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.metrics.rst:3
msgid "Metrics"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:4
msgid "A screen is defined by its physical size, density and resolution. These factors are essential for creating UI's with correct size everywhere."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:7
msgid "In Kivy, all the graphics pipelines work with pixels. But using pixels as a measurement unit is problematic because sizes change according to the screen."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:12
msgid "Dimensions"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:14
msgid "If you want to design your UI for different screen sizes, you will want better measurement units to work with. Kivy provides some more scalable alternatives."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:0
msgid "Units"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:19
msgid "`pt`"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:19
msgid "Points - 1/72 of an inch based on the physical size of the screen. Prefer to use sp instead of pt."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:21
msgid "`mm`"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:22
msgid "Millimeters - Based on the physical size of the screen."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:23
msgid "`cm`"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:24
msgid "Centimeters - Based on the physical size of the screen."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:25
msgid "`in`"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:26
msgid "Inches - Based on the physical size of the screen."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:37
msgid "`dp`"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:28
msgid "Density-independent Pixels - An abstract unit that is based on the physical density of the screen. With a :attr:`~MetricsBase.density` of 1, 1dp is equal to 1px. When running on a higher density screen, the number of pixels used to draw 1dp is scaled up a factor appropriate to the screen's dpi, and the inverse for a lower dpi. The ratio of dp-to-pixels will change with the screen density, but not necessarily in direct proportion. Using the dp unit is a simple solution to making the view dimensions in your layout resize properly for different screen densities. In others words, it provides consistency for the real-world size of your UI across different devices."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:43
msgid "`sp`"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:40
msgid "Scale-independent Pixels - This is like the dp unit, but it is also scaled by the user's font size preference. We recommend you use this unit when specifying font sizes, so the font size will be adjusted to both the screen density and the user's preference."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:46
msgid "Examples"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:48
msgid "Here is an example of creating a label with a sp font_size and setting the height manually with a 10dp margin::"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:60
msgid "Manual control of metrics"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:62
msgid "The metrics cannot be changed at runtime. Once a value has been converted to pixels, you can't retrieve the original value anymore. This stems from the fact that the DPI and density of a device cannot be changed at runtime."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:66
msgid "We provide some environment variables to control metrics:"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:68
msgid "`KIVY_METRICS_DENSITY`: if set, this value will be used for :attr:`~MetricsBase.density` instead of the systems one. On android, the value varies between 0.75, 1, 1.5 and 2."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:72
msgid "`KIVY_METRICS_FONTSCALE`: if set, this value will be used for :attr:`~MetricsBase.fontscale` instead of the systems one. On android, the value varies between 0.8 and 1.2."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:76
msgid "`KIVY_DPI`: if set, this value will be used for :attr:`~MetricsBase.dpi`. Please note that setting the DPI will not impact the dp/sp notation because these are based on the screen density."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:81
msgid "For example, if you want to simulate a high-density screen (like the HTC One X)::"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:86
msgid "Or a medium-density (like Motorola Droid 2)::"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics:90
msgid "You can also simulate an alternative user preference for fontscale as follows::"
msgstr ""

#: ../../docstring of kivy.metrics.Metrics:1
msgid "The metrics object storing the window scaling factors."
msgstr ""

#: ../../docstring of kivy.metrics.Metrics:7
msgid ":attr:`Metrics` is now a Context registered variable (like e.g. :attr:`~kivy.clock.Clock`)."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.event.EventDispatcher`"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics.MetricsBase:1
msgid "Class that contains the default attributes for Metrics. Don't use this class directly, but use the `Metrics` instance."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.cm:1
msgid "The scaling factor that converts from centimeters to pixels."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.cm:3
msgid ":attr:`cm` is a :class:`~kivy.properties.AliasProperty` containing the factor. E.g in KV: ``width: self.texture_size[0] + 10 * Metrics.cm`` will update width when :attr:`cm` changes from a screen configuration change."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.density:1
msgid "The density of the screen."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.density:3
msgid "This value is 1 by default on desktops but varies on android depending on the screen."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.density:6
msgid ":attr:`density` is a :class:`~kivy.properties.AliasProperty` and can be set to change the value. But, the :attr:`density` is reloaded and reset if we got it from the Window and the Window ``density`` changed."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.dp:1
msgid "The scaling factor that converts from density-independent pixels to pixels."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.dp:4
msgid ":attr:`dp` is a :class:`~kivy.properties.AliasProperty` containing the factor. E.g in KV: ``width: self.texture_size[0] + 10 * Metrics.dp`` will update width when :attr:`dp` changes from a screen configuration change."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.dpi:1
msgid "The DPI of the screen."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.dpi:3
msgid "Depending on the platform, the DPI can be taken from the Window provider (Desktop mainly) or from a platform-specific module (like android/ios)."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.dpi:6
msgid ":attr:`dpi` is a :class:`~kivy.properties.AliasProperty` and can be set to change the value. But, the :attr:`density` is reloaded and reset if we got it from the Window and the Window ``dpi`` changed."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.dpi_rounded:1
msgid "Return the :attr:`dpi` of the screen, rounded to the nearest of 120, 160, 240 or 320."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.dpi_rounded:4
msgid ":attr:`dpi_rounded` is a :class:`~kivy.properties.AliasProperty` and updates when :attr:`dpi` changes."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.fontscale:1
msgid "The fontscale user preference."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.fontscale:3
msgid "This value is 1 by default but can vary between 0.8 and 1.2."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.fontscale:5
msgid ":attr:`fontscale` is a :class:`~kivy.properties.AliasProperty` and can be set to change the value."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.inch:1
msgid "The scaling factor that converts from inches to pixels."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.inch:3
msgid ":attr:`inch` is a :class:`~kivy.properties.AliasProperty` containing the factor. E.g in KV: ``width: self.texture_size[0] + 10 * Metrics.inch`` will update width when :attr:`inch` changes from a screen configuration change."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.mm:1
msgid "The scaling factor that converts from millimeters to pixels."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.mm:3
msgid ":attr:`mm` is a :class:`~kivy.properties.AliasProperty` containing the factor. E.g in KV: ``width: self.texture_size[0] + 10 * Metrics.mm`` will update width when :attr:`mm` changes from a screen configuration change."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.pt:1
msgid "The scaling factor that converts from points to pixels."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.pt:3
msgid ":attr:`pt` is a :class:`~kivy.properties.AliasProperty` containing the factor. E.g in KV: ``width: self.texture_size[0] + 10 * Metrics.pt`` will update width when :attr:`pt` changes from a screen configuration change."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics.MetricsBase.reset_dpi:1
msgid "Resets the dpi (and possibly density) to the platform values, overwriting any manually set values."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics.MetricsBase.reset_metrics:1
msgid "Resets the dpi/density/fontscale to the platform values, overwriting any manually set values."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.sp:1
msgid "The scaling factor that converts from scale-independent pixels to pixels."
msgstr ""

#: ../../docstring of kivy.metrics.MetricsBase.sp:4
msgid ":attr:`sp` is a :class:`~kivy.properties.AliasProperty` containing the factor. E.g in KV: ``width: self.texture_size[0] + 10 * Metrics.sp`` will update width when :attr:`sp` changes from a screen configuration change."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics.cm:1
msgid "Convert from centimeters to pixels"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics.dp:1
msgid "Convert from density-independent pixels to pixels"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy._metrics.dpi2px:1
msgid "Converts the value according to the ext."
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics.inch:1
msgid "Convert from inches to pixels"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics.mm:1
msgid "Convert from millimeters to pixels"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics.pt:1
msgid "Convert from points to pixels"
msgstr ""

#: ../../../kivy/metrics.py:docstring of kivy.metrics.sp:1
msgid "Convert from scale-independent pixels to pixels"
msgstr ""
