# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/gettingstarted/installation.rst:4
msgid "Installing Kivy"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:6
msgid "Installation for Kivy version |kivy_version_bold|. Read the :ref:`changelog here <changelog>`. For other Kivy versions, select the documentation from the dropdown on the top left."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:9
msgid "Kivy |kivy_version| officially supports Python versions |python_versions_bold|."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:12
msgid "â€Ž"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:12
msgid "Platform"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:12
msgid "Installation"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:12
msgid "Packaging"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:14
msgid "|w_logo|"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:24
msgid "w_logo"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:14
msgid "Windows"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:14
#: ../../sources/gettingstarted/installation.rst:17
#: ../../sources/gettingstarted/installation.rst:18
msgid ":ref:`pip<install-pip>`"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:14
msgid ":ref:`PyInstaller<packaging-win>`"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:15
msgid "|m_logo|"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:26
msgid "m_logo"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:15
msgid "macOS"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:15
msgid ":ref:`pip<install-pip>`, :ref:`Kivy.app<osx-app>`"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:15
msgid ":ref:`Kivy.app<packaging-osx-sdk>`, :ref:`PyInstaller<osx_pyinstaller>`"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:16
msgid "|l_logo|"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:28
msgid "l_logo"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:16
msgid "Linux"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:16
msgid ":ref:`pip<install-pip>`, :ref:`PPA<linux-ppa>`"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:16
#: ../../sources/gettingstarted/installation.rst:17
#: ../../sources/gettingstarted/installation.rst:18
#: ../../sources/gettingstarted/installation.rst:21
msgid "---"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:17
msgid "|b_logo|"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:30
msgid "b_logo"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:17
msgid "*BSD (FreeBSD,..)"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:18
msgid "|r_logo|"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:32
msgid "r_logo"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:18
msgid "RPi"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:19
msgid "|a_logo|"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:34
msgid "a_logo"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:19
msgid "Android"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:19
msgid ":ref:`python-for-android<packaging_android>`"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:20
msgid "|i_logo|"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:36
msgid "i_logo"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:20
msgid "iOS"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:20
msgid ":ref:`kivy-ios<packaging_ios>`"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:21
msgid "|c_logo|"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:38
msgid "c_logo"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:21
msgid "Anaconda"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:21
msgid ":ref:`conda<install-conda>`"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:44
msgid "Using pip"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:46
msgid "The easiest way to install Kivy is with ``pip``, which installs Kivy using either a :ref:`pre-compiled wheel<pip-wheel>`, if available, otherwise from source (see below)."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:49
msgid "Kivy provides :ref:`pre-compiled wheels<kivy-wheel-install>` for the supported Python versions on Windows, macOS, Linux, and RPi. If no wheels are available ``pip`` will build the package from sources (i.e. on *BSD). Alternatively, installing :ref:`from source<kivy-source-install>` is required for newer Python versions not listed above or if the wheels do not work or fail to run properly."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:56
msgid "Setup terminal and pip"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:58
msgid "Before Kivy can be installed, Python and pip needs to be :ref:`pre-installed<install-python>`. Then, start a :ref:`new terminal<command-line>` that has :ref:`Python available<install-python>`. In the terminal, update ``pip`` and other installation dependencies so you have the latest version as follows (for linux users you may have to substitute ``python3`` instead of ``python`` and also add a ``--user`` flag in the subsequent commands outside the virtual environment)::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:68
msgid "Create virtual environment"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:70
msgid "Create a new `virtual environment <https://virtualenv.pypa.io/en/latest/>`_ for your Kivy project. A virtual environment will prevent possible installation conflicts with other Python versions and packages. It's optional **but strongly recommended**:"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:74
msgid "Create the virtual environment named ``kivy_venv`` in your current directory::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:78
msgid "Activate the virtual environment. You will have to do this step from the current directory **every time** you start a new terminal. This sets up the environment so the new ``kivy_venv`` Python is used."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:82
msgid "For **Windows default CMD**, in the command line do::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:86
msgid "If you are in a bash terminal on **Windows**, instead do::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:90
msgid "If you are in **linux** or **macOS**, instead do::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:94
msgid "Your terminal should now preface the path with something like ``(kivy_venv)``, indicating that the ``kivy_venv`` environment is active. If it doesn't say that, the virtual environment is not active and the following won't work."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:99
msgid "Install Kivy"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:101
msgid "Finally, install Kivy using one of the following options:"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:106
msgid "Pre-compiled wheels"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:108
msgid "The simplest is to install the current stable version of ``kivy`` and optionally ``kivy_examples`` from the kivy-team provided PyPi wheels. Simply do::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:113
msgid "This also installs the minimum dependencies of Kivy. To additionally install Kivy with **audio/video** support, install either ``kivy[base,media]`` or ``kivy[full]``. See :ref:`Kivy's dependencies<kivy-dependencies>` for the list of selectors."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:117
msgid "For the Raspberry Pi, you must additionally install the dependencies listed in :ref:`source dependencies<install-source-rpi>` before installing Kivy above."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:123
msgid "From source"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:125
msgid "If a wheel is not available or is not working, Kivy can be installed from source with some additional steps. Installing from source means that Kivy will be installed from source code and compiled directly on your system."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:129
msgid "First install the additional system dependencies listed for each platform: :ref:`Windows<install-source-win>`, :ref:`macOS<install-source-osx>`, :ref:`Linux<install-source-linux>`, :ref:`*BSD<install-source-bsd>`, :ref:`RPi<install-source-rpi>."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:134
msgid "With the dependencies installed, you can now install Kivy into the virtual environment."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:136
msgid "To install the stable version of Kivy, from the terminal do::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:140
msgid "To install the latest cutting-edge Kivy from **master**, instead do::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:144
msgid "If you want to install Kivy from a different branch, from your forked repository, or from a specific commit (e.g. to test a fix from a user's PR) replace the corresponding components of the url."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:148
msgid "For example to install from the ``stable`` branch, the url becomes ``https://github.com/kivy/kivy/archive/stable.zip``. Or to try a specific commit hash, use e.g. ``https://github.com/kivy/kivy/archive/3d3e45dda146fef3f4758aea548da199e10eb382.zip``"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:155
msgid "Pre-release, pre-compiled wheels"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:157
msgid "To install a pre-compiled wheel of the last **pre-release** version of Kivy, instead of the current stable version, add the ``--pre`` flag to pip::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:162
msgid "This will only install a development version of Kivy if one was released to `PyPi <https://pypi.org/project/Kivy/#history>`_. Instead, one can also install the latest **cutting-edge** :ref:`Nightly wheels <nightly-win-wheels>` from the Kivy server with::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:169
msgid "It is done in two steps, because otherwise ``pip`` may ignore the wheels on the server and install an older pre-release version from PyPi."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:172
msgid "For the Raspberry Pi, remember to additionally install the dependencies listed in :ref:`source dependencies<install-source-rpi>` before installing Kivy above."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:178
msgid "Development install"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:180
msgid "If you want to edit Kivy before installing it, or if you want to try fixing some Kivy issue and submit a pull request with the fix, you will need to first download the Kivy source code. The following steps assumes git is pre-installed and available in the terminal."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:184
msgid "The typical process is to clone Kivy locally with::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:188
msgid "This creates a kivy named folder in your current path. Next, install the additional system dependencies listed for each OS: :ref:`Windows<install-source-win>`, :ref:`macOS<install-source-osx>`, :ref:`Linux<install-source-linux>`, `*BSD<install-source-bsd>`, :ref:`RPi<install-source-rpi>`."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:193
msgid "Then change to the kivy directory and install Kivy as an `editable install <https://pip.pypa.io/en/stable/cli/pip_install/#editable-installs>`_::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:199
msgid "Now, you can use git to change branches, edit the code and submit a PR. Remember to compile Kivy each time you change cython files as follows::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:204
msgid "Or if using bash or on Linux, simply do::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:208
msgid "to recompile."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:210
msgid "To run the test suite, simply run::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:214
msgid "or in bash or Linux::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:218
msgid "On *BSD Unix remember to use ``gmake`` (GNU) in place of ``make`` (BSD)."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:221
msgid "Checking the demo"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:223
msgid "Kivy should now be installed. You should be able to ``import kivy`` in Python or, if you installed the Kivy examples, run the demo."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:226
msgid "on Windows::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:230
msgid "in bash, Linux and macOS::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:234
msgid "on *BSD Unix:"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:236
msgid "python3 kivy_venv/share/kivy-examples/demo/showcase/main.py"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:238
msgid "The exact path to the Kivy examples directory is also stored in ``kivy.kivy_examples_dir``."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:240
msgid "The 3d monkey demo under ``kivy-examples/3Drendering/main.py`` is also fun to see."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:245
msgid "Installation using Conda"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:247
msgid "If you use `Anaconda <https://en.wikipedia.org/wiki/Anaconda_(Python_distribution)>`_, you can install Kivy with its package manager `Conda <https://en.wikipedia.org/wiki/Conda_(package_manager)>`_ using::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:252
msgid "Do not use ``pip`` to install kivy if you're using Anaconda, unless you're installing from source."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:258
msgid "Installing Kivy's dependencies"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:260
msgid "Kivy supports one or more backends for its core providers. E.g. it supports glew, angle, and sdl2 for the graphics backend on Windows. For each category (window, graphics, video, audio, etc.), at least one backend must be installed to be able to use the category."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:264
msgid "To facilitate easy installation, we provide ``extras_require`` `groups <https://setuptools.readthedocs.io/en/latest/userguide/dependency_management.html#optional-dependencies>`_ that will install selected backends to ensure a working Kivy installation. So one can install Kivy more simply with e.g.``pip install \"kivy[base,media,tuio]\"``. The full list of selectors and the packages they install is listed in `setup.py <https://github.com/kivy/kivy/blob/master/setup.cfg>`_. The exact packages in each selector may change in the future, but the overall goal of each selector will remain as described below."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:272
msgid "We offer the following selectors:"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:274
msgid "`base`: The minimum typical dependencies required for Kivy to run,"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:275
msgid "not including video/audio."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:276
msgid "`media`: Only the video/audio dependencies required for Kivy to"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:277
msgid "be able to play media."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:278
msgid "`full`: All the typical dependencies required for Kivy to run, including video/audio and"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:279
msgid "most optional dependencies."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:281
msgid "`dev`: All the additional dependencies required to run Kivy in development mode"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:281
msgid "(i.e. it doesn't include the base/media/full dependencies). E.g. any headers required for compilation, and all dependencies required to run the tests and creating the docs."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:283
msgid "`tuio`: The dependencies required to make TUIO work (primarily oscpy)."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:285
msgid "The following selectors install backends packaged as wheels by kivy under the ``Kivy_deps`` namespace. They are typically released and versioned to match specific Kivy versions, so we provide selectors to facilitate installation (i.e. instead of having to do ``pip install kivy kivy_deps.sdl2==x.y.z``, you can now do ``pip install \"kivy[sdl2]\"`` to automatically install the correct sdl2 for the Kivy version)."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:291
msgid "`gstreamer`: The gstreamer video/audio backend, if it's available"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:292
#: ../../sources/gettingstarted/installation.rst:294
msgid "(currently only on Windows)"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:293
msgid "`angle`: A alternate OpenGL backend, if it's available"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:295
msgid "`sdl2`: The window/image/audio backend, if it's available (currently only on Windows,"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:296
msgid "on macOS, Linux and *BSD Unix is already included in the main Kivy wheel)."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:297
msgid "`glew`: A alternate OpenGL backend, if it's available (currently only on Windows)"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:299
msgid "Following are the ``kivy_deps`` dependency wheels:"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:301
msgid "`gstreamer <https://gstreamer.freedesktop.org>`_ (optional)"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:303
msgid "``kivy_deps.gstreamer`` is an optional dependency which is only needed for audio/video support. We only provide it on Windows, for other platforms it must be installed independently. Alternatively, use `ffpyplayer <https://pypi.org/project/ffpyplayer/>`_  instead."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:307
msgid "`glew <http://glew.sourceforge.net/>`_ and/or `angle <https://github.com/Microsoft/angle>`_"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:310
msgid "``kivy_deps.glew`` and ``kivy_deps.angle`` are for `OpenGL <https://en.wikipedia.org/wiki/OpenGL>`_. You can install both, that is no problem. It is only available on Windows. On other platforms it is not required externally."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:314
msgid "One can select which of these to use for OpenGL using the ``KIVY_GL_BACKEND`` environment variable: By setting it to ``glew`` (the default), ``angle_sdl2``, or ``sdl2``. Here, ``angle_sdl2`` is a substitute for ``glew`` but requires ``kivy_deps.sdl2`` be installed as well."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:319
msgid "`sdl2 <https://libsdl.org>`_"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:321
msgid "``kivy_deps.sdl2`` is for window/images/audio and optionally OpenGL. It is only available on Windows and is included in the main Kivy wheel for other platforms."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:325
msgid "Python glossary"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:327
msgid "Here we explain how to install Python packages, how to use the command line and what wheels are."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:332
msgid "Installing Python"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:334
msgid "Kivy is written in `Python <https://en.wikipedia.org/wiki/Python_%28programming_language%29>`_ and as such, to use Kivy, you need an existing installation of `Python <https://www.python.org/downloads/windows/>`_. Multiple versions of Python can be installed side by side, but Kivy needs to be installed as package under each Python version that you want to use Kivy in."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:341
msgid "To install Python, see the instructions for each platform: :ref:`Windows<install-python-win>`, :ref:`macOS<install-python-osx>`, :ref:`Linux<install-python-linux>`, :ref:`RPi<install-python-rpi>`, :ref:`*BSD<install-python-bsd>`."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:346
msgid "Once Python is installed, open the :ref:`console <command-line>` and make sure Python is available by typing ``python --version``."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:352
msgid "How to use the command line"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:354
msgid "To execute any of the ``pip`` or ``wheel`` commands given here, you need a *command line* (here also called *console*, *terminal*, `shell <https://en.wikipedia.org/wiki/Unix_shell>`_ or `bash <https://en.wikipedia.org/wiki/Bash_(Unix_shell)>`_, where the last two refer to Linux / *BSD Unix style command lines) and Python must be on the `PATH <https://en.wikipedia.org/wiki/PATH_(variable)>`_."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:356
msgid "The default command line on Windows is the `command prompt <http://www.computerhope.com/issues/chusedos.htm>`_, short *cmd*. The quickest way to open it is to press `Win+R` on your keyboard. In the window that opens, type ``cmd`` and then press enter."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:361
msgid "Alternative Linux style command lines on Windows that we recommend are `Git for Windows <https://git-for-windows.github.io/>`_ or `Mysys <http://www.mingw.org/wiki/MSYS>`_."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:364
msgid "Note, the default Windows command line can still be used, even if a bash terminal is installed."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:366
msgid "To temporarily add your Python installation to the PATH, simply open your command line and then use the ``cd`` command to change the current directory to where python is installed, e.g. ``cd C:\\Python37``."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:368
msgid "If you have installed Python using the default options, then the path to Python will already be permanently on your PATH variable. There is an option in the installer which lets you do that, and it is enabled by default."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:370
msgid "If however Python is not on your PATH, follow the these instructions to add it:"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:372
msgid "Instructions for `the windows command line <http://www.computerhope.com/issues/ch000549.htm>`_"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:373
msgid "Instructions for `bash command lines <http://stackoverflow.com/q/14637979>`_"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:378
msgid "What is pip and what are wheels"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:380
msgid "In Python, packages such as Kivy can be installed with the python package manager, named `pip <https://pip.pypa.io/en/stable/>`_ (\"python install package\")."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:383
msgid "When installing from source, some packages, such as Kivy, require additional steps, like compilation."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:385
msgid "Contrary, wheels (files with a ``.whl`` extension) are pre-built distributions of a package that has already been compiled. These wheels do not require additional steps when installing them."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:389
msgid "When a wheel is available on `pypi.org <https://pypi.python.org/pypi>`_ (\"Python Package Index\") it can be installed with ``pip``. For example when you execute ``python -m pip install kivy`` in a command line, this will automatically find the appropriate wheel on PyPI."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:391
msgid "When downloading and installing a wheel directly, use the command ``python -m pip install <wheel_file_name>``, for example::"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:399
msgid "What are nightly wheels"
msgstr ""

#: ../../sources/gettingstarted/installation.rst:401
msgid "Every day we create a snapshot wheel of the current development version of Kivy ('nightly wheel'). You can find the development version in the master branch of the `Kivy Github repository <https://github.com/kivy/kivy>`_."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:405
msgid "As opposed to the last *stable* release (which we discussed in the previous section), nightly wheels contain all the latest changes to Kivy, including experimental fixes. For installation instructions, see :ref:`kivy-nightly-install`."
msgstr ""

#: ../../sources/gettingstarted/installation.rst:411
msgid "Using the latest development version can be risky and you might encounter issues during development. If you encounter any bugs, please report them."
msgstr ""
