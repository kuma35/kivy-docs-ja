# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/api-kivy.modules.console.rst:3
msgid "Console"
msgstr ""

#: kivy.modules.console:4 of
msgid ""
"Reboot of the old inspector, designed to be modular and keep concerns "
"separated. It also has an addons architecture that allow you to add a "
"button, panel, or more in the Console itself."
msgstr ""

#: kivy.modules.console:10 of
msgid "This module works, but might fail in some cases. Please contribute!"
msgstr ""

#: kivy.modules.console:13 of
msgid "Usage"
msgstr ""

#: kivy.modules.console:15 of
msgid ""
"For normal module usage, please see the :mod:`~kivy.modules` "
"documentation::"
msgstr ""

#: kivy.modules.console:20 of
msgid "Mouse navigation"
msgstr ""

#: kivy.modules.console:22 of
msgid "When the \"Select\" button is activated, you can:"
msgstr ""

#: kivy.modules.console:24 of
msgid "tap once on a widget to select it without leaving inspect mode"
msgstr ""

#: kivy.modules.console:25 of
msgid ""
"double tap on a widget to select and leave inspect mode (then you can "
"manipulate the widget again)"
msgstr ""

#: kivy.modules.console:29 of
msgid "Keyboard navigation"
msgstr ""

#: kivy.modules.console:31 of
msgid "\"Ctrl + e\": toggle console"
msgstr ""

#: kivy.modules.console:32 of
msgid "\"Escape\": cancel widget lookup, then hide inspector view"
msgstr ""

#: kivy.modules.console:33 of
msgid "\"Up\": select the parent widget"
msgstr ""

#: kivy.modules.console:34 of
msgid "\"Down\": select the first child of the currently selected widget"
msgstr ""

#: kivy.modules.console:35 of
msgid "\"Left\": select the previous sibling"
msgstr ""

#: kivy.modules.console:36 of
msgid "\"Right\": select the next sibling"
msgstr ""

#: kivy.modules.console:39 of
msgid "Additional information"
msgstr ""

#: kivy.modules.console:41 of
msgid ""
"Some properties can be edited live. However, due to the delayed usage of "
"some properties, it might crash if you don't handle the required cases."
msgstr ""

#: kivy.modules.console:45 of
msgid "Addons"
msgstr ""

#: kivy.modules.console:47 of
msgid ""
"Addons must be added to `Console.addons` before the first Clock tick of "
"the application, or before :attr:`create_console` is called. You "
"currently cannot add addons on the fly. Addons are quite cheap until the "
"Console is activated. Panels are even cheaper as nothing is done until "
"the user selects them."
msgstr ""

#: kivy.modules.console:52 of
msgid "We provide multiple addons activated by default:"
msgstr ""

#: kivy.modules.console:54 of
msgid "ConsoleAddonFps: display the FPS at the top-right"
msgstr ""

#: kivy.modules.console:55 of
msgid "ConsoleAddonSelect: activate the selection mode"
msgstr ""

#: kivy.modules.console:56 of
msgid ""
"ConsoleAddonBreadcrumb: display the hierarchy of the current widget at "
"the bottom"
msgstr ""

#: kivy.modules.console:58 of
msgid ""
"ConsoleAddonWidgetTree: panel to display the widget tree of the "
"application"
msgstr ""

#: kivy.modules.console:59 of
msgid ""
"ConsoleAddonWidgetPanel: panel to display the properties of the selected "
"widget"
msgstr ""

#: kivy.modules.console:62 of
msgid ""
"If you need to add custom widgets in the Console, please use either "
":class:`ConsoleButton`, :class:`ConsoleToggleButton` or "
":class:`ConsoleLabel`."
msgstr ""

#: kivy.modules.console:65 of
msgid "An addon must inherit from the :class:`ConsoleAddon` class."
msgstr ""

#: kivy.modules.console:67 of
msgid ""
"For example, here is a simple addon for displaying the FPS at the "
"top/right of the Console::"
msgstr ""

#: kivy.modules.console:90 of
msgid ""
"You can create addons that add panels. Panel activation/deactivation is "
"not tied to the addon activation/deactivation, but in some cases, you can"
" use the same callback for deactivating the addon and the panel. Here is "
"a simple \"About\" panel addon::"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.relativelayout.RelativeLayout`"
msgstr ""

#: kivy.modules.console.Console:1 of
msgid "Console interface"
msgstr ""

#: kivy.modules.console.Console:3 of
msgid ""
"This widget is created by create_console(), when the module is loaded. "
"During that time, you can add addons on the console to extend the "
"functionalities, or add your own application stats / debugging module."
msgstr ""

#: ../../docstring kivy.modules.console.Console.activated:1 of
msgid "True if the Console is activated (showed)"
msgstr ""

#: kivy.modules.console.Console.add_panel:1 of
msgid "Add a new panel in the Console."
msgstr ""

#: kivy.modules.console.Console.add_panel:3 of
msgid ""
"`cb_activate` is a callable that will be called when the panel is "
"activated by the user."
msgstr ""

#: kivy.modules.console.Console.add_panel:6 of
msgid ""
"`cb_deactivate` is a callable that will be called when the panel is "
"deactivated or when the console will hide."
msgstr ""

#: kivy.modules.console.Console.add_panel:9 of
msgid ""
"`cb_refresh` is an optional callable that is called if the user click "
"again on the button for display the panel"
msgstr ""

#: kivy.modules.console.Console.add_panel:12 of
msgid ""
"When activated, it's up to the panel to display a content in the Console "
"by using :meth:`set_content`."
msgstr ""

#: kivy.modules.console.Console.add_toolbar_widget:1 of
msgid ""
"Add a widget in the top left toolbar of the Console. Use `right=True` if "
"you wanna add the widget at the right instead."
msgstr ""

#: ../../docstring kivy.modules.console.Console.addons:1 of
msgid "Array of addons that will be created at Console creation"
msgstr ""

#: kivy.modules.console.Console.highlight_at:1 of
msgid ""
"Select a widget from a x/y window coordinate. This is mostly used "
"internally when Select mode is activated"
msgstr ""

#: ../../docstring kivy.modules.console.Console.inspect_enabled:1 of
msgid ""
"Indicate if the inspector inspection is enabled. If yes, the next touch "
"down will select a the widget under the touch"
msgstr ""

#: ../../docstring kivy.modules.console.Console.mode:1 of
msgid ""
"Display mode of the Console, either docked at the bottom, or as a "
"floating window."
msgstr ""

#: kivy.modules.console.Console.on_touch_down:1 of
msgid "Receive a touch down event."
msgstr ""

#: kivy.modules.console.Console.on_touch_down kivy.modules.console.start of
msgid "Parameters"
msgstr ""

#: kivy.modules.console.Console.on_touch_down:7 of
msgid "`touch`: :class:`~kivy.input.motionevent.MotionEvent` class"
msgstr ""

#: kivy.modules.console.Console.on_touch_down:5 of
msgid ""
"Touch received. The touch is in parent coordinates. See "
":mod:`~kivy.uix.relativelayout` for a discussion on coordinate systems."
msgstr ""

#: kivy.modules.console.Console.on_touch_down of
msgid "Returns"
msgstr ""

#: kivy.modules.console.Console.on_touch_down:9 of
msgid ""
"bool If True, the dispatching of the touch event will stop. If False, the"
" event will continue to be dispatched to the rest of the widget tree."
msgstr ""

#: kivy.modules.console.Console.on_touch_move:1 of
msgid "Receive a touch move event. The touch is in parent coordinates."
msgstr ""

#: kivy.modules.console.Console.on_touch_move:3
#: kivy.modules.console.Console.on_touch_up:3 of
msgid "See :meth:`on_touch_down` for more information."
msgstr ""

#: kivy.modules.console.Console.on_touch_up:1 of
msgid "Receive a touch up event. The touch is in parent coordinates."
msgstr ""

#: kivy.modules.console.Console.pick:1 of
msgid "Pick a widget at x/y, given a root `widget`"
msgstr ""

#: kivy.modules.console.Console.remove_toolbar_widget:1 of
msgid "Remove a widget from the toolbar"
msgstr ""

#: kivy.modules.console.Console.set_content:1 of
msgid "Replace the Console content with a new one."
msgstr ""

#: ../../docstring kivy.modules.console.Console.widget:1 of
msgid "Current widget being selected"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.object`"
msgstr ""

#: kivy.modules.console.ConsoleAddon:1 of
msgid "Base class for implementing addons"
msgstr ""

#: kivy.modules.console.ConsoleAddon.activate:1 of
msgid ""
"Method called when the addon is activated by the console (when the "
"console is displayed)"
msgstr ""

#: ../../docstring kivy.modules.console.ConsoleAddon.console:1 of
msgid "Console instance"
msgstr ""

#: kivy.modules.console.ConsoleAddon.deactivate:1 of
msgid ""
"Method called when the addon is deactivated by the console (when the "
"console is hidden)"
msgstr ""

#: kivy.modules.console.ConsoleAddon.init:1 of
msgid "Method called when the addon is instantiated by the Console"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.button.Button`"
msgstr ""

#: kivy.modules.console.ConsoleButton:1 of
msgid "Button specialized for the Console"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.label.Label`"
msgstr ""

#: kivy.modules.console.ConsoleLabel:1 of
msgid "LabelButton specialized for the Console"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.togglebutton.ToggleButton`"
msgstr ""

#: kivy.modules.console.ConsoleToggleButton:1 of
msgid "ToggleButton specialized for the Console"
msgstr ""

#: kivy.modules.console.start:1 of
msgid ""
"Create an Console instance attached to the *ctx* and bound to the "
"Window's :meth:`~kivy.core.window.WindowBase.on_keyboard` event for "
"capturing the keyboard shortcut."
msgstr ""

#: kivy.modules.console.start:6 of
msgid "`win`: A :class:`Window <kivy.core.window.WindowBase>`"
msgstr ""

#: kivy.modules.console.start:7 of
msgid "The application Window to bind to."
msgstr ""

#: kivy.modules.console.start:8 of
msgid "`ctx`: A :class:`~kivy.uix.widget.Widget` or subclass"
msgstr ""

#: kivy.modules.console.start:9 of
msgid "The Widget to be inspected."
msgstr ""

#: kivy.modules.console.stop:1 of
msgid "Stop and unload any active Inspectors for the given *ctx*."
msgstr ""

