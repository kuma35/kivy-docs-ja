# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.uix.effectwidget.rst:3
msgid "EffectWidget"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:4
msgid "The :class:`EffectWidget` is able to apply a variety of fancy graphical effects to its children. It works by rendering to a series of :class:`~kivy.graphics.Fbo` instances with custom opengl fragment shaders. As such, effects can freely do almost anything, from inverting the colors of the widget, to anti-aliasing, to emulating the appearance of a crt monitor!"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:13
msgid "This code is still experimental, and its API is subject to change in a future version."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:16
msgid "The basic usage is as follows::"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:22
msgid "The equivalent in kv would be::"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:30
msgid "The effects can be a list of effects of any length, and they will be applied sequentially."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:33
msgid "The module comes with a range of prebuilt effects, but the interface is designed to make it easy to create your own. Instead of writing a full glsl shader, you provide a single function that takes some inputs based on the screen (current pixel color, current widget texture etc.). See the sections below for more information."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:40
msgid "Usage Guidelines"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:42
msgid "It is not efficient to resize an :class:`EffectWidget`, as the :class:`~kivy.graphics.Fbo` is recreated on each resize event. If you need to resize frequently, consider doing things a different way."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:47
msgid "Although some effects have adjustable parameters, it is *not* efficient to animate these, as the entire shader is reconstructed every time. You should use glsl uniform variables instead. The :class:`AdvancedEffectBase` may make this easier."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:53
msgid "The :class:`EffectWidget` *cannot* draw outside its own widget area (pos -> pos + size). Any child widgets overlapping the boundary will be cut off at this point."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:58
msgid "Provided Effects"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:60
msgid "The module comes with several pre-written effects. Some have adjustable properties (e.g. blur radius). Please see the individual effect documentation for more details."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:64
msgid ":class:`MonochromeEffect` - makes the widget grayscale."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:65
msgid ":class:`InvertEffect` - inverts the widget colors."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:66
msgid ":class:`ChannelMixEffect` - swaps color channels."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:67
msgid ":class:`ScanlinesEffect` - displays flickering scanlines."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:68
msgid ":class:`PixelateEffect` - pixelates the image."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:69
msgid ":class:`HorizontalBlurEffect` - Gaussuan blurs horizontally."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:70
msgid ":class:`VerticalBlurEffect` - Gaussuan blurs vertically."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:71
msgid ":class:`FXAAEffect` - applies a very basic anti-aliasing."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:74
msgid "Creating Effects"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:76
msgid "Effects are designed to make it easy to create and use your own transformations. You do this by creating and using an instance of :class:`EffectBase` with your own custom :attr:`EffectBase.glsl` property."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:81
msgid "The glsl property is a string representing part of a glsl fragment shader. You can include as many functions as you like (the string is simply spliced into the whole shader), but it must implement a function :code:`effect` as below::"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:92
msgid "The full shader will calculate the normal pixel color at each point, then call your :code:`effect` function to transform it. The parameters are:"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:96
msgid "**color**: The normal color of the current pixel (i.e. texture sampled at tex_coords)."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:98
msgid "**texture**: The texture containing the widget's normal background."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:99
msgid "**tex_coords**: The normal texture_coords used to access texture."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:100
msgid "**coords**: The pixel indices of the current pixel."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:102
msgid "The shader code also has access to two useful uniform variables, :code:`time` containing the time (in seconds) since the program start, and :code:`resolution` containing the shape (x pixels, y pixels) of the widget."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:107
msgid "For instance, the following simple string (taken from the `InvertEffect`) would invert the input color but set alpha to 1.0::"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget:115
msgid "You can also set the glsl by automatically loading the string from a file, simply set the :attr:`EffectBase.source` property of an effect."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.effectwidget.EffectBase`"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.AdvancedEffectBase:1
msgid "An :class:`EffectBase` with additional behavior to easily set and update uniform variables in your shader."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.AdvancedEffectBase:4
msgid "This class is provided for convenience when implementing your own effects: it is not used by any of those provided with Kivy."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.AdvancedEffectBase:7
msgid "In addition to your base glsl string that must be provided as normal, the :class:`AdvancedEffectBase` has an extra property :attr:`uniforms`, a dictionary of name-value pairs. Whenever a value is changed, the new value for the uniform variable is uploaded to the shader."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.AdvancedEffectBase:13
msgid "You must still manually declare your uniform variables at the top of your glsl string."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.AdvancedEffectBase.set_fbo_shader:1
#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectBase.set_fbo_shader:1
msgid "Sets the :class:`~kivy.graphics.Fbo`'s shader by splicing the :attr:`glsl` string into a full fragment shader."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.AdvancedEffectBase.set_fbo_shader:4
#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectBase.set_fbo_shader:4
msgid "The full shader is made up of :code:`shader_header + shader_uniforms + self.glsl + shader_footer_effect`."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.AdvancedEffectBase.uniforms:1
msgid "A dictionary of uniform variable names and their values. These are automatically uploaded to the :attr:`fbo` shader if appropriate."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.AdvancedEffectBase.uniforms:4
msgid "uniforms is a :class:`~kivy.properties.DictProperty` and defaults to {}."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.ChannelMixEffect:1
msgid "Mixes the color channels of the input according to the order property. Channels may be arbitrarily rearranged or repeated."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.ChannelMixEffect.order:1
msgid "The new sorted order of the rgb channels."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.ChannelMixEffect.order:3
msgid "order is a :class:`~kivy.properties.ListProperty` and defaults to [1, 2, 0], corresponding to (g, b, r)."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.event.EventDispatcher`"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectBase:1
msgid "The base class for GLSL effects. It simply returns its input."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectBase:3
msgid "See the module documentation for more details."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectBase.fbo:1
msgid "The fbo currently using this effect. The :class:`EffectBase` automatically handles this."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectBase.fbo:4
msgid ":attr:`fbo` is an :class:`~kivy.properties.ObjectProperty` and defaults to None."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectBase.glsl:1
msgid "The glsl string defining your effect function. See the module documentation for more details."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectBase.glsl:4
msgid ":attr:`glsl` is a :class:`~kivy.properties.StringProperty` and defaults to a trivial effect that returns its input."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectBase.source:1
msgid "The (optional) filename from which to load the :attr:`glsl` string."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectBase.source:4
msgid ":attr:`source` is a :class:`~kivy.properties.StringProperty` and defaults to ''."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.relativelayout.RelativeLayout`"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget:1
msgid "Widget with the ability to apply a series of graphical effects to its children. See the module documentation for more information on setting effects and creating your own."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.add_widget:1
msgid "Add a new widget as a child of this widget."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.add_widget:0
#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.remove_widget:0
msgid "Parameters"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.add_widget:4
#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.remove_widget:5
msgid "`widget`: :class:`Widget`"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.add_widget:5
msgid "Widget to add to our list of children."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.add_widget:12
msgid "`index`: int, defaults to 0"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.add_widget:7
msgid "Index to insert the widget in the list. Notice that the default of 0 means the widget is inserted at the beginning of the list and will thus be drawn on top of other sibling widgets. For a full discussion of the index and widget hierarchy, please see the :doc:`Widgets Programming Guide <guide/widgets>`."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.add_widget:18
msgid "`canvas`: str, defaults to None"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.add_widget:15
msgid "Canvas to add widget's canvas to. Can be 'before', 'after' or None for the default canvas."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectWidget.background_color:1
msgid "This defines the background color to be used for the fbo in the EffectWidget."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectWidget.background_color:4
msgid ":attr:`background_color` is a :class:`ListProperty` defaults to (0, 0, 0, 0)"
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.clear_widgets:1
msgid "Remove all (or the specified) :attr:`~Widget.children` of this widget. If the 'children' argument is specified, it should be a list (or filtered list) of children of the current widget."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.clear_widgets:5
msgid "The `children` argument can be used to specify the children you want to remove."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.clear_widgets:10
msgid "Specifying an empty ``children`` list leaves the widgets unchanged. Previously it was treated like ``None`` and all children were removed."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectWidget.effects:1
msgid "List of all the effects to be applied. These should all be instances or subclasses of :class:`EffectBase`."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectWidget.effects:4
msgid "effects is a :class:`ListProperty` and defaults to []."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectWidget.fbo_list:1
msgid "(internal) List of all the fbos that are being used to apply the effects."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectWidget.fbo_list:4
msgid "fbo_list is a :class:`ListProperty` and defaults to []."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.refresh_fbo_setup:1
msgid "(internal) Creates and assigns one :class:`~kivy.graphics.Fbo` per effect, and makes sure all sizes etc. are correct and consistent."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.remove_widget:1
msgid "Remove a widget from the children of this widget."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.EffectWidget.remove_widget:5
msgid "Widget to remove from our children list."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectWidget.texture:1
msgid "The output texture of the final :class:`~kivy.graphics.Fbo` after all effects have been applied."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.EffectWidget.texture:4
msgid "texture is an :class:`~kivy.properties.ObjectProperty` and defaults to None."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.FXAAEffect:1
msgid "Applies very simple anti-aliasing via fxaa."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.HorizontalBlurEffect:1
msgid "Blurs the input horizontally, with the width given by :attr:`~HorizontalBlurEffect.size`."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.HorizontalBlurEffect.size:1
#: ../../docstring of kivy.uix.effectwidget.VerticalBlurEffect.size:1
msgid "The blur width in pixels."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.HorizontalBlurEffect.size:3
#: ../../docstring of kivy.uix.effectwidget.VerticalBlurEffect.size:3
msgid "size is a :class:`~kivy.properties.NumericProperty` and defaults to 4.0."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.InvertEffect:1
msgid "Inverts the colors in the input."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.MonochromeEffect:1
msgid "Returns its input colors in monochrome."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.PixelateEffect:1
msgid "Pixelates the input according to its :attr:`~PixelateEffect.pixel_size`"
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.PixelateEffect.pixel_size:1
msgid "Sets the size of a new 'pixel' in the effect, in terms of number of 'real' pixels."
msgstr ""

#: ../../docstring of kivy.uix.effectwidget.PixelateEffect.pixel_size:4
msgid "pixel_size is a :class:`~kivy.properties.NumericProperty` and defaults to 10."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.ScanlinesEffect:1
msgid "Adds scanlines to the input."
msgstr ""

#: ../../../kivy/uix/effectwidget.py:docstring of kivy.uix.effectwidget.VerticalBlurEffect:1
msgid "Blurs the input vertically, with the width given by :attr:`~VerticalBlurEffect.size`."
msgstr ""
