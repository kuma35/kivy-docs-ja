# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/api-kivy.config.rst:3
msgid "Configuration object"
msgstr ""

#: kivy.config:2 of
msgid ""
"The :class:`Config` object is an instance of a modified Python "
"ConfigParser. See the `ConfigParser documentation "
"<http://docs.python.org/library/configparser.html>`_ for more "
"information."
msgstr ""

#: kivy.config:6 of
msgid ""
"Kivy has a configuration file which determines the default settings. In "
"order to change these settings, you can alter this file manually or use "
"the Config object. Please see the :ref:`Configure Kivy` section for more "
"information."
msgstr ""

#: kivy.config:12 of
msgid "Applying configurations"
msgstr ""

#: kivy.config:14 of
msgid ""
"Configuration options control the initialization of the "
":class:`~kivy.app.App`. In order to avoid situations where the config "
"settings do not work or are not applied before window creation (like "
"setting an initial window size), :meth:`Config.set "
"<kivy.config.ConfigParser.set>` should be used before importing any other"
" Kivy modules. Ideally, this means setting them right at the start of "
"your main.py script."
msgstr ""

#: kivy.config:21 of
msgid ""
"Alternatively, you can save these settings permanently using "
":meth:`Config.set <ConfigParser.set>` then :meth:`Config.write "
"<ConfigParser.write>`. In this case, you will need to restart the app for"
" the changes to take effect. Note that this approach will effect all Kivy"
" apps system wide."
msgstr ""

#: kivy.config:27 of
msgid "Please note that no underscores (`_`) are allowed in the section name."
msgstr ""

#: kivy.config:30 of
msgid "Usage of the Config object"
msgstr ""

#: kivy.config:32 of
msgid "To read a configuration token from a particular section::"
msgstr ""

#: kivy.config:38 of
msgid "Change the configuration and save it::"
msgstr ""

#: kivy.config:43 of
msgid ""
"For information on configuring your :class:`~kivy.app.App`, please see "
"the :ref:`Application configuration` section."
msgstr ""

#: kivy.config:46 of
msgid ""
"The ConfigParser should work correctly with utf-8 now. The values are "
"converted from ascii to unicode only when needed. The method get() "
"returns utf-8 strings."
msgstr ""

#: kivy.config:52 of
msgid "Changing configuration with environment variables"
msgstr ""

#: kivy.config:54 of
msgid ""
"Since 1.11.0, it is now possible to change the configuration using "
"environment variables. They take precedence on the loaded config.ini. The"
" format is::"
msgstr ""

#: kivy.config:60 of
msgid "For example:"
msgstr ""

#: kivy.config:62 of
msgid "KCFG_GRAPHICS_FULLSCREEN=auto ... KCFG_KIVY_LOG_LEVEL=warning ..."
msgstr ""

#: kivy.config:65 of
msgid "Or in your file before any kivy import:"
msgstr ""

#: kivy.config:67 of
msgid "import os os.environ[\"KCFG_KIVY_LOG_LEVEL\"] = \"warning\""
msgstr ""

#: kivy.config:70 of
msgid ""
"If you don't want to map any environment variables, you can disable the "
"behavior::"
msgstr ""

#: kivy.config:79 of
msgid "Available configuration tokens"
msgstr ""

#: kivy.config of
msgid "kivy"
msgstr ""

#: kivy.config:89 of
msgid "`default_font`: list"
msgstr ""

#: kivy.config:87 of
msgid ""
"Default fonts used for widgets displaying any text. It defaults to "
"['Roboto', 'data/fonts/Roboto-Regular.ttf', 'data/fonts/Roboto-"
"Italic.ttf', 'data/fonts/Roboto-Bold.ttf', 'data/fonts/Roboto-"
"BoldItalic.ttf']."
msgstr ""

#: kivy.config:93 of
msgid "`desktop`: int, 0 or 1"
msgstr ""

#: kivy.config:92 of
msgid ""
"This option controls desktop OS specific features, such as enabling drag-"
"able scroll-bar in scroll views, disabling of bubbles in TextInput etc. 0"
" is disabled, 1 is enabled."
msgstr ""

#: kivy.config:96 of
msgid "`exit_on_escape`: int, 0 or 1"
msgstr ""

#: kivy.config:96 of
msgid "Enables exiting kivy when escape is pressed. 0 is disabled, 1 is enabled."
msgstr ""

#: kivy.config:100 of
msgid "`pause_on_minimize`: int, 0 or 1"
msgstr ""

#: kivy.config:99 of
msgid ""
"If set to `1`, the main loop is paused and the `on_pause` event is "
"dispatched when the window is minimized. This option is intended for "
"desktop use only. Defaults to `0`."
msgstr ""

#: kivy.config:102 of
msgid "`keyboard_layout`: string"
msgstr ""

#: kivy.config:103 of
msgid "Identifier of the layout to use."
msgstr ""

#: kivy.config:112 of
msgid "`keyboard_mode`: string"
msgstr ""

#: kivy.config:105 of
msgid "Specifies the keyboard mode to use. If can be one of the following:"
msgstr ""

#: kivy.config:107 of
msgid "'' - Let Kivy choose the best option for your current platform."
msgstr ""

#: kivy.config:108 of
msgid "'system' - real keyboard."
msgstr ""

#: kivy.config:109 of
msgid "'dock' - one virtual keyboard docked to a screen side."
msgstr ""

#: kivy.config:110 of
msgid "'multi' - one virtual keyboard for every widget request."
msgstr ""

#: kivy.config:111 of
msgid "'systemanddock' - virtual docked keyboard plus input from real keyboard."
msgstr ""

#: kivy.config:113 of
msgid "'systemandmulti' - analogous."
msgstr ""

#: kivy.config:114 of
msgid "`kivy_clock`: one of `default`, `interrupt`, `free_all`, `free_only`"
msgstr ""

#: kivy.config:115 of
msgid "The clock type to use with kivy. See :mod:`kivy.clock`."
msgstr ""

#: kivy.config:116 of
msgid "`log_dir`: string"
msgstr ""

#: kivy.config:117 of
msgid "Path of log directory."
msgstr ""

#: kivy.config:124 of
msgid "`log_enable`: int, 0 or 1"
msgstr ""

#: kivy.config:119 of
msgid "Activate file logging. 0 is disabled, 1 is enabled."
msgstr ""

#: kivy.config:122 of
msgid ""
"Logging output can also be controlled by the environment variables "
"``KIVY_LOG_MODE``, ``KIVY_NO_FILELOG`` and ``KIVY_NO_CONSOLELOG``. More "
"information is provided in the :mod:`kivy.logger` module."
msgstr ""

#: kivy.config:126 of
msgid "`log_level`: string, one of |log_levels|"
msgstr ""

#: kivy.config:127 of
msgid "Set the minimum log level to use."
msgstr ""

#: kivy.config:129 of
msgid "`log_name`: string"
msgstr ""

#: kivy.config:129 of
msgid "Format string to use for the filename of log file."
msgstr ""

#: kivy.config:137 of
msgid "`log_maxfiles`: int"
msgstr ""

#: kivy.config:132 of
msgid ""
"Keep log_maxfiles recent logfiles while purging the log directory. Set "
"'log_maxfiles' to -1 to disable logfile purging (eg keep all logfiles)."
msgstr ""

#: kivy.config:136 of
msgid ""
"You end up with 'log_maxfiles + 1' logfiles because the logger adds a new"
" one after purging."
msgstr ""

#: kivy.config:141 of
msgid "`window_icon`: string"
msgstr ""

#: kivy.config:140 of
msgid ""
"Path of the window icon. Use this if you want to replace the default "
"pygame icon."
msgstr ""

#: kivy.config of
msgid "postproc"
msgstr ""

#: kivy.config:146 of
msgid "`double_tap_distance`: float"
msgstr ""

#: kivy.config:146 of
msgid ""
"Maximum distance allowed for a double tap, normalized inside the range 0 "
"- 1000."
msgstr ""

#: kivy.config:148 of
msgid "`double_tap_time`: int"
msgstr ""

#: kivy.config:149 of
msgid "Time allowed for the detection of double tap, in milliseconds."
msgstr ""

#: kivy.config:156 of
msgid "`ignore`: list of tuples"
msgstr ""

#: kivy.config:151 of
msgid ""
"List of regions where new touches are ignored. This configuration token "
"can be used to resolve hotspot problems with DIY hardware. The format of "
"the list must be::"
msgstr ""

#: kivy.config:157 of
msgid "All the values must be inside the range 0 - 1."
msgstr ""

#: kivy.config:159 of
msgid "`jitter_distance`: int"
msgstr ""

#: kivy.config:159 of
msgid ""
"Maximum distance for jitter detection, normalized inside the range 0 - "
"1000."
msgstr ""

#: kivy.config:161 of
msgid "`jitter_ignore_devices`: string, separated with commas"
msgstr ""

#: kivy.config:162 of
msgid "List of devices to ignore from jitter detection."
msgstr ""

#: kivy.config:164 of
msgid "`retain_distance`: int"
msgstr ""

#: kivy.config:164 of
msgid ""
"If the touch moves more than is indicated by retain_distance, it will not"
" be retained. Argument should be an int between 0 and 1000."
msgstr ""

#: kivy.config:166 of
msgid "`retain_time`: int"
msgstr ""

#: kivy.config:167 of
msgid "Time allowed for a retain touch, in milliseconds."
msgstr ""

#: kivy.config:169 of
msgid "`triple_tap_distance`: float"
msgstr ""

#: kivy.config:169 of
msgid ""
"Maximum distance allowed for a triple tap, normalized inside the range 0 "
"- 1000."
msgstr ""

#: kivy.config:172 of
msgid "`triple_tap_time`: int"
msgstr ""

#: kivy.config:172 of
msgid "Time allowed for the detection of triple tap, in milliseconds."
msgstr ""

#: kivy.config of
msgid "graphics"
msgstr ""

#: kivy.config:176 of
msgid "`borderless`: int, one of 0 or 1"
msgstr ""

#: kivy.config:176 of
msgid ""
"If set to `1`, removes the window border/decoration. Window resizing must"
" also be disabled to hide the resizing border."
msgstr ""

#: kivy.config:181 of
msgid "`custom_titlebar`: int, one of 0 or 1"
msgstr ""

#: kivy.config:179 of
msgid ""
"If set to `1`, removes the window border and allows user to set a Widget "
"as a titlebar see "
":meth:`~kivy.core.window.WindowBase.set_custom_titlebar` for detailed "
"usage"
msgstr ""

#: kivy.config:184 of
msgid "`custom_titlebar_border`: int, defaults to 5"
msgstr ""

#: kivy.config:184 of
msgid ""
"sets the how many pixles off the border should be used as the rezising "
"frame"
msgstr ""

#: kivy.config:190 of
msgid "`window_state`: string , one of 'visible', 'hidden', 'maximized'"
msgstr ""

#: kivy.config:187 of
msgid "or 'minimized'"
msgstr ""

#: kivy.config:189 of
msgid ""
"Sets the window state, defaults to 'visible'. This option is available "
"only for the SDL2 window provider and it should be used on desktop OSes."
msgstr ""

#: kivy.config:192 of
msgid "`fbo`: string, one of 'hardware', 'software' or 'force-hardware'"
msgstr ""

#: kivy.config:193 of
msgid "Selects the FBO backend to use."
msgstr ""

#: kivy.config:200 of
msgid "`fullscreen`: int or string, one of 0, 1, 'fake' or 'auto'"
msgstr ""

#: kivy.config:195 of
msgid ""
"Activate fullscreen. If set to `1`, a resolution of `width` times "
"`height` pixels will be used. If set to `auto`, your current display's "
"resolution will be used instead. This is most likely what you want. If "
"you want to place the window in another display, use `fake`, or set the "
"`borderless` option from the graphics section, then adjust `width`, "
"`height`, `top` and `left`."
msgstr ""

#: kivy.config:203 of
msgid "`height`: int"
msgstr ""

#: kivy.config:203 of
msgid ""
"Height of the :class:`~kivy.core.window.Window`, not used if `fullscreen`"
" is set to `auto`."
msgstr ""

#: kivy.config:205 of
msgid "`left`: int"
msgstr ""

#: kivy.config:206 of
msgid "Left position of the :class:`~kivy.core.window.Window`."
msgstr ""

#: kivy.config:211 of
msgid "`maxfps`: int, defaults to 60"
msgstr ""

#: kivy.config:208 of
msgid "Maximum FPS allowed."
msgstr ""

#: kivy.config:211 of
msgid "Setting maxfps to 0 will lead to max CPU usage."
msgstr ""

#: kivy.config:221 of
msgid "'multisamples': int, defaults to 2"
msgstr ""

#: kivy.config:214 of
msgid ""
"Sets the `MultiSample Anti-Aliasing (MSAA) <http://en.wikipedia.org/wiki"
"/Multisample_anti-aliasing>`_ level. Increasing this value results in "
"smoother graphics but at the cost of processing time."
msgstr ""

#: kivy.config:220 of
msgid ""
"This feature is limited by device hardware support and will have no "
"effect on devices which do not support the level of MSAA requested."
msgstr ""

#: kivy.config:224 of
msgid "`position`: string, one of 'auto' or 'custom'"
msgstr ""

#: kivy.config:224 of
msgid ""
"Position of the window on your display. If `auto` is used, you have no "
"control of the initial position: `top` and `left` are ignored."
msgstr ""

#: kivy.config:226 of
msgid "`show_cursor`: int, one of 0 or 1"
msgstr ""

#: kivy.config:227 of
msgid "Set whether or not the cursor is shown on the window."
msgstr ""

#: kivy.config:228 of
msgid "`top`: int"
msgstr ""

#: kivy.config:229 of
msgid "Top position of the :class:`~kivy.core.window.Window`."
msgstr ""

#: kivy.config:231 of
msgid "`resizable`: int, one of 0 or 1"
msgstr ""

#: kivy.config:231 of
msgid ""
"If 0, the window will have a fixed size. If 1, the window will be "
"resizable."
msgstr ""

#: kivy.config:233 of
msgid "`rotation`: int, one of 0, 90, 180 or 270"
msgstr ""

#: kivy.config:234 of
msgid "Rotation of the :class:`~kivy.core.window.Window`."
msgstr ""

#: kivy.config:236 of
msgid "`width`: int"
msgstr ""

#: kivy.config:236 of
msgid ""
"Width of the :class:`~kivy.core.window.Window`, not used if `fullscreen` "
"is set to `auto`."
msgstr ""

#: kivy.config:238 of
msgid "`minimum_width`: int"
msgstr ""

#: kivy.config:239 of
msgid "Minimum width to restrict the window to. (sdl2 only)"
msgstr ""

#: kivy.config:240 of
msgid "`minimum_height`: int"
msgstr ""

#: kivy.config:241 of
msgid "Minimum height to restrict the window to. (sdl2 only)"
msgstr ""

#: kivy.config:247 of
msgid "`min_state_time`: float, defaults to .035"
msgstr ""

#: kivy.config:243 of
msgid ""
"Minimum time for widgets to display a given visual state. This attrib is "
"currently used by widgets like :class:`~kivy.uix.dropdown.DropDown` & "
":class:`~kivy.uix.behaviors.buttonbehavior.ButtonBehavior` to make sure "
"they display their current visual state for the given time."
msgstr ""

#: kivy.config:250 of
msgid "`allow_screensaver`: int, one of 0 or 1, defaults to 1"
msgstr ""

#: kivy.config:250 of
msgid ""
"Allow the device to show a screen saver, or to go to sleep on mobile "
"devices. Only works for the sdl2 window provider."
msgstr ""

#: kivy.config:256 of
msgid "`vsync`: `none`, empty value, or integers"
msgstr ""

#: kivy.config:253 of
msgid ""
"Whether vsync is enabled, currently only used with sdl2 window. Possible "
"values are `none` or empty value -- leaves it unchanged, ``0`` -- "
"disables vsync, ``1`` or larger -- sets vsync interval, ``-1`` sets "
"adaptive vsync. It falls back to 1 if setting to ``2+`` or ``-1`` failed."
" See ``SDL_GL_SetSwapInterval``."
msgstr ""

#: kivy.config:260 of
msgid "`verify_gl_main_thread`: int, 1 or 0, defaults to 1"
msgstr ""

#: kivy.config:259 of
msgid ""
"Whether to check if code that changes any gl instructions is running "
"outside the main thread and then raise an error."
msgstr ""

#: kivy.config of
msgid "input"
msgstr ""

#: kivy.config:264 of
msgid "You can create new input devices using this syntax::"
msgstr ""

#: kivy.config:275 of
msgid ""
"Check the providers in :mod:`kivy.input.providers` for the syntax to use "
"inside the configuration file."
msgstr ""

#: kivy.config of
msgid "widgets"
msgstr ""

#: kivy.config:284 of
msgid "`scroll_distance`: int"
msgstr ""

#: kivy.config:281 of
msgid ""
"Default value of the "
":attr:`~kivy.uix.scrollview.ScrollView.scroll_distance` property used by "
"the :class:`~kivy.uix.scrollview.ScrollView` widget. Check the widget "
"documentation for more information."
msgstr ""

#: kivy.config:294 of
msgid "`scroll_friction`: float"
msgstr ""

#: kivy.config:287 of
msgid ""
"Default value of the "
":attr:`~kivy.uix.scrollview.ScrollView.scroll_friction` property used by "
"the :class:`~kivy.uix.scrollview.ScrollView` widget. Check the widget "
"documentation for more information."
msgstr ""

#: kivy.config:292 kivy.config:308 kivy.config:318 of
msgid "Please use :class:`~kivy.uix.scrollview.ScrollView.effect_cls` instead."
msgstr ""

#: kivy.config:300 of
msgid "`scroll_timeout`: int"
msgstr ""

#: kivy.config:297 of
msgid ""
"Default value of the "
":attr:`~kivy.uix.scrollview.ScrollView.scroll_timeout` property used by "
"the  :class:`~kivy.uix.scrollview.ScrollView` widget. Check the widget "
"documentation for more information."
msgstr ""

#: kivy.config:310 of
msgid "`scroll_stoptime`: int"
msgstr ""

#: kivy.config:303 of
msgid ""
"Default value of the "
":attr:`~kivy.uix.scrollview.ScrollView.scroll_stoptime` property used by "
"the :class:`~kivy.uix.scrollview.ScrollView` widget. Check the widget "
"documentation for more information."
msgstr ""

#: kivy.config:320 of
msgid "`scroll_moves`: int"
msgstr ""

#: kivy.config:313 of
msgid ""
"Default value of the :attr:`~kivy.uix.scrollview.ScrollView.scroll_moves`"
" property used by the :class:`~kivy.uix.scrollview.ScrollView` widget. "
"Check the widget documentation for more information."
msgstr ""

#: kivy.config of
msgid "modules"
msgstr ""

#: kivy.config:324 of
msgid "You can activate modules with this syntax::"
msgstr ""

#: kivy.config:328 of
msgid ""
"Anything after the = will be passed to the module as arguments. Check the"
" specific module's documentation for a list of accepted arguments."
msgstr ""

#: kivy.config:332 of
msgid "`implementation` has been added to the network section."
msgstr ""

#: kivy.config:335 of
msgid ""
"`vsync` has been added to the graphics section. `verify_gl_main_thread` "
"has been added to the graphics section."
msgstr ""

#: kivy.config:339 of
msgid ""
"`min_state_time`  and `allow_screensaver` have been added to the "
"`graphics` section. `kivy_clock` has been added to the kivy section. "
"`default_font` has beed added to the kivy section. `useragent` has been "
"added to the network section."
msgstr ""

#: kivy.config:346 of
msgid ""
"`borderless` and `window_state` have been added to the graphics section. "
"The `fake` setting of the `fullscreen` option has been deprecated, use "
"the `borderless` option instead. `pause_on_minimize` has been added to "
"the kivy section."
msgstr ""

#: kivy.config:352 of
msgid ""
"`systemanddock` and `systemandmulti` has been added as possible values "
"for `keyboard_mode` in the kivy section. `exit_on_escape` has been added "
"to the kivy section."
msgstr ""

#: kivy.config:357 of
msgid "`resizable` has been added to graphics section."
msgstr ""

#: kivy.config:360 of
msgid ""
"tuio no longer listens by default. Window icons are not copied to user "
"directory anymore. You can still set a new window icon by using the "
"``window_icon`` config setting."
msgstr ""

#: kivy.config:365 of
msgid ""
"`scroll_timeout`, `scroll_distance` and `scroll_friction` have been "
"added. `list_friction`, `list_trigger_distance` and `list_friction_bound`"
" have been removed. `keyboard_type` and `keyboard_layout` have been "
"removed from the widget. `keyboard_mode` and `keyboard_layout` have been "
"added to the kivy section."
msgstr ""

#: ../../docstring kivy.config.Config:1 of
msgid ""
"The default Kivy configuration object. This is a :class:`ConfigParser` "
"instance with the :attr:`~kivy.config.ConfigParser.name` set to 'kivy'."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`configparser.RawConfigParser`, :class:`builtins.object`"
msgstr ""

#: kivy.config.ConfigParser:1 of
msgid ""
"Enhanced ConfigParser class that supports the addition of default "
"sections and default values."
msgstr ""

#: kivy.config.ConfigParser:4 of
msgid ""
"By default, the kivy ConfigParser instance, :attr:`~kivy.config.Config`, "
"is named `'kivy'` and the ConfigParser instance used by the "
":meth:`App.build_settings <~kivy.app.App.build_settings>` method is named"
" `'app'`."
msgstr ""

#: kivy.config.ConfigParser kivy.config.ConfigParser.get_configparser of
msgid "Parameters"
msgstr ""

#: kivy.config.ConfigParser:11 kivy.config.ConfigParser.get_configparser:5 of
msgid "`name`: string"
msgstr ""

#: kivy.config.ConfigParser:11 of
msgid "The name of the instance. See :attr:`name`. Defaults to `''`."
msgstr ""

#: kivy.config.ConfigParser:13 of
msgid ""
"Each ConfigParser can now be :attr:`named <name>`. You can get the "
"ConfigParser associated with a name using :meth:`get_configparser`. In "
"addition, you can now control the config values with "
":class:`~kivy.properties.ConfigParserProperty`."
msgstr ""

#: kivy.config.ConfigParser.add_callback:1 of
msgid ""
"Add a callback to be called when a specific section or key has changed. "
"If you don't specify a section or key, it will call the callback for all "
"section/key changes."
msgstr ""

#: kivy.config.ConfigParser.add_callback:5 of
msgid "Callbacks will receive 3 arguments: the section, key and value."
msgstr ""

#: kivy.config.ConfigParser.adddefaultsection:1 of
msgid "Add a section if the section is missing."
msgstr ""

#: kivy.config.ConfigParser.get:1 of
msgid "Get an option value for a given section."
msgstr ""

#: kivy.config.ConfigParser.get:3 of
msgid ""
"If `vars' is provided, it must be a dictionary. The option is looked up "
"in `vars' (if provided), `section', and in `DEFAULTSECT' in that order. "
"If the key is not found and `fallback' is provided, it is used as a "
"fallback value. `None' can be provided as a `fallback' value."
msgstr ""

#: kivy.config.ConfigParser.get:8 of
msgid ""
"If interpolation is enabled and the optional argument `raw' is False, all"
" interpolations are expanded in the return values."
msgstr ""

#: kivy.config.ConfigParser.get:11 of
msgid "Arguments `raw', `vars', and `fallback' are keyword only."
msgstr ""

#: kivy.config.ConfigParser.get:13 of
msgid "The section DEFAULT is special."
msgstr ""

#: kivy.config.ConfigParser.get_configparser:1 of
msgid ""
"Returns the :class:`ConfigParser` instance whose name is `name`, or None "
"if not found."
msgstr ""

#: kivy.config.ConfigParser.get_configparser:6 of
msgid "The name of the :class:`ConfigParser` instance to return."
msgstr ""

#: kivy.config.ConfigParser.getdefault:1 of
msgid ""
"Get the value of an option in the specified section. If not found, it "
"will return the default value."
msgstr ""

#: kivy.config.ConfigParser.getdefaultint:1 of
msgid ""
"Get the value of an option in the specified section. If not found, it "
"will return the default value. The value will always be returned as an "
"integer."
msgstr ""

#: kivy.config.ConfigParser.name:1 of
msgid ""
"The name associated with this ConfigParser instance, if not `''`. "
"Defaults to `''`. It can be safely changed dynamically or set to `''`."
msgstr ""

#: kivy.config.ConfigParser.name:4 of
msgid ""
"When a ConfigParser is given a name, that config object can be retrieved "
"using :meth:`get_configparser`. In addition, that config instance can "
"also be used with a :class:`~kivy.properties.ConfigParserProperty` "
"instance that set its `config` value to this name."
msgstr ""

#: kivy.config.ConfigParser.name:10 of
msgid ""
"Setting more than one ConfigParser with the same name will raise a "
"`ValueError`."
msgstr ""

#: kivy.config.ConfigParser.read:1 of
msgid ""
"Read only one filename. In contrast to the original ConfigParser of "
"Python, this one is able to read only one file at a time. The last read "
"file will be used for the :meth:`write` method."
msgstr ""

#: kivy.config.ConfigParser.read:5 of
msgid ":meth:`read` now calls the callbacks if read changed any values."
msgstr ""

#: kivy.config.ConfigParser.remove_callback:1 of
msgid ""
"Removes a callback added with :meth:`add_callback`. "
":meth:`remove_callback` must be called with the same parameters as "
":meth:`add_callback`."
msgstr ""

#: kivy.config.ConfigParser.remove_callback:5 of
msgid "Raises a `ValueError` if not found."
msgstr ""

#: kivy.config.ConfigParser.set:1 of
msgid ""
"Functions similarly to PythonConfigParser's set method, except that the "
"value is implicitly converted to a string."
msgstr ""

#: kivy.config.ConfigParser.setall:1 of
msgid ""
"Sets multiple key-value pairs in a section. keyvalues should be a "
"dictionary containing the key-value pairs to be set."
msgstr ""

#: kivy.config.ConfigParser.setdefault:1 of
msgid "Set the default value for an option in the specified section."
msgstr ""

#: kivy.config.ConfigParser.setdefaults:1 of
msgid ""
"Set multiple key-value defaults in a section. keyvalues should be a "
"dictionary containing the new key-value defaults."
msgstr ""

#: kivy.config.ConfigParser.update_config:1 of
msgid ""
"Upgrade the configuration based on a new default config file. Overwrite "
"any existing values if overwrite is True."
msgstr ""

#: kivy.config.ConfigParser.write:1 of
msgid ""
"Write the configuration to the last file opened using the :meth:`read` "
"method."
msgstr ""

#: kivy.config.ConfigParser.write:4 of
msgid "Return True if the write finished successfully, False otherwise."
msgstr ""

