# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/gettingstarted/events.rst:2
msgid "Events"
msgstr ""

#: ../../sources/gettingstarted/events.rst:4
msgid ""
"Kivy is mostly `event-based <http://en.wikipedia.org/wiki/Event-"
"driven_programming>`_, meaning the flow of the program is determined by "
"events."
msgstr ""

#: ../../sources/gettingstarted/events.rst:7
msgid "**Clock events**"
msgstr ""

#: ../../sources/gettingstarted/events.rst:12
msgid ""
"The :doc:`/api-kivy.clock` allows you to schedule a function call in the "
"future as a one-time event with "
":meth:`~kivy.clock.ClockBase.schedule_once`, or as a repetitive event "
"with :meth:`~kivy.clock.ClockBase.schedule_interval`."
msgstr ""

#: ../../sources/gettingstarted/events.rst:16
msgid ""
"You can also create Triggered events with "
":meth:`~kivy.clock.ClockBase.create_trigger`. Triggers have the advantage"
" of being called only once per frame, even if you have scheduled multiple"
" triggers for the same callback."
msgstr ""

#: ../../sources/gettingstarted/events.rst:21
msgid "**Input events**"
msgstr ""

#: ../../sources/gettingstarted/events.rst:26
msgid ""
"All the mouse click, touch and scroll wheel events are part of the "
":class:`~kivy.input.motionevent.MotionEvent`, extended by :doc:`/api-"
"kivy.input.postproc` and dispatched through the "
":attr:`~kivy.core.window.WindowBase.on_motion` event in the "
":class:`Window <kivy.core.window.WindowBase>` class. This event then "
"generates the :meth:`~kivy.uix.widget.Widget.on_touch_down`, "
":meth:`~kivy.uix.widget.Widget.on_touch_move` and "
":meth:`~kivy.uix.widget.Widget.on_touch_up` events in the "
":class:`~kivy.uix.widget.Widget`."
msgstr ""

#: ../../sources/gettingstarted/events.rst:36
msgid "For an in-depth explanation, have a look at :doc:`/api-kivy.input`."
msgstr ""

#: ../../sources/gettingstarted/events.rst:38
msgid "**Class events**"
msgstr ""

#: ../../sources/gettingstarted/events.rst:43
msgid ""
"Our base class :class:`~kivy.event.EventDispatcher`, used by "
":class:`~kivy.uix.widget.Widget`, uses the power of our :doc:`/api-"
"kivy.properties` for dispatching changes. This means when a widget "
"changes its position or size, the corresponding event is automatically "
"fired."
msgstr ""

#: ../../sources/gettingstarted/events.rst:48
msgid ""
"In addition, you have the ability to create your own events using "
":meth:`~kivy.event.EventDispatcher.register_event_type`, as the "
"`on_press` and `on_release` events in the "
":class:`~kivy.uix.button.Button` widget demonstrate."
msgstr ""

#: ../../sources/gettingstarted/events.rst:53
msgid ""
"Another thing to note is that if you override an event, you become "
"responsible for implementing all its behaviour previously handled by the "
"base class. The easiest way to do this is to call `super()`::"
msgstr ""

#: ../../sources/gettingstarted/events.rst:65
msgid ""
"Get more familiar with events by reading the :doc:`/guide/events` "
"documentation."
msgstr ""

