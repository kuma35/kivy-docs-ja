# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/api-kivy.gesture.rst:3
msgid "Gesture recognition"
msgstr ""

#: kivy.gesture:2 of
msgid "This class allows you to easily create new gestures and compare them::"
msgstr ""

#: kivy.gesture:23 of
msgid ""
"You don't really want to do this: it's more of an example of how to "
"construct gestures dynamically. Typically, you would need a lot more "
"points, so it's better to record gestures in a file and reload them to "
"compare later. Look in the examples/gestures directory for an example of "
"how to do that."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.object`"
msgstr ""

#: kivy.gesture.Gesture:1 of
msgid ""
"A python implementation of a gesture recognition algorithm by Oleg "
"Dopertchouk: http://www.gamedev.net/reference/articles/article2039.asp"
msgstr ""

#: kivy.gesture.Gesture:4 of
msgid ""
"Implemented by Jeiel Aranal (chemikhazi@gmail.com), released into the "
"public domain."
msgstr ""

#: kivy.gesture.Gesture.add_stroke:1 of
msgid ""
"Adds a stroke to the gesture and returns the Stroke instance. Optional "
"point_list argument is a list of the mouse points for the stroke."
msgstr ""

#: kivy.gesture.Gesture.dot_product:1 of
msgid "Calculates the dot product of the gesture with another gesture."
msgstr ""

#: kivy.gesture.Gesture.get_rigid_rotation:1 of
msgid ""
"Extract the rotation to apply to a group of points to minimize the "
"distance to a second group of points. The two groups of points are "
"assumed to be centered. This is a simple version that just picks an angle"
" based on the first point of the gesture."
msgstr ""

#: kivy.gesture.Gesture.get_score:1 of
msgid "Returns the matching score of the gesture against another gesture."
msgstr ""

#: kivy.gesture.Gesture.normalize:1 of
msgid ""
"Runs the gesture normalization algorithm and calculates the dot product "
"with self."
msgstr ""

#: kivy.gesture.GestureDatabase:1 of
msgid "Class to handle a gesture database."
msgstr ""

#: kivy.gesture.GestureDatabase.add_gesture:1 of
msgid "Add a new gesture to the database."
msgstr ""

#: kivy.gesture.GestureDatabase.find:1 of
msgid "Find a matching gesture in the database."
msgstr ""

#: kivy.gesture.GestureDatabase.gesture_to_str:1 of
msgid "Convert a gesture into a unique string."
msgstr ""

#: kivy.gesture.GestureDatabase.str_to_gesture:1 of
msgid "Convert a unique string to a gesture."
msgstr ""

#: kivy.gesture.GestureStroke:1 of
msgid "Gestures can be made up of multiple strokes."
msgstr ""

#: kivy.gesture.GestureStroke.add_point:1 of
msgid "Adds a point to the stroke."
msgstr ""

#: kivy.gesture.GestureStroke.center_stroke:1 of
msgid "Centers the stroke by offsetting the points."
msgstr ""

#: kivy.gesture.GestureStroke.normalize_stroke:1 of
msgid ""
"Normalizes strokes so that every stroke has a standard number of points. "
"Returns True if stroke is normalized, False if it can't be normalized. "
"sample_points controls the resolution of the stroke."
msgstr ""

#: kivy.gesture.GestureStroke.points_distance:1 of
msgid "Returns the distance between two GesturePoints."
msgstr ""

#: kivy.gesture.GestureStroke.scale_stroke:1 of
msgid "Scales the stroke down by scale_factor."
msgstr ""

#: kivy.gesture.GestureStroke.stroke_length:1 of
msgid ""
"Finds the length of the stroke. If a point list is given, finds the "
"length of that list."
msgstr ""

