# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.uix.recycleview.layout.rst:3
msgid "RecycleView Layouts"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout:4
msgid "The Layouts handle the presentation of views for the :class:`~kivy.uix.recycleview.RecycleView`."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout:8
msgid "This module is highly experimental, its API may change in the future and the documentation is not complete at this time."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutChangeException:1
msgid "Bases: :py:class:`Exception`"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.behaviors.compoundselection.CompoundSelectionBehavior`"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior:1
msgid "The :class:`LayoutSelectionBehavior` can be combined with :class:`RecycleLayoutManagerBehavior` to allow its derived classes selection behaviors similarly to how :class:`~kivy.uix.behaviors.compoundselection.CompoundSelectionBehavior` can be used to add selection behaviors to normal layout."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior:7
msgid ":class:`RecycleLayoutManagerBehavior` manages its children differently than normal layouts or widgets so this class adapts :class:`~kivy.uix.behaviors.compoundselection.CompoundSelectionBehavior` based selection to work with :class:`RecycleLayoutManagerBehavior` as well."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior:12
msgid "Similarly to :class:`~kivy.uix.behaviors.compoundselection.CompoundSelectionBehavior`, one can select using the keyboard or touch, which calls :meth:`select_node` or :meth:`deselect_node`, or one can call these methods directly. When a item is selected or deselected :meth:`apply_selection` is called. See :meth:`apply_selection`."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.apply_selection:1
msgid "Applies the selection to the view. This is called internally when a view is displayed and it needs to be shown as selected or as not selected."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.apply_selection:5
msgid "It is called when :meth:`select_node` or :meth:`deselect_node` is called or when a view needs to be refreshed. Its function is purely to update the view to reflect the selection state. So the function may be called multiple times even if the selection state may not have changed."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.apply_selection:10
msgid "If the view is a instance of :class:`~kivy.uix.recycleview.views.RecycleDataViewBehavior`, its :meth:`~kivy.uix.recycleview.views.RecycleDataViewBehavior.apply_selection` method will be called every time the view needs to refresh the selection state. Otherwise, the this method is responsible for applying the selection."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.apply_selection:0
#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.deselect_node:0
#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:0
#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.select_node:0
msgid "Parameters"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.apply_selection:18
msgid "`index`: int"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.apply_selection:19
msgid "The index of the data item that is associated with the view."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.apply_selection:20
msgid "`view`: widget"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.apply_selection:21
msgid "The widget that is the view of this data item."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.apply_selection:22
msgid "`is_selected`: bool"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.apply_selection:23
msgid "Whether the item is selected."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.deselect_node:1
msgid "Deselects a possibly selected node."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.deselect_node:3
msgid "It is called by the controller when it deselects a node and can also be called from the outside to deselect a node directly. The derived widget should overwrite this method and change the node to its unselected state when this is called"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.deselect_node:10
#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.select_node:10
msgid "`node`"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.deselect_node:10
msgid "The node to be deselected."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.deselect_node:14
#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.select_node:17
msgid "This method must be called by the derived widget using super if it is overwritten."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.get_index_of_node:1
msgid "(internal) Returns the index of the `node` within the `selectable_nodes` returned by :meth:`get_selectable_nodes`."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.get_selectable_nodes:1
msgid "(internal) Returns a list of the nodes that can be selected. It can be overwritten by the derived widget to return the correct list."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.get_selectable_nodes:4
msgid "This list is used to determine which nodes to select with group selection. E.g. the last element in the list will be selected when home is pressed, pagedown will move (or add to, if shift is held) the selection from the current position by negative :attr:`page_count` nodes starting from the position of the currently selected node in this list and so on. Still, nodes can be selected even if they are not in this list."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.get_selectable_nodes:14
msgid "It is safe to dynamically change this list including removing, adding, or re-arranging its elements. Nodes can be selected even if they are not on this list. And selected nodes removed from the list will remain selected until :meth:`deselect_node` is called."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.get_selectable_nodes:21
msgid "Layouts display their children in the reverse order. That is, the contents of :attr:`~kivy.uix.widget.Widget.children` is displayed form right to left, bottom to top. Therefore, internally, the indices of the elements returned by this function are reversed to make it work by default for most layouts so that the final result is consistent e.g. home, although it will select the last element in this list visually, will select the first element when counting from top to bottom and left to right. If this behavior is not desired, a reversed list should be returned instead."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.get_selectable_nodes:31
msgid "Defaults to returning :attr:`~kivy.uix.widget.Widget.children`."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:1
msgid "(internal) Used by the controller to get the node at the position indicated by key. The key can be keyboard inputs, e.g. pageup, or scroll inputs from the mouse scroll wheel, e.g. scrollup. 'last_node' is the last node selected and is used to find the resulting node. For example, if the key is up, the returned node is one node up from the last node."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:8
msgid "It can be overwritten by the derived widget."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:16
msgid "`key`"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:12
msgid "str, the string used to find the desired node. It can be any of the keyboard keys, as well as the mouse scrollup, scrolldown, scrollright, and scrollleft strings. If letters are typed in quick succession, the letters will be combined before it's passed in as key and can be used to find nodes that have an associated string that starts with those letters."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:18
msgid "`last_node`"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:19
msgid "The last node that was selected."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:24
msgid "`last_node_idx`"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:21
msgid "The cached index of the last node selected in the :meth:`get_selectable_nodes` list. If the list hasn't changed it saves having to look up the index of `last_node` in that list."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:0
#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.select_node:0
msgid "Returns"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.goto_node:27
msgid "tuple, the node targeted by key and its index in the :meth:`get_selectable_nodes` list. Returning `(last_node, last_node_idx)` indicates a node wasn't found."
msgstr ""

#: ../../docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.key_selection:1
msgid "The key used to check whether a view of a data item can be selected with touch or the keyboard."
msgstr ""

#: ../../docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.key_selection:4
msgid ":attr:`key_selection` is the key in data, which if present and ``True`` will enable selection for this item from the keyboard or with a touch. When None, the default, not item will be selectable."
msgstr ""

#: ../../docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.key_selection:8
msgid ":attr:`key_selection` is a :class:`StringProperty` and defaults to None."
msgstr ""

#: ../../docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.key_selection:11
msgid "All data items can be selected directly using :meth:`select_node` or :meth:`deselect_node`, even if :attr:`key_selection` is False."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.select_node:1
msgid "Selects a node."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.select_node:3
msgid "It is called by the controller when it selects a node and can be called from the outside to select a node directly. The derived widget should overwrite this method and change the node state to selected when called."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.select_node:10
msgid "The node to be selected."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.LayoutSelectionBehavior.select_node:13
msgid "bool, True if the node was selected, False otherwise."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.object`"
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.RecycleLayoutManagerBehavior:1
msgid "A RecycleLayoutManagerBehavior is responsible for positioning views into the :attr:`RecycleView.data` within a :class:`RecycleView`. It adds new views into the data when it becomes visible to the user, and removes them when they leave the visible area."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.RecycleLayoutManagerBehavior.compute_visible_views:1
#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.RecycleLayoutManagerBehavior.set_visible_views:1
msgid "`viewport` is in coordinates of the layout manager."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.RecycleLayoutManagerBehavior.get_view_index_at:1
msgid "Return the view `index` on which position, `pos`, falls."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.RecycleLayoutManagerBehavior.get_view_index_at:3
msgid "`pos` is in coordinates of the layout manager."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.RecycleLayoutManagerBehavior.goto_view:1
msgid "Moves the views so that the view corresponding to `index` is visible."
msgstr ""

#: ../../docstring of kivy.uix.recycleview.layout.RecycleLayoutManagerBehavior.key_viewclass:1
msgid "See :attr:`RecyclerView.key_viewclass`."
msgstr ""

#: ../../../kivy/uix/recycleview/layout.py:docstring of kivy.uix.recycleview.layout.RecycleLayoutManagerBehavior.refresh_view_layout:1
msgid "`See :meth:`~kivy.uix.recycleview.views.RecycleDataAdapter.refresh_view_layout`."
msgstr ""

#: ../../docstring of kivy.uix.recycleview.layout.RecycleLayoutManagerBehavior.viewclass:1
msgid "See :attr:`RecyclerView.viewclass`."
msgstr ""
