# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.input.postproc.calibration.rst:3
msgid "Calibration"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration:4
msgid "Recalibrate input device to a specific range / offset."
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration:6
msgid "Let's say you have 3 1080p displays, the 2 firsts are multitouch. By default, both will have mixed touch, the range will conflict with each others: the 0-1 range will goes to 0-5760 px (remember, 3 * 1920 = 5760.)"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration:10
msgid "To fix it, you need to manually reference them. For example::"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration:17
msgid "Then, you can use the calibration postproc module::"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration:23
msgid "Now, the touches from the left screen will be within 0-0.3333 range, and the touches from the middle screen will be within 0.3333-0.6666 range."
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration:26
msgid "You can also match calibration rules to devices based on their provider type. This is useful when probesysfs is used to match devices. For example::"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration:32
msgid "Then to apply calibration to any mtdev device, you can assign rules to the provider name enclosed by parentheses::"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration:38
msgid "Calibrating devices like this means the device's path doesn't need to be configured ahead of time. Note that with this method, all mtdev inputs will have the same calibration applied to them. For this reason, matching by provider will typically be useful when expecting only one input device."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.object`"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:1
msgid "Recalibrate the inputs."
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:3
msgid "The configuration must go within a section named `postproc:calibration`. Within the section, you must have a line like::"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:8
msgid "If you wish to match by provider, you must have a line like::"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:0
msgid "Parameters"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:13
msgid "`xratio`: float"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:14
msgid "Value to multiply X"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:15
msgid "`yratio`: float"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:16
msgid "Value to multiply Y"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:17
msgid "`xoffset`: float"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:18
msgid "Value to add to X"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:19
msgid "`yoffset`: float"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:20
msgid "Value to add to Y"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:30
msgid "`auto`: str"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:22
msgid "If set, then the touch is transformed from screen-relative to window-relative The value is used as an indication of screen size, e.g for fullHD:"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:26
msgid "auto=1920x1080"
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:28
msgid "If present, this setting overrides all the others. This assumes the input device exactly covers the display area, if they are different, the computations will be wrong."
msgstr ""

#: ../../../kivy/input/postproc/calibration.py:docstring of kivy.input.postproc.calibration.InputPostprocCalibration:32
msgid "Added `auto` parameter"
msgstr ""
