# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/api-kivy.uix.recycleview.rst:3
msgid "RecycleView"
msgstr ""

#: kivy.uix.recycleview:4 of
msgid ""
"The RecycleView provides a flexible model for viewing selected sections "
"of large data sets. It aims to prevent the performance degradation that "
"can occur when generating large numbers of widgets in order to display "
"many data items."
msgstr ""

#: kivy.uix.recycleview:10 of
msgid ""
"Because :class:`RecycleView` reuses widgets, any state change to a single"
" widget will stay with that widget as it's reused, even if the "
":attr:`~RecycleView.data` assigned to it by the :class:`RecycleView` "
"changes. Unless the complete state is tracked in "
":attr:`~RecycleView.data` (see below)."
msgstr ""

#: kivy.uix.recycleview:16 of
#, python-format
msgid ""
"The view is generatad by processing the :attr:`~RecycleView.data`, "
"essentially a list of dicts, and uses these dicts to generate instances "
"of the :attr:`~RecycleView.viewclass` as required. Its design is based on"
" the MVC (`Model-view-controller "
"<https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller>`_) "
"pattern."
msgstr ""

#: kivy.uix.recycleview:23 of
msgid ""
"Model: The model is formed by :attr:`~RecycleView.data` you pass in via a"
" list of dicts."
msgstr ""

#: kivy.uix.recycleview:25 of
msgid ""
"View: The View is split across layout and views and implemented using "
"adapters."
msgstr ""

#: kivy.uix.recycleview:27 of
msgid ""
"Controller: The controller determines the logical interaction and is "
"implemented by :class:`RecycleViewBehavior`."
msgstr ""

#: kivy.uix.recycleview:30 of
msgid ""
"These are abstract classes and cannot be used directly. The default "
"concrete implementations are the "
":class:`~kivy.uix.recycleview.datamodel.RecycleDataModel` for the model, "
"the :class:`~kivy.uix.recyclelayout.RecycleLayout` for the view, and the "
":class:`RecycleView` for the controller."
msgstr ""

#: kivy.uix.recycleview:36 of
msgid ""
"When a RecycleView is instantiated, it automatically creates the views "
"and data classes. However, one must manually create the layout classes "
"and add them to the RecycleView."
msgstr ""

#: kivy.uix.recycleview:40 of
msgid ""
"A layout manager is automatically created as a "
":attr:`~RecycleViewBehavior.layout_manager` when added as the child of "
"the RecycleView. Similarly when removed. A requirement is that the layout"
" manager must be contained as a child somewhere within the RecycleView's "
"widget tree so the view port can be found."
msgstr ""

#: kivy.uix.recycleview:46 of
msgid "A minimal example might look something like this::"
msgstr ""

#: kivy.uix.recycleview:77 of
msgid ""
"In order to support selection in the view, you can add the required "
"behaviours as follows::"
msgstr ""

#: kivy.uix.recycleview:160 of
msgid ""
"Please see the `examples/widgets/recycleview/basic_data.py` file for a "
"more complete example."
msgstr ""

#: kivy.uix.recycleview:164 of
msgid "Viewclass State"
msgstr ""

#: kivy.uix.recycleview:166 of
msgid ""
"Because the viewclass widgets are reused or instantiated as needed by the"
" :class:`RecycleView`, the order and content of the widgets are mutable. "
"So any state change to a single widget will stay with that widget, even "
"when the data assigned to it from the :attr:`~RecycleView.data` dict "
"changes, unless :attr:`~RecycleView.data` tracks those changes or they "
"are manually refreshed when re-used."
msgstr ""

#: kivy.uix.recycleview:173 of
msgid "There are two methods for managing state changes in viewclass widgets:"
msgstr ""

#: kivy.uix.recycleview:175 of
msgid "Store state in the RecycleView.data Model"
msgstr ""

#: kivy.uix.recycleview:176 of
msgid ""
"Generate state changes on-the-fly by catching :attr:`~RecycleView.data` "
"updates and manually refreshing."
msgstr ""

#: kivy.uix.recycleview:179 of
msgid "An example::"
msgstr ""

#: kivy.uix.recycleview:253 of
msgid "TODO:"
msgstr ""

#: kivy.uix.recycleview:251 of
msgid "Method to clear cached class instances."
msgstr ""

#: kivy.uix.recycleview:252 of
msgid "Test when views cannot be found (e.g. viewclass is None)."
msgstr ""

#: kivy.uix.recycleview:253 of
msgid "Fix selection goto."
msgstr ""

#: kivy.uix.recycleview:256 of
msgid "When views are re-used they may not trigger if the data remains the same."
msgstr ""

#: ../../<autodoc>:1
msgid ""
"Bases: :class:`kivy.uix.recycleview.RecycleViewBehavior`, "
":class:`kivy.uix.scrollview.ScrollView`"
msgstr ""

#: kivy.uix.recycleview.RecycleView:1 of
msgid ""
"RecycleView is a flexible view for providing a limited window into a "
"large data set."
msgstr ""

#: kivy.uix.recycleview.RecycleView:4
#: kivy.uix.recycleview.RecycleViewBehavior:5 of
msgid "See the module documentation for more information."
msgstr ""

#: kivy.uix.recycleview.RecycleView.add_widget:1 of
msgid "Add a new widget as a child of this widget."
msgstr ""

#: kivy.uix.recycleview.RecycleView.add_widget
#: kivy.uix.recycleview.RecycleView.remove_widget of
msgid "Parameters"
msgstr ""

#: kivy.uix.recycleview.RecycleView.add_widget:4
#: kivy.uix.recycleview.RecycleView.remove_widget:5 of
msgid "`widget`: :class:`Widget`"
msgstr ""

#: kivy.uix.recycleview.RecycleView.add_widget:5 of
msgid "Widget to add to our list of children."
msgstr ""

#: kivy.uix.recycleview.RecycleView.add_widget:12 of
msgid "`index`: int, defaults to 0"
msgstr ""

#: kivy.uix.recycleview.RecycleView.add_widget:7 of
msgid ""
"Index to insert the widget in the list. Notice that the default of 0 "
"means the widget is inserted at the beginning of the list and will thus "
"be drawn on top of other sibling widgets. For a full discussion of the "
"index and widget hierarchy, please see the :doc:`Widgets Programming "
"Guide <guide/widgets>`."
msgstr ""

#: kivy.uix.recycleview.RecycleView.add_widget:18 of
msgid "`canvas`: str, defaults to None"
msgstr ""

#: kivy.uix.recycleview.RecycleView.add_widget:15 of
msgid ""
"Canvas to add widget's canvas to. Can be 'before', 'after' or None for "
"the default canvas."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleView.data:1 of
msgid ""
"The data used by the current view adapter. This is a list of dicts whose "
"keys map to the corresponding property names of the "
":attr:`~RecycleView.viewclass`."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleView.data:5 of
msgid ""
"data is an :class:`~kivy.properties.AliasProperty` that gets and sets the"
" data used to generate the views."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleView.key_viewclass:1 of
msgid ""
"key_viewclass is an :class:`~kivy.properties.AliasProperty` that gets and"
" sets the key viewclass for the current "
":attr:`~kivy.uix.recycleview.layout_manager`."
msgstr ""

#: kivy.uix.recycleview.RecycleView.remove_widget:1 of
msgid "Remove a widget from the children of this widget."
msgstr ""

#: kivy.uix.recycleview.RecycleView.remove_widget:5 of
msgid "Widget to remove from our children list."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleView.viewclass:1 of
msgid "The viewclass used by the current layout_manager."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleView.viewclass:3 of
msgid ""
"viewclass is an :class:`~kivy.properties.AliasProperty` that gets and "
"sets the class used to generate the individual items presented in the "
"view."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.object`"
msgstr ""

#: kivy.uix.recycleview.RecycleViewBehavior:1 of
msgid ""
"RecycleViewBehavior provides a behavioral model upon which the "
":class:`RecycleView` is built. Together, they offer an extensible and "
"flexible way to produce views with limited windows over large data sets."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleViewBehavior.data_model:1 of
msgid "The Data model responsible for maintaining the data set."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleViewBehavior.data_model:3 of
msgid ""
"data_model is an :class:`~kivy.properties.AliasProperty` that gets and "
"sets the current data model."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleViewBehavior.layout_manager:1 of
msgid ""
"The Layout manager responsible for positioning views within the "
":class:`RecycleView`."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleViewBehavior.layout_manager:4 of
msgid ""
"layout_manager is an :class:`~kivy.properties.AliasProperty` that gets "
"and sets the layout_manger."
msgstr ""

#: kivy.uix.recycleview.RecycleViewBehavior.refresh_from_data:1 of
msgid ""
"This should be called when data changes. Data changes typically indicate "
"that everything should be recomputed since the source data changed."
msgstr ""

#: kivy.uix.recycleview.RecycleViewBehavior.refresh_from_data:5 of
msgid ""
"This method is automatically bound to the "
":attr:`~RecycleDataModelBehavior.on_data_changed` method of the "
":class:`~RecycleDataModelBehavior` class and therefore responds to and "
"accepts the keyword arguments of that event."
msgstr ""

#: kivy.uix.recycleview.RecycleViewBehavior.refresh_from_data:10 of
msgid "It can be called manually to trigger an update."
msgstr ""

#: kivy.uix.recycleview.RecycleViewBehavior.refresh_from_layout:1 of
msgid ""
"This should be called when the layout changes or needs to change. It is "
"typically called when a layout parameter has changed and therefore the "
"layout needs to be recomputed."
msgstr ""

#: kivy.uix.recycleview.RecycleViewBehavior.refresh_from_viewport:1 of
msgid ""
"This should be called when the viewport changes and the displayed data "
"must be updated. Neither the data nor the layout will be recomputed."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleViewBehavior.view_adapter:1 of
msgid ""
"The adapter responsible for providing views that represent items in a "
"data set."
msgstr ""

#: ../../docstring kivy.uix.recycleview.RecycleViewBehavior.view_adapter:4 of
msgid ""
"view_adapter is an :class:`~kivy.properties.AliasProperty` that gets and "
"sets the current view adapter."
msgstr ""

