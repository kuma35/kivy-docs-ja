# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.uix.tabbedpanel.rst:3
msgid "TabbedPanel"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:8
msgid "The `TabbedPanel` widget manages different widgets in tabs, with a header area for the actual tab buttons and a content area for showing the current tab content."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:12
msgid "The :class:`TabbedPanel` provides one default tab."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:15
msgid "Simple example"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:22
msgid "A new class :class:`TabbedPanelItem` has been introduced in 1.5.0 for convenience. So now one can simply add a :class:`TabbedPanelItem` to a :class:`TabbedPanel` and `content` to the :class:`TabbedPanelItem` as in the example provided above."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:28
msgid "Customize the Tabbed Panel"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:30
msgid "You can choose the position in which the tabs are displayed::"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:34
msgid "An individual tab is called a TabbedPanelHeader. It is a special button containing a `content` property. You add the TabbedPanelHeader first, and set its `content` property separately::"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:42
msgid "An individual tab, represented by a TabbedPanelHeader, needs its content set. This content can be any widget. It could be a layout with a deep hierarchy of widgets, or it could be an individual widget, such as a label or a button::"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:49
msgid "There is one \"shared\" main content area active at any given time, for all the tabs. Your app is responsible for adding the content of individual tabs and for managing them, but it's not responsible for content switching. The tabbed panel handles switching of the main content object as per user action."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:54
msgid "There is a default tab added when the tabbed panel is instantiated. Tabs that you add individually as above, are added in addition to the default tab. Thus, depending on your needs and design, you will want to customize the default tab::"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:62
msgid "The default tab machinery requires special consideration and management. Accordingly, an `on_default_tab` event is provided for associating a callback::"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:67
msgid "It's important to note that by default, :attr:`default_tab_cls` is of type :class:`TabbedPanelHeader` and thus has the same properties as other tabs."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:70
msgid "Since 1.5.0, it is now possible to disable the creation of the :attr:`default_tab` by setting :attr:`do_default_tab` to False."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:73
msgid "Tabs and content can be removed in several ways::"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:81
msgid "To access the children of the tabbed panel, use content.children::"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:85
msgid "To access the list of tabs::"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:89
msgid "To change the appearance of the main tabbed panel content::"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:95
msgid "To change the background of a individual tab, use these two properties::"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:100
msgid "A TabbedPanelStrip contains the individual tab headers. To change the appearance of this tab strip, override the canvas of TabbedPanelStrip. For example, in the kv language:"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel:114
msgid "By default the tabbed panel strip takes its background image and color from the tabbed panel's background_image and background_color."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.gridlayout.GridLayout`"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.StripLayout:1
msgid "The main layout that is used to house the entire tabbedpanel strip including the blank areas in case the tabs don't cover the entire width/height."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.StripLayout.background_image:1
msgid "Background image to be used for the Strip layout of the TabbedPanel."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.StripLayout.background_image:3
msgid ":attr:`background_image` is a :class:`~kivy.properties.StringProperty` and defaults to a transparent image."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.StripLayout.border:1
msgid "Border property for the :attr:`background_image`."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.StripLayout.border:3
msgid ":attr:`border` is a :class:`~kivy.properties.ListProperty` and defaults to [4, 4, 4, 4]"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel:1
msgid "The TabbedPanel class. See module documentation for more information."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.add_widget:1
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.add_widget:1
msgid "Add a new widget as a child of this widget."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.add_widget:0
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.remove_widget:0
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelHeader.on_touch_down:0
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.add_widget:0
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.remove_widget:0
msgid "Parameters"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.add_widget:4
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.remove_widget:5
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.add_widget:4
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.remove_widget:5
msgid "`widget`: :class:`Widget`"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.add_widget:5
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.add_widget:5
msgid "Widget to add to our list of children."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.add_widget:12
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.add_widget:12
msgid "`index`: int, defaults to 0"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.add_widget:7
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.add_widget:7
msgid "Index to insert the widget in the list. Notice that the default of 0 means the widget is inserted at the beginning of the list and will thus be drawn on top of other sibling widgets. For a full discussion of the index and widget hierarchy, please see the :doc:`Widgets Programming Guide <guide/widgets>`."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.add_widget:18
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.add_widget:18
msgid "`canvas`: str, defaults to None"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.add_widget:15
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.add_widget:15
msgid "Canvas to add widget's canvas to. Can be 'before', 'after' or None for the default canvas."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.background_color:1
msgid "Background color, in the format (r, g, b, a)."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.background_color:3
msgid ":attr:`background_color` is a :class:`~kivy.properties.ColorProperty` and defaults to [1, 1, 1, 1]."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.background_color:6
msgid "Changed from :class:`~kivy.properties.ListProperty` to :class:`~kivy.properties.ColorProperty`."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.background_disabled_image:1
msgid "Background image of the main shared content object when disabled."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.background_disabled_image:5
msgid ":attr:`background_disabled_image` is a :class:`~kivy.properties.StringProperty` and defaults to 'atlas://data/images/defaulttheme/tab'."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.background_image:1
msgid "Background image of the main shared content object."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.background_image:3
msgid ":attr:`background_image` is a :class:`~kivy.properties.StringProperty` and defaults to 'atlas://data/images/defaulttheme/tab'."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.border:1
msgid "Border used for :class:`~kivy.graphics.vertex_instructions.BorderImage` graphics instruction, used itself for :attr:`background_image`. Can be changed for a custom background."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.border:5
msgid "It must be a list of four values: (bottom, right, top, left). Read the BorderImage instructions for more information."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.border:8
msgid ":attr:`border` is a :class:`~kivy.properties.ListProperty` and defaults to (16, 16, 16, 16)"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.clear_widgets:1
msgid "Remove all (or the specified) :attr:`~Widget.children` of this widget. If the 'children' argument is specified, it should be a list (or filtered list) of children of the current widget."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.clear_widgets:5
msgid "The `children` argument can be used to specify the children you want to remove."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.clear_widgets:10
msgid "Specifying an empty ``children`` list leaves the widgets unchanged. Previously it was treated like ``None`` and all children were removed."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.content:1
msgid "This is the object holding (current_tab's content is added to this) the content of the current tab. To Listen to the changes in the content of the current tab, you should bind to current_tabs `content` property."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.content:5
msgid ":attr:`content` is an :class:`~kivy.properties.ObjectProperty` and defaults to 'None'."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.current_tab:1
msgid "Links to the currently selected or active tab."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.current_tab:5
msgid ":attr:`current_tab` is an :class:`~kivy.AliasProperty`, read-only."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab:1
msgid "Holds the default tab."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab:3
msgid "For convenience, the automatically provided default tab is deleted when you change default_tab to something else. As of 1.5.0, this behaviour has been extended to every `default_tab` for consistency and not just the automatically provided one."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab:9
msgid ":attr:`default_tab` is an :class:`~kivy.properties.AliasProperty`."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab_cls:1
msgid "Specifies the class to use for the styling of the default tab."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab_cls:6
msgid "`default_tab_cls` should be subclassed from `TabbedPanelHeader`"
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab_cls:8
msgid ":attr:`default_tab_cls` is an :class:`~kivy.properties.ObjectProperty` and defaults to `TabbedPanelHeader`. If you set a string, the :class:`~kivy.factory.Factory` will be used to resolve the class."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab_cls:12
msgid "The :class:`~kivy.factory.Factory` will resolve the class if a string is set."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab_content:1
msgid "Holds the default tab content."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab_content:3
msgid ":attr:`default_tab_content` is an :class:`~kivy.properties.AliasProperty`."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab_text:1
msgid "Specifies the text displayed on the default tab header."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.default_tab_text:3
msgid ":attr:`default_tab_text` is a :class:`~kivy.properties.StringProperty` and defaults to 'default tab'."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.do_default_tab:1
msgid "Specifies whether a default_tab head is provided."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.do_default_tab:5
msgid ":attr:`do_default_tab` is a :class:`~kivy.properties.BooleanProperty` and defaults to 'True'."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.remove_widget:1
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.remove_widget:1
msgid "Remove a widget from the children of this widget."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.remove_widget:5
#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem.remove_widget:5
msgid "Widget to remove from our children list."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.strip_border:1
msgid "Border to be used on :attr:`strip_image`."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.strip_border:5
msgid ":attr:`strip_border` is a :class:`~kivy.properties.ListProperty` and defaults to [4, 4, 4, 4]."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.strip_image:1
msgid "Background image of the tabbed strip."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.strip_image:5
msgid ":attr:`strip_image` is a :class:`~kivy.properties.StringProperty` and defaults to a empty image."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.switch_to:1
msgid "Switch to a specific panel header."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.switch_to:5
msgid "If used with `do_scroll=True`, it scrolls to the header's tab too."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanel.switch_to:8
msgid ":meth:`switch_to` cannot be called from within the :class:`TabbedPanel` or its subclass' ``__init__`` method. If that is required, use the ``Clock`` to schedule it. See `discussion <https://github.com/kivy/kivy/issues/3493#issuecomment-121567969>`_ for full example."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.tab_height:1
msgid "Specifies the height of the tab header."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.tab_height:3
msgid ":attr:`tab_height` is a :class:`~kivy.properties.NumericProperty` and defaults to 40."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.tab_list:1
msgid "List of all the tab headers."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.tab_list:3
msgid ":attr:`tab_list` is an :class:`~kivy.properties.AliasProperty` and is read-only."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.tab_pos:1
msgid "Specifies the position of the tabs relative to the content. Can be one of: `left_top`, `left_mid`, `left_bottom`, `top_left`, `top_mid`, `top_right`, `right_top`, `right_mid`, `right_bottom`, `bottom_left`, `bottom_mid`, `bottom_right`."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.tab_pos:6
msgid ":attr:`tab_pos` is an :class:`~kivy.properties.OptionProperty` and defaults to 'top_left'."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.tab_width:1
msgid "Specifies the width of the tab header."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanel.tab_width:3
msgid ":attr:`tab_width` is a :class:`~kivy.properties.NumericProperty` and defaults to 100."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.floatlayout.FloatLayout`"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelContent:1
msgid "The TabbedPanelContent class."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelException:1
msgid "Bases: :py:class:`Exception`"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelException:1
msgid "The TabbedPanelException class."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.togglebutton.ToggleButton`"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelHeader:1
msgid "A Base for implementing a Tabbed Panel Head. A button intended to be used as a Heading/Tab for a TabbedPanel widget."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelHeader:4
msgid "You can use this TabbedPanelHeader widget to add a new tab to a TabbedPanel."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanelHeader.content:1
msgid "Content to be loaded when this tab header is selected."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanelHeader.content:3
msgid ":attr:`content` is an :class:`~kivy.properties.ObjectProperty` and defaults to None."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelHeader.on_touch_down:1
msgid "Receive a touch down event."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelHeader.on_touch_down:7
msgid "`touch`: :class:`~kivy.input.motionevent.MotionEvent` class"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelHeader.on_touch_down:5
msgid "Touch received. The touch is in parent coordinates. See :mod:`~kivy.uix.relativelayout` for a discussion on coordinate systems."
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelHeader.on_touch_down:0
msgid "Returns"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelHeader.on_touch_down:9
msgid "bool If True, the dispatching of the touch event will stop. If False, the event will continue to be dispatched to the rest of the widget tree."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.tabbedpanel.TabbedPanelHeader`"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelItem:1
msgid "This is a convenience class that provides a header of type TabbedPanelHeader and links it with the content automatically. Thus facilitating you to simply do the following in kv language:"
msgstr ""

#: ../../../kivy/uix/tabbedpanel.py:docstring of kivy.uix.tabbedpanel.TabbedPanelStrip:1
msgid "A strip intended to be used as background for Heading/Tab. This does not cover the blank areas in case the tabs don't cover the entire width/height of the TabbedPanel(use :class:`StripLayout` for that)."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanelStrip.tabbed_panel:1
msgid "Link to the panel that the tab strip is a part of."
msgstr ""

#: ../../docstring of kivy.uix.tabbedpanel.TabbedPanelStrip.tabbed_panel:3
msgid ":attr:`tabbed_panel` is an :class:`~kivy.properties.ObjectProperty` and defaults to None ."
msgstr ""
