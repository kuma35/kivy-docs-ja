# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.uix.image.rst:3
msgid "Image"
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image:2
msgid "The :class:`Image` widget is used to display an image::"
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image:4
msgid "Example in python::"
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image:8
msgid "Kv Example::"
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image:16
msgid "Asynchronous Loading"
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image:18
msgid "To load an image asynchronously (for example from an external webserver), use the :class:`AsyncImage` subclass::"
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image:23
msgid "This can be useful as it prevents your application from waiting until the image is loaded. If you want to display large images or retrieve them from URL's, using :class:`AsyncImage` will allow these resources to be retrieved on a background thread without blocking your application."
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image:29
msgid "Alignment"
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image:31
msgid "By default, the image is centered and fits inside the widget bounding box. If you don't want that, you can set `allow_stretch` to True and `keep_ratio` to False."
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image:35
msgid "You can also inherit from Image and create your own style. For example, if you want your image to be greater than the size of your widget, you could do::"
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image:41
msgid "And in your kivy language file::"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.image.Image`"
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image.AsyncImage:1
msgid "Asynchronous Image class. See the module documentation for more information."
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image.AsyncImage:6
msgid "The AsyncImage is a specialized form of the Image class. You may want to refer to the :mod:`~kivy.loader` documentation and in particular, the :class:`~kivy.loader.ProxyImage` for more detail on how to handle events around asynchronous image loading."
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image.AsyncImage:13
msgid "AsyncImage currently does not support properties :attr:`anim_loop` and :attr:`mipmap` and setting those properties will have no effect."
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image.AsyncImage.remove_from_cache:1
#: ../../../kivy/uix/image.py:docstring of kivy.uix.image.Image.remove_from_cache:1
msgid "Remove image from cache."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.widget.Widget`"
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image.Image:1
msgid "Image class, see module documentation for more information."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.allow_stretch:1
msgid "If True, the normalized image size will be maximized to fit in the image box. Otherwise, if the box is too tall, the image will not be stretched more than 1:1 pixels."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.allow_stretch:7
msgid ":attr:`allow_stretch` is a :class:`~kivy.properties.BooleanProperty` and defaults to False."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.anim_delay:1
msgid "Delay the animation if the image is sequenced (like an animated gif). If anim_delay is set to -1, the animation will be stopped."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.anim_delay:6
msgid ":attr:`anim_delay` is a :class:`~kivy.properties.NumericProperty` and defaults to 0.25 (4 FPS)."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.anim_loop:1
msgid "Number of loops to play then stop animating. 0 means keep animating."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.anim_loop:5
msgid ":attr:`anim_loop` is a :class:`~kivy.properties.NumericProperty` and defaults to 0."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.color:1
msgid "Image color, in the format (r, g, b, a). This attribute can be used to 'tint' an image. Be careful: if the source image is not gray/white, the color will not really work as expected."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.color:7
msgid ":attr:`color` is a :class:`~kivy.properties.ColorProperty` and defaults to [1, 1, 1, 1]."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.color:10
msgid "Changed from :class:`~kivy.properties.ListProperty` to :class:`~kivy.properties.ColorProperty`."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.image_ratio:1
msgid "Ratio of the image (width / float(height)."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.image_ratio:3
msgid ":attr:`image_ratio` is an :class:`~kivy.properties.AliasProperty` and is read-only."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.keep_data:1
msgid "If True, the underlying _coreimage will store the raw image data. This is useful when performing pixel based collision detection."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.keep_data:6
msgid ":attr:`keep_data` is a :class:`~kivy.properties.BooleanProperty` and defaults to False."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.keep_ratio:1
msgid "If False along with allow_stretch being True, the normalized image size will be maximized to fit in the image box and ignores the aspect ratio of the image. Otherwise, if the box is too tall, the image will not be stretched more than 1:1 pixels."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.keep_ratio:9
msgid ":attr:`keep_ratio` is a :class:`~kivy.properties.BooleanProperty` and defaults to True."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.mipmap:1
msgid "Indicate if you want OpenGL mipmapping to be applied to the texture. Read :ref:`mipmap` for more information."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.mipmap:6
msgid ":attr:`mipmap` is a :class:`~kivy.properties.BooleanProperty` and defaults to False."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.nocache:1
msgid "If this property is set True, the image will not be added to the internal cache. The cache will simply ignore any calls trying to append the core image."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.nocache:7
msgid ":attr:`nocache` is a :class:`~kivy.properties.BooleanProperty` and defaults to False."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.norm_image_size:1
msgid "Normalized image size within the widget box."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.norm_image_size:3
msgid "This size will always fit the widget size and will preserve the image ratio."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.norm_image_size:6
msgid ":attr:`norm_image_size` is an :class:`~kivy.properties.AliasProperty` and is read-only."
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image.Image.reload:1
msgid "Reload image from disk. This facilitates re-loading of images from disk in case the image content changes."
msgstr ""

#: ../../../kivy/uix/image.py:docstring of kivy.uix.image.Image.reload:6
msgid "Usage::"
msgstr ""

#: ../../docstring of kivy.uix.image.Image.source:1
msgid "Filename / source of your image."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.source:3
msgid ":attr:`source` is a :class:`~kivy.properties.StringProperty` and defaults to None."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.texture:1
msgid "Texture object of the image. The texture represents the original, loaded image texture. It is stretched and positioned during rendering according to the :attr:`allow_stretch` and :attr:`keep_ratio` properties."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.texture:5
msgid "Depending of the texture creation, the value will be a :class:`~kivy.graphics.texture.Texture` or a :class:`~kivy.graphics.texture.TextureRegion` object."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.texture:9
msgid ":attr:`texture` is an :class:`~kivy.properties.ObjectProperty` and defaults to None."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.texture_size:1
msgid "Texture size of the image. This represents the original, loaded image texture size."
msgstr ""

#: ../../docstring of kivy.uix.image.Image.texture_size:6
msgid "The texture size is set after the texture property. So if you listen to the change on :attr:`texture`, the property texture_size will not be up-to-date. Use self.texture.size instead."
msgstr ""
