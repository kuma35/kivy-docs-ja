# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/api-kivy.modules.inspector.rst:3
msgid "Inspector"
msgstr ""

#: kivy.modules.inspector:6 of
msgid "This module is highly experimental, use it with care."
msgstr ""

#: kivy.modules.inspector:8 of
msgid ""
"The Inspector is a tool for finding a widget in the widget tree by "
"clicking or tapping on it. Some keyboard shortcuts are activated:"
msgstr ""

#: kivy.modules.inspector:12 of
msgid "\"Ctrl + e\": activate / deactivate the inspector view"
msgstr ""

#: kivy.modules.inspector:13 of
msgid "\"Escape\": cancel widget lookup first, then hide the inspector view"
msgstr ""

#: kivy.modules.inspector:15 of
msgid "Available inspector interactions:"
msgstr ""

#: kivy.modules.inspector:17 of
msgid "tap once on a widget to select it without leaving inspect mode"
msgstr ""

#: kivy.modules.inspector:18 of
msgid ""
"double tap on a widget to select and leave inspect mode (then you can "
"manipulate the widget again)"
msgstr ""

#: kivy.modules.inspector:21 of
msgid ""
"Some properties can be edited live. However, due to the delayed usage of "
"some properties, it might crash if you don't handle all the cases."
msgstr ""

#: kivy.modules.inspector:25 of
msgid "Usage"
msgstr ""

#: kivy.modules.inspector:27 of
msgid ""
"For normal module usage, please see the :mod:`~kivy.modules` "
"documentation."
msgstr ""

#: kivy.modules.inspector:29 of
msgid ""
"The Inspector, however, can also be imported and used just like a normal "
"python module. This has the added advantage of being able to activate and"
" deactivate the module programmatically::"
msgstr ""

#: kivy.modules.inspector:46 of
msgid "To remove the Inspector, you can do the following::"
msgstr ""

#: kivy.modules.inspector.create_inspector:1 of
msgid ""
"Create an Inspector instance attached to the *ctx* and bound to the "
"Window's :meth:`~kivy.core.window.WindowBase.on_keyboard` event for "
"capturing the keyboard shortcut."
msgstr ""

#: kivy.modules.inspector.create_inspector of
msgid "Parameters"
msgstr ""

#: kivy.modules.inspector.create_inspector:6 of
msgid "`win`: A :class:`Window <kivy.core.window.WindowBase>`"
msgstr ""

#: kivy.modules.inspector.create_inspector:7 of
msgid "The application Window to bind to."
msgstr ""

#: kivy.modules.inspector.create_inspector:8 of
msgid "`ctx`: A :class:`~kivy.uix.widget.Widget` or subclass"
msgstr ""

#: kivy.modules.inspector.create_inspector:9 of
msgid "The Widget to be inspected."
msgstr ""

#: kivy.modules.inspector.stop:1 of
msgid "Stop and unload any active Inspectors for the given *ctx*."
msgstr ""

