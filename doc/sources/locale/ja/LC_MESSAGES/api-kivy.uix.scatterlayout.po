# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/api-kivy.uix.scatterlayout.rst:3
msgid "Scatter Layout"
msgstr ""

#: kivy.uix.scatterlayout:4 of
msgid ""
"This layout behaves just like a "
":class:`~kivy.uix.relativelayout.RelativeLayout`. When a widget is added "
"with position = (0,0) to a :class:`ScatterLayout`, the child widget will "
"also move when you change the position of the :class:`ScatterLayout`. The"
" child widget's coordinates remain (0,0) as they are relative to the "
"parent layout."
msgstr ""

#: kivy.uix.scatterlayout:11 of
msgid ""
"However, since :class:`ScatterLayout` is implemented using a "
":class:`~kivy.uix.scatter.Scatter` widget, you can also translate, rotate"
" and scale the layout using touches or clicks, just like in the case of a"
" normal Scatter widget, and the child widgets will behave as expected."
msgstr ""

#: kivy.uix.scatterlayout:17 of
msgid ""
"In contrast to a Scatter, the Layout favours 'hint' properties, such as "
"size_hint, size_hint_x, size_hint_y and pos_hint."
msgstr ""

#: kivy.uix.scatterlayout:22 of
msgid ""
"The :class:`ScatterLayout` is implemented as a "
":class:`~kivy.uix.floatlayout.FloatLayout` inside a "
":class:`~kivy.uix.scatter.Scatter`."
msgstr ""

#: kivy.uix.scatterlayout:28 of
msgid ""
"Since the actual :class:`ScatterLayout` is a "
":class:`~kivy.uix.scatter.Scatter`, its add_widget and remove_widget "
"functions are overridden to add children to the embedded "
":class:`~kivy.uix.floatlayout.FloatLayout` (accessible as the `content` "
"property of :class:`~kivy.uix.scatter.Scatter`) automatically. So if you "
"want to access the added child elements, you need self.content.children "
"instead of self.children."
msgstr ""

#: kivy.uix.scatterlayout:38 of
msgid ""
"The :class:`ScatterLayout` was introduced in 1.7.0 and was called "
":class:`~kivy.uix.relativelayout.RelativeLayout` in prior versions. The "
":class:`~kivy.uix.relativelayout.RelativeLayout` is now an optimized "
"implementation that uses only a positional transform to avoid some of the"
" heavier calculation involved for :class:`~kivy.uix.scatter.Scatter`."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.scatter.Scatter`"
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout:1 of
msgid "ScatterLayout class, see module documentation for more information."
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.add_widget:1 of
msgid "Add a new widget as a child of this widget."
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.add_widget
#: kivy.uix.scatterlayout.ScatterLayout.remove_widget
#: kivy.uix.scatterlayout.ScatterPlaneLayout.collide_point of
msgid "Parameters"
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.add_widget:4
#: kivy.uix.scatterlayout.ScatterLayout.remove_widget:5 of
msgid "`widget`: :class:`Widget`"
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.add_widget:5 of
msgid "Widget to add to our list of children."
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.add_widget:12 of
msgid "`index`: int, defaults to 0"
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.add_widget:7 of
msgid ""
"Index to insert the widget in the list. Notice that the default of 0 "
"means the widget is inserted at the beginning of the list and will thus "
"be drawn on top of other sibling widgets. For a full discussion of the "
"index and widget hierarchy, please see the :doc:`Widgets Programming "
"Guide <guide/widgets>`."
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.add_widget:18 of
msgid "`canvas`: str, defaults to None"
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.add_widget:15 of
msgid ""
"Canvas to add widget's canvas to. Can be 'before', 'after' or None for "
"the default canvas."
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.clear_widgets:1 of
msgid ""
"Remove all (or the specified) :attr:`~Widget.children` of this widget. If"
" the 'children' argument is specified, it should be a list (or filtered "
"list) of children of the current widget."
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.clear_widgets:5 of
msgid ""
"The `children` argument can be used to specify the children you want to "
"remove."
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.clear_widgets:10 of
msgid ""
"Specifying an empty ``children`` list leaves the widgets unchanged. "
"Previously it was treated like ``None`` and all children were removed."
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.remove_widget:1 of
msgid "Remove a widget from the children of this widget."
msgstr ""

#: kivy.uix.scatterlayout.ScatterLayout.remove_widget:5 of
msgid "Widget to remove from our children list."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.scatter.ScatterPlane`"
msgstr ""

#: kivy.uix.scatterlayout.ScatterPlaneLayout:1 of
msgid "ScatterPlaneLayout class, see module documentation for more information."
msgstr ""

#: kivy.uix.scatterlayout.ScatterPlaneLayout:3 of
msgid ""
"Similar to ScatterLayout, but based on ScatterPlane - so the input is not"
" bounded."
msgstr ""

#: kivy.uix.scatterlayout.ScatterPlaneLayout.collide_point:1 of
msgid "Check if a point (x, y) is inside the widget's axis aligned bounding box."
msgstr ""

#: kivy.uix.scatterlayout.ScatterPlaneLayout.collide_point:5 of
msgid "`x`: numeric"
msgstr ""

#: kivy.uix.scatterlayout.ScatterPlaneLayout.collide_point:6 of
msgid "x position of the point (in parent coordinates)"
msgstr ""

#: kivy.uix.scatterlayout.ScatterPlaneLayout.collide_point:8 of
msgid "`y`: numeric"
msgstr ""

#: kivy.uix.scatterlayout.ScatterPlaneLayout.collide_point:8 of
msgid "y position of the point (in parent coordinates)"
msgstr ""

#: kivy.uix.scatterlayout.ScatterPlaneLayout.collide_point of
msgid "Returns"
msgstr ""

#: kivy.uix.scatterlayout.ScatterPlaneLayout.collide_point:11 of
msgid "A bool. True if the point is inside the bounding box, False otherwise."
msgstr ""

