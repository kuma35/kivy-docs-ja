# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/api-kivy.graphics.rst:3
msgid "Graphics"
msgstr ""

#: kivy.graphics:2 of
msgid ""
"This package assembles many low level functions used for drawing. The "
"whole graphics package is compatible with OpenGL ES 2.0 and has many "
"rendering optimizations."
msgstr ""

#: kivy.graphics:7 of
msgid "The basics"
msgstr ""

#: kivy.graphics:9 of
msgid "For drawing on a screen, you will need :"
msgstr ""

#: kivy.graphics:11 of
msgid "a :class:`~kivy.graphics.instructions.Canvas` object."
msgstr ""

#: kivy.graphics:12 of
msgid ":class:`~kivy.graphics.instructions.Instruction` objects."
msgstr ""

#: kivy.graphics:14 of
msgid ""
"Each :class:`~kivy.uix.widget.Widget` in Kivy already has a "
":class:`Canvas` by default. When you create a widget, you can create all "
"the instructions needed for drawing. If `self` is your current widget, "
"you can do::"
msgstr ""

#: kivy.graphics:27 of
msgid ""
"The instructions :class:`Color` and :class:`Rectangle` are automatically "
"added to the canvas object and will be used when the window is drawn."
msgstr ""

#: kivy.graphics:32 of
msgid ""
"Kivy drawing instructions are not automatically relative to the position "
"or size of the widget. You, therefore, need to consider these factors "
"when drawing. In order to make your drawing instructions relative to the "
"widget, the instructions need either to be declared in the :mod:`KvLang "
"<kivy.lang>` or bound to pos and size changes. Please see "
":ref:`adding_widget_background` for more detail."
msgstr ""

#: kivy.graphics:40 of
msgid "GL Reloading mechanism"
msgstr ""

#: kivy.graphics:44 of
msgid ""
"During the lifetime of the application, the OpenGL context might be lost."
" This happens:"
msgstr ""

#: kivy.graphics:47 of
msgid ""
"when the window is resized on OS X or the Windows platform and you're "
"using pygame as a window provider. This is due to SDL 1.2. In the SDL 1.2"
" design, it needs to recreate a GL context everytime the window is "
"resized. This was fixed in SDL 1.3 but pygame is not yet available on it "
"by default."
msgstr ""

#: kivy.graphics:53 of
msgid ""
"when Android releases the app resources: when your application goes to "
"the background, Android might reclaim your opengl context to give the "
"resource to another app. When the user switches back to your application,"
" a newly created gl context is given to your app."
msgstr ""

#: kivy.graphics:58 of
msgid ""
"Starting from 1.2.0, we have introduced a mechanism for reloading all the"
" graphics resources using the GPU: Canvas, FBO, Shader, Texture, VBO, and"
" VertexBatch:"
msgstr ""

#: kivy.graphics:62 of
msgid ""
"VBO and VertexBatch are constructed by our graphics instructions. We have"
" all the data needed to reconstruct when reloading."
msgstr ""

#: kivy.graphics:65 of
msgid ""
"Shader: same as VBO, we store the source and values used in the shader so"
" we are able to recreate the vertex/fragment/program."
msgstr ""

#: kivy.graphics:68 of
msgid ""
"Texture: if the texture has a source (an image file or atlas), the image "
"is reloaded from the source and reuploaded to the GPU."
msgstr ""

#: kivy.graphics:71 of
msgid "You should cover these cases yourself:"
msgstr ""

#: kivy.graphics:73 of
msgid ""
"Textures without a source: if you manually created a texture and manually"
" blit data / a buffer to it, you must handle the reloading yourself. "
"Check the :doc:`api-kivy.graphics.texture` to learn how to manage that "
"case. (The text rendering already generates the texture and handles the "
"reloading. You don't need to reload text yourself.)"
msgstr ""

#: kivy.graphics:79 of
msgid ""
"FBO: if you added / removed / drew things multiple times on the FBO, we "
"can't reload it. We don't keep a history of the instructions put on it. "
"As for textures without a source, check the :doc:`api-kivy.graphics.fbo` "
"to learn how to manage that case."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.instructions.ContextInstruction`"
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.ApplyContextMatrix:1 of
msgid "`target_stack` by the matrix at the top of the 'source_stack'"
msgstr ""

#: ../../docstring kivy.graphics.ApplyContextMatrix.source_stack:1 of
msgid ""
"Name of the matrix stack to use as a source. Can be 'modelview_mat', "
"'projection_mat' or 'frag_modelview_mat'."
msgstr ""

#: ../../docstring kivy.graphics.ApplyContextMatrix.target_stack:1 of
msgid ""
"Name of the matrix stack to use as a target. Can be 'modelview_mat', "
"'projection_mat' or 'frag_modelview_mat'."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.instructions.VertexInstruction`"
msgstr ""

#: ../../docstring kivy.graphics.Fbo.add_reload_observer
#: kivy.graphics.boxshadow.BoxShadow
#: kivy.graphics.context_instructions.BindTexture kivy.graphics.fbo.Fbo
#: kivy.graphics.vertex_instructions.Bezier
#: kivy.graphics.vertex_instructions.BorderImage
#: kivy.graphics.vertex_instructions.Ellipse
#: kivy.graphics.vertex_instructions.Line
#: kivy.graphics.vertex_instructions.Mesh
#: kivy.graphics.vertex_instructions.Point
#: kivy.graphics.vertex_instructions.Quad
#: kivy.graphics.vertex_instructions.Rectangle
#: kivy.graphics.vertex_instructions.Triangle of
msgid "Parameters"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Bezier:5
#: kivy.graphics.vertex_instructions.Line:23
#: kivy.graphics.vertex_instructions.Point:5
#: kivy.graphics.vertex_instructions.Quad:5
#: kivy.graphics.vertex_instructions.Triangle:5 of
msgid "`points`: list"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Bezier:6
#: kivy.graphics.vertex_instructions.Line:24 of
msgid "List of points in the format (x1, y1, x2, y2...)"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Bezier:8
#: kivy.graphics.vertex_instructions.Ellipse:8 of
msgid "`segments`: int, defaults to 180"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Bezier:8 of
msgid ""
"Define how many segments are needed for drawing the curve. The drawing "
"will be smoother if you have many segments."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Bezier:10 of
msgid "`loop`: bool, defaults to False"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Bezier:11 of
msgid "Set the bezier curve to join the last point to the first."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Bezier:12
#: kivy.graphics.vertex_instructions.Line:25 of
msgid "`dash_length`: int"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Bezier:13
#: kivy.graphics.vertex_instructions.Line:26 of
msgid "Length of a segment (if dashed), defaults to 1."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Bezier:17
#: kivy.graphics.vertex_instructions.Line:28 of
msgid "`dash_offset`: int"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Bezier:15 of
msgid ""
"Distance between the end of a segment and the start of the next one, "
"defaults to 0. Changing this makes it dashed."
msgstr ""

#: ../../docstring kivy.graphics.Bezier.dash_length:1 of
msgid "Property for getting/setting the length of the dashes in the curve."
msgstr ""

#: ../../docstring kivy.graphics.Bezier.dash_offset:1 of
msgid "Property for getting/setting the offset between the dashes in the curve."
msgstr ""

#: ../../docstring kivy.graphics.Bezier.points:1 of
msgid "Property for getting/settings the points of the triangle."
msgstr ""

#: ../../docstring kivy.graphics.Bezier.points:5 of
msgid ""
"This will always reconstruct the whole graphic from the new points list. "
"It can be very CPU intensive."
msgstr ""

#: ../../docstring kivy.graphics.Bezier.segments:1 of
msgid "Property for getting/setting the number of segments of the curve."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.BindTexture:1 of
msgid ""
"The BindTexture Instruction will bind a texture and enable GL_TEXTURE_2D "
"for subsequent drawing."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.BindTexture:7 of
msgid "`texture`: Texture"
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.BindTexture:6 of
msgid "Specifies the texture to bind to the given index."
msgstr ""

#: ../../docstring kivy.graphics.BindTexture.source:1 of
msgid "Set/get the source (filename) to load for the texture."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.vertex_instructions.Rectangle`"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:1 of
msgid "concept of a CSS3 border-image."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:6 of
msgid "`border`: list"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:5 of
msgid ""
"Border information in the format (bottom, right, top, left). Each value "
"is in pixels."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:59 of
msgid "`auto_scale`: string"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:13 of
msgid "This used to be a bool and has been changed to be a string state."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:16 of
msgid ""
"Can be one of 'off', 'both', 'x_only', 'y_only', 'y_full_x_lower', "
"'x_full_y_lower', 'both_lower'."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:19 of
msgid "Autoscale controls the behavior of the 9-slice."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:21 of
msgid ""
"By default the border values are preserved exactly, meaning that if the "
"total size of the object is smaller than the border values you will have "
"some 'rendering errors' where your texture appears inside out. This also "
"makes it impossible to achieve a rounded button that scales larger than "
"the size of its source texture. The various options for auto_scale will "
"let you achieve some mixes of the 2 types of rendering."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:29 of
msgid ""
"'off': is the default and behaves as BorderImage did when auto_scale was "
"False before."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:32 of
msgid ""
"'both': Scales both x and y dimension borders according to the size of "
"the BorderImage, this disables the BorderImage making it render the same "
"as a regular Image."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:36 of
msgid ""
"'x_only': The Y dimension functions as the default, and the X scales to "
"the size of the BorderImage's width."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:39 of
msgid ""
"'y_only': The X dimension functions as the default, and the Y scales to "
"the size of the BorderImage's height."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:42 of
msgid ""
"'y_full_x_lower': Y scales as in 'y_only', Y scales if the size of the "
"scaled version would be smaller than the provided border only."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:46 of
msgid ""
"'x_full_y_lower': X scales as in 'x_only', Y scales if the size of the "
"scaled version would be smaller than the provided border only."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:50 of
msgid ""
"'both_lower': This is what auto_scale did when it was True in 1.9.1 Both "
"X and Y dimensions will be scaled if the BorderImage is smaller than the "
"source."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.BorderImage:54 of
msgid ""
"If the BorderImage's size is less than the sum of its borders, "
"horizontally or vertically, and this property is set to True, the borders"
" will be rescaled to accommodate for the smaller size."
msgstr ""

#: ../../docstring kivy.graphics.BorderImage.auto_scale:1 of
msgid ""
"Property for setting if the corners are automatically scaled when the "
"BorderImage is too small."
msgstr ""

#: ../../docstring kivy.graphics.BorderImage.border:1 of
msgid "Property for getting/setting the border of the class."
msgstr ""

#: ../../docstring kivy.graphics.BorderImage.display_border:1 of
msgid "Property for getting/setting the border display size."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.fbo.Fbo`"
msgstr ""

#: ../../docstring kivy.graphics.boxshadow.BoxShadow:8 of
msgid "`size`: list | tuple, defaults to ``(100.0, 100.0)``."
msgstr ""

#: ../../docstring kivy.graphics.boxshadow.BoxShadow:7 of
msgid ""
"Define the raw size of the shadow, that is, you should not take into "
"account changes in the value of :attr:`blur_radius` and "
":attr:`spread_radius` properties when setting this parameter."
msgstr ""

#: ../../docstring kivy.graphics.boxshadow.BoxShadow:11 of
msgid "`pos`: list | tuple, defaults to ``(0.0, 0.0)``."
msgstr ""

#: ../../docstring kivy.graphics.boxshadow.BoxShadow:11 of
msgid ""
"Define the raw position of the shadow, that is, you should not take into "
"account changes in the value of the :attr:`offset` property when setting "
"this parameter."
msgstr ""

#: ../../docstring kivy.graphics.boxshadow.BoxShadow:15 of
msgid "`offset`: list | tuple, defaults to ``(0.0, 0.0)``."
msgstr ""

#: ../../docstring kivy.graphics.boxshadow.BoxShadow:14 of
msgid ""
"Specifies shadow offsets in `(horizontal, vertical)` format.  Positive "
"values for the offset indicate that the shadow should move to the right "
"and/or top. The negative ones indicate that the shadow should move to the"
" left and/or down."
msgstr ""

#: ../../docstring kivy.graphics.boxshadow.BoxShadow:17 of
msgid "`blur_radius`: float, defaults to ``5.0``."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.blur_radius:1
#: kivy.graphics.boxshadow.BoxShadow:18 of
msgid "Define the shadow blur radius. Controls shadow expansion and softness."
msgstr ""

#: ../../docstring kivy.graphics.boxshadow.BoxShadow:19 of
msgid "`spread_radius`: float, defaults to ``0.0``."
msgstr ""

#: ../../docstring kivy.graphics.boxshadow.BoxShadow:20 of
msgid "Define the decrease/expansion of the shadow's raw :attr:`size`."
msgstr ""

#: ../../docstring kivy.graphics.boxshadow.BoxShadow:24 of
msgid "`border_radius`: list | tuple, defaults to ``(0.0, 0.0, 0.0, 0.0)``."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.border_radius:1
#: kivy.graphics.boxshadow.BoxShadow:22 of
msgid ""
"Specifies the radii used for the rounded corners clockwise: top-left, "
"top-right, bottom-right, bottom-left."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.blur_radius:3 of
msgid "Defaults to ``5.0``."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.blur_radius:5 of
msgid ""
"In the image below, the start and end positions of the shadow blur effect"
" length are indicated. The transition between color and transparency is "
"seamless, and although the shadow appears to end before the red "
"rectangle, its edge is made to be as smooth as possible."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.blur_radius:16 of
msgid ""
"In some cases (**if this is not your intention**), placing an element "
"above the shadow (before the blur radius ends) will result in a unwanted "
"cropping/overlay behavior rather than continuity, breaking the shadow's "
"soft ending, as shown in the image below."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.border_radius:4 of
msgid "Defaults to ``(0.0, 0.0, 0.0, 0.0)``."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.offset:1 of
msgid ""
"Specifies shadow offsets in `[horizontal, vertical]` format.  Positive "
"values for the offset indicate that the shadow should move to the right "
"and/or top. The negative ones indicate that the shadow should move to the"
" left and/or down."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.offset:7
#: kivy.graphics.BoxShadow.pos:8 of
msgid "Defaults to ``(0.0, 0.0)``."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.offset:9 of
msgid ""
"For this property to work as expected, it is indicated that the value of "
":attr:`pos` coincides with the position of the target element of the "
"shadow, as in the example below:"
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.pos:1 of
msgid ""
"Define the raw position of the shadow, that is, you should not take into "
"account changes in the value of the :attr:`offset` property when setting "
"this property."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.pos:5 of
msgid ""
"Returns the adjusted position of the shadow according to the adjusted "
":attr:`size` of the shadow and :attr:`offset` property."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.pos:12 of
msgid ""
"It is recommended that this property matches the raw position of the "
"shadow target element. To manipulate horizontal and vertical offset, use "
":attr:`offset` instead."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.size:1 of
msgid ""
"Define the raw size of the shadow, that is, you should not take into "
"account changes in the value of :attr:`blur_radius` and "
":attr:`spread_radius` properties."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.size:4 of
msgid ""
"Returns the adjusted size of the shadow according to the  "
":attr:`blur_radius` and :attr:`spread_radius` properties."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.size:7 of
msgid "Defaults to ``(100.0, 100.0)``."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.size:11 of
msgid ""
"It is recommended that this property matches the raw size of the shadow "
"target element. To manipulate the decrease/expansion of the shadow's raw "
":attr:`size`, use :attr:`spread_radius` instead."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.spread_radius:1 of
msgid "Define the decrease/expansion of the shadow's inner size."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.spread_radius:3 of
msgid "Defaults to ``0.0``."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.spread_radius:5 of
msgid ""
"In the image below, the target element has a raw size of ``200 x 150px``."
" Positive changes to the :attr:`spread_radius` value will cause the raw "
":attr:`size` of the shadow to increase in both horizontal and vertical "
"directions, while negative values will cause the shadow to decrease."
msgstr ""

#: ../../docstring kivy.graphics.BoxShadow.spread_radius:10 of
msgid ""
"This property is especially useful for cases where you want to achieve a "
"softer shadow around the element, by setting a negative value for "
":attr:`spread_radius` and a larger value for :attr:`blur_radius` as in "
"the :ref:`example <example>`."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.instructions.Instruction`"
msgstr ""

#: ../../docstring kivy.graphics.instructions.Callback:2 of
msgid ""
"A Callback is an instruction that will be called when the drawing "
"operation is performed. When adding instructions to a canvas, you can do "
"this::"
msgstr ""

#: ../../docstring kivy.graphics.instructions.Callback:11 of
msgid "The definition of the callback must be::"
msgstr ""

#: ../../docstring kivy.graphics.instructions.Callback:18 of
msgid ""
"Note that if you perform many and/or costly calls to callbacks, you might"
" potentially slow down the rendering performance significantly."
msgstr ""

#: ../../docstring kivy.graphics.instructions.Callback:21 of
msgid ""
"The updating of your canvas does not occur until something new happens. "
"From your callback, you can ask for an update::"
msgstr ""

#: ../../docstring kivy.graphics.instructions.Callback:29 of
msgid ""
"If you use the Callback class to call rendering methods of another "
"toolkit, you will have issues with the OpenGL context. The OpenGL state "
"may have been manipulated by the other toolkit, and as soon as program "
"flow returns to Kivy, it will just break. You can have glitches, crashes,"
" black holes might occur, etc. To avoid that, you can activate the "
":attr:`reset_context` option. It will reset the OpenGL context state to "
"make Kivy's rendering correct after the call to your callback."
msgstr ""

#: ../../docstring kivy.graphics.instructions.Callback:40 of
msgid ""
"The :attr:`reset_context` is not a full OpenGL reset. If you have issues "
"regarding that, please contact us."
msgstr ""

#: ../../docstring kivy.graphics.Callback.ask_update:1 of
msgid ""
"Inform the parent canvas that we'd like it to update on the next frame. "
"This is useful when you need to trigger a redraw due to some value having"
" changed for example."
msgstr ""

#: ../../docstring kivy.graphics.Callback.callback:1 of
msgid "Property for getting/setting func."
msgstr ""

#: ../../docstring kivy.graphics.Callback.reset_context:1 of
msgid ""
"Set this to True if you want to reset the OpenGL context for Kivy after "
"the callback has been called."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.instructions.CanvasBase`"
msgstr ""

#: ../../docstring kivy.graphics.instructions.Canvas:1 of
msgid "instructions that you want to be used for drawing."
msgstr ""

#: ../../docstring kivy.graphics.instructions.Canvas:5 of
msgid ""
"The Canvas supports Python's ``with`` statement and its enter & exit "
"semantics."
msgstr ""

#: ../../docstring kivy.graphics.instructions.Canvas:8 of
msgid "Usage of a canvas without the ``with`` statement::"
msgstr ""

#: ../../docstring kivy.graphics.instructions.Canvas:13 of
msgid "Usage of a canvas with Python's ``with`` statement::"
msgstr ""

#: ../../docstring kivy.graphics.Canvas.add:1 of
msgid ""
"Append an :class:`Instruction` to our list. If the canvas contains an "
"`after` group, then this instruction is inserted just before the after "
"group, which remains last. This is different from how :meth:`insert` "
"works, which can insert anywhere."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.after:1 of
msgid "Property for getting the 'after' group."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.ask_update:1 of
msgid ""
"Inform the canvas that we'd like it to update on the next frame. This is "
"useful when you need to trigger a redraw due to some value having changed"
" for example."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.before:1 of
msgid "Property for getting the 'before' group."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.clear:1 of
msgid "Clears every :class:`Instruction` in the canvas, leaving it clean."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.draw:1 of
msgid "Apply the instruction to our window."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.has_after:1 of
msgid "Property to see if the :attr:`after` group has already been created."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.has_before:1 of
msgid "Property to see if the :attr:`before` group has already been created."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.opacity:1 of
msgid "Property to get/set the opacity value of the canvas."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.opacity:5 of
msgid ""
"The opacity attribute controls the opacity of the canvas and its "
"children.  Be careful, it's a cumulative attribute: the value is "
"multiplied to the current global opacity and the result is applied to the"
" current context color."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.opacity:10 of
msgid ""
"For example: if your parent has an opacity of 0.5 and a child has an "
"opacity of 0.2, the real opacity of the child will be 0.5 * 0.2 = 0.1."
msgstr ""

#: ../../docstring kivy.graphics.Canvas.opacity:13 of
msgid "Then, the opacity is applied on the shader as::"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.instructions.InstructionGroup`"
msgstr ""

#: ../../docstring kivy.graphics.instructions.CanvasBase:1 of
msgid "CanvasBase provides the context manager methods for the :class:`Canvas`."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.ChangeState:1 of
msgid "current render context."
msgstr ""

#: ../../docstring kivy.graphics.gl_instructions.ClearBuffers:4 of
msgid ""
"Clear the buffers specified by the instructions buffer mask property. By "
"default, only the coloc buffer is cleared."
msgstr ""

#: ../../docstring kivy.graphics.ClearBuffers.clear_color:1 of
msgid "If True, the color buffer will be cleared."
msgstr ""

#: ../../docstring kivy.graphics.ClearBuffers.clear_depth:1 of
msgid "If True, the depth buffer will be cleared."
msgstr ""

#: ../../docstring kivy.graphics.ClearBuffers.clear_stencil:1 of
msgid "If True, the stencil buffer will be cleared."
msgstr ""

#: ../../docstring kivy.graphics.gl_instructions.ClearColor:4 of
msgid ""
"Sets the clear color used to clear buffers with the glClear function or "
":class:`ClearBuffers` graphics instructions."
msgstr ""

#: ../../docstring kivy.graphics.ClearColor.a:1 kivy.graphics.Color.a:1 of
msgid "Alpha component, between 0 and 1."
msgstr ""

#: ../../docstring kivy.graphics.ClearColor.b:1 kivy.graphics.Color.b:1 of
msgid "Blue component, between 0 and 1."
msgstr ""

#: ../../docstring kivy.graphics.ClearColor.g:1 kivy.graphics.Color.g:1 of
msgid "Green component, between 0 and 1."
msgstr ""

#: ../../docstring kivy.graphics.ClearColor.r:1 kivy.graphics.Color.r:1 of
msgid "Red component, between 0 and 1."
msgstr ""

#: ../../docstring kivy.graphics.ClearColor.rgb:1 of
msgid "RGB color, a list of 3 values in 0-1 range where alpha will be 1."
msgstr ""

#: ../../docstring kivy.graphics.ClearColor.rgba:1 of
msgid "RGBA color used for the clear color, a list of 4 values in the 0-1 range."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.Color:1 of
msgid "drawn after it."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.Color:3 of
msgid ""
"This represents a color between 0 and 1, but is applied as a *multiplier*"
" to the texture of any vertex instructions following it in a canvas. If "
"no texture is set, the vertex instruction takes the precise color of the "
"Color instruction."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.Color:8 of
msgid ""
"For instance, if a Rectangle has a texture with uniform color ``(0.5, "
"0.5, 0.5, 1.0)`` and the preceding Color has ``rgba=(1, 0.5, 2, 1)``, the"
" actual visible color will be ``(0.5, 0.25, 1.0, 1.0)`` since the Color "
"instruction is applied as a multiplier to every rgba component. In this "
"case, a Color component outside the 0-1 range gives a visible result as "
"the intensity of the blue component is doubled."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.Color:16 of
msgid "To declare a Color in Python, you can do::"
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.Color:32 of
msgid ""
"You can also set color components that are available as properties by "
"passing them as keyword arguments::"
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.Color:37 of
msgid "In kv lang you can set the color properties directly:"
msgstr ""

#: ../../docstring kivy.graphics.Color.h:1 of
msgid "Hue component, between 0 and 1."
msgstr ""

#: ../../docstring kivy.graphics.Color.hsv:1 of
msgid "HSV color, list of 3 values in 0-1 range, alpha will be 1."
msgstr ""

#: ../../docstring kivy.graphics.Color.rgb:1 of
msgid "RGB color, list of 3 values in 0-1 range. The alpha will be 1."
msgstr ""

#: ../../docstring kivy.graphics.Color.rgba:1 of
msgid "RGBA color, list of 4 values in 0-1 range."
msgstr ""

#: ../../docstring kivy.graphics.Color.s:1 of
msgid "Saturation component, between 0 and 1."
msgstr ""

#: ../../docstring kivy.graphics.Color.v:1 of
msgid "Value component, between 0 and 1."
msgstr ""

#: ../../docstring kivy.graphics.instructions.ContextInstruction:1 of
msgid ""
"that don't have a direct visual representation, but instead modify the "
"current Canvas' state, e.g. texture binding, setting color parameters, "
"matrix manipulation and so on."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Ellipse:4 of
msgid "Added angle_start and angle_end."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Ellipse:8 of
msgid ""
"Define how many segments are needed for drawing the ellipse. The drawing "
"will be smoother if you have many segments."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Ellipse:10 of
msgid "`angle_start`: float, defaults to 0.0"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Ellipse:11 of
msgid "Specifies the starting angle, in degrees, of the disk portion."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Ellipse:14 of
msgid "`angle_end`: float, defaults to 360.0"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Ellipse:13 of
msgid "Specifies the ending angle, in degrees, of the disk portion."
msgstr ""

#: ../../docstring kivy.graphics.Ellipse.angle_end:1 of
msgid "End angle of the ellipse in degrees, defaults to 360."
msgstr ""

#: ../../docstring kivy.graphics.Ellipse.angle_start:1 of
msgid "Start angle of the ellipse in degrees, defaults to 0."
msgstr ""

#: ../../docstring kivy.graphics.Ellipse.segments:1 of
msgid "Property for getting/setting the number of segments of the ellipse."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.instructions.RenderContext`"
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:1 of
msgid "\"with\" statement."
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:4 of
msgid "`clear_color`: tuple, defaults to (0, 0, 0, 0)"
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:5 of
msgid "Define the default color for clearing the framebuffer"
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:6 of
msgid "`size`: tuple, defaults to (1024, 1024)"
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:7 of
msgid "Default size of the framebuffer"
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:9 of
msgid "`push_viewport`: bool, defaults to True"
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:9 of
msgid ""
"If True, the OpenGL viewport will be set to the framebuffer size, and "
"will be automatically restored when the framebuffer released."
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:11 of
msgid "`with_depthbuffer`: bool, defaults to False"
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:12 of
msgid "If True, the framebuffer will be allocated with a Z buffer."
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:15 of
msgid "`with_stencilbuffer`: bool, defaults to False"
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:16 of
msgid "If True, the framebuffer will be allocated with a stencil buffer."
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:18 of
msgid "`texture`: :class:`~kivy.graphics.texture.Texture`, defaults to None"
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:18 of
msgid "If None, a default texture will be created."
msgstr ""

#: ../../docstring kivy.graphics.fbo.Fbo:21 of
msgid ""
"Using both of ``with_stencilbuffer`` and ``with_depthbuffer`` is not "
"supported in kivy 1.9.0"
msgstr ""

#: ../../docstring kivy.graphics.Fbo.add_reload_observer:1 of
msgid ""
"Add a callback to be called after the whole graphics context has been "
"reloaded. This is where you can reupload your custom data in GPU."
msgstr ""

#: ../../docstring kivy.graphics.Fbo.add_reload_observer:7 of
msgid "`callback`: func(context) -> return None"
msgstr ""

#: ../../docstring kivy.graphics.Fbo.add_reload_observer:8 of
msgid "The first parameter will be the context itself"
msgstr ""

#: ../../docstring kivy.graphics.Fbo.bind:1 of
msgid ""
"Bind the FBO to the current opengl context. `Bind` mean that you enable "
"the Framebuffer, and all the drawing operations will act inside the "
"Framebuffer, until :meth:`release` is called."
msgstr ""

#: ../../docstring kivy.graphics.Fbo.bind:6 of
msgid ""
"The bind/release operations are automatically called when you add "
"graphics objects into it. If you want to manipulate a Framebuffer "
"yourself, you can use it like this::"
msgstr ""

#: ../../docstring kivy.graphics.Fbo.clear_buffer:1 of
msgid "Clear the framebuffer with the :attr:`clear_color`."
msgstr ""

#: ../../docstring kivy.graphics.Fbo.clear_buffer:3 of
msgid "You need to bind the framebuffer yourself before calling this method::"
msgstr ""

#: ../../docstring kivy.graphics.Fbo.clear_color:1 of
msgid "Clear color in (red, green, blue, alpha) format."
msgstr ""

#: ../../docstring kivy.graphics.Fbo.get_pixel_color:1 of
msgid ""
"Get the color of the pixel with specified window coordinates wx, wy. It "
"returns result in RGBA format."
msgstr ""

#: ../../docstring kivy.graphics.Fbo.pixels:1 of
msgid ""
"Get the pixels texture, in RGBA format only, unsigned byte. The origin of"
" the image is at bottom left."
msgstr ""

#: ../../docstring kivy.graphics.Fbo.release:1 of
msgid "Release the Framebuffer (unbind)."
msgstr ""

#: ../../docstring kivy.graphics.Fbo.remove_reload_observer:1 of
msgid ""
"Remove a callback from the observer list, previously added by "
":meth:`add_reload_observer`."
msgstr ""

#: ../../docstring kivy.graphics.Fbo.size:1 of
msgid "Size of the framebuffer, in (width, height) format."
msgstr ""

#: ../../docstring kivy.graphics.Fbo.size:3 of
msgid "If you change the size, the framebuffer content will be lost."
msgstr ""

#: ../../docstring kivy.graphics.Fbo.texture:1 of
msgid "Return the framebuffer texture"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.GraphicException:1 of
msgid "Bases: :py:class:`Exception`"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.GraphicException:1 of
msgid "Exception raised when a graphics error is fired."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.event.ObjectWithUid`"
msgstr ""

#: ../../docstring kivy.graphics.instructions.Instruction:1 of
msgid "usage only, don't use it directly."
msgstr ""

#: ../../docstring kivy.graphics.Instruction.group:1 of
msgid "group: unicode"
msgstr ""

#: ../../docstring kivy.graphics.Instruction.proxy_ref:1 of
msgid ""
"Return a proxy reference to the Instruction i.e. without creating a "
"reference of the widget. See `weakref.proxy "
"<http://docs.python.org/2/library/weakref.html?highlight=proxy#weakref.proxy>`_"
" for more information."
msgstr ""

#: ../../docstring kivy.graphics.instructions.InstructionGroup:1 of
msgid "of graphics instructions. It can be used directly as follows::"
msgstr ""

#: ../../docstring kivy.graphics.instructions.InstructionGroup:3 of
msgid ""
"blue = InstructionGroup() blue.add(Color(0, 0, 1, 0.2)) "
"blue.add(Rectangle(pos=self.pos, size=(100, 100)))"
msgstr ""

#: ../../docstring kivy.graphics.instructions.InstructionGroup:7 of
msgid ""
"green = InstructionGroup() green.add(Color(0, 1, 0, 0.4)) "
"green.add(Rectangle(pos=(100, 100), size=(100, 100)))"
msgstr ""

#: ../../docstring kivy.graphics.instructions.InstructionGroup:11 of
msgid ""
"# Here, self should be a Widget or subclass [self.canvas.add(group) for "
"group in [blue, green]]"
msgstr ""

#: ../../docstring kivy.graphics.InstructionGroup.add:1 of
msgid "Add a new :class:`Instruction` to our list."
msgstr ""

#: ../../docstring kivy.graphics.InstructionGroup.children:1 of
msgid "children: list"
msgstr ""

#: ../../docstring kivy.graphics.InstructionGroup.clear:1 of
msgid "Remove all the :class:`Instructions <Instruction>`."
msgstr ""

#: ../../docstring kivy.graphics.InstructionGroup.get_group:1 of
msgid ""
"Return an iterable for all the :class:`Instructions <Instruction>` with a"
" specific group name."
msgstr ""

#: ../../docstring kivy.graphics.InstructionGroup.insert:1 of
msgid "Insert a new :class:`Instruction` into our list at index."
msgstr ""

#: ../../docstring kivy.graphics.InstructionGroup.remove:1 of
msgid "Remove an existing :class:`Instruction` from our list."
msgstr ""

#: ../../docstring kivy.graphics.InstructionGroup.remove_group:1 of
msgid "Remove all :class:`Instructions <Instruction>` with a specific group name."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:2 of
msgid "Drawing a line can be done easily::"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:7 of
msgid ""
"The line has 3 internal drawing modes that you should be aware of for "
"optimal results:"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:10 of
msgid ""
"If the :attr:`width` is 1.0, then the standard GL_LINE drawing from "
"OpenGL will be used. :attr:`dash_length`, :attr:`dash_offset`, and "
":attr:`dashes` will work, while properties for cap and joint have no "
"meaning here."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:13 of
msgid ""
"If the :attr:`width` is greater than 1.0, then a custom drawing method, "
"based on triangulation, will be used. :attr:`dash_length`, "
":attr:`dash_offset`, and :attr:`dashes` do not work in this mode. "
"Additionally, if the current color has an alpha less than 1.0, a stencil "
"will be used internally to draw the line."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:28 of
msgid ""
"Offset between the end of a segment and the beginning of the next one, "
"defaults to 0. Changing this makes it dashed."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:33 of
msgid "`dashes`: list of ints"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:31 of
msgid ""
"List of [ON length, offset, ON length, offset, ...]. E.g. "
"``[2,4,1,6,8,2]`` would create a line with the first dash length 2 then "
"an offset of 4 then a dash length of 1 then an offset of 6 and so on. "
"Defaults to ``[]``. Changing this makes it dashed and overrides "
"`dash_length` and `dash_offset`."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:35 of
msgid "`width`: float"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:36 of
msgid "Width of the line, defaults to 1.0."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:37 of
msgid "`cap`: str, defaults to 'round'"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:38 of
msgid "See :attr:`cap` for more information."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:39 of
msgid "`joint`: str, defaults to 'round'"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:40 of
msgid "See :attr:`joint` for more information."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:41 of
msgid "`cap_precision`: int, defaults to 10"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:42 of
msgid "See :attr:`cap_precision` for more information"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:44
#: kivy.graphics.vertex_instructions.Line:46 of
msgid "`joint_precision`: int, defaults to 10"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:44 of
msgid ""
"See :attr:`joint_precision` for more information See "
":attr:`cap_precision` for more information."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:47 of
msgid "See :attr:`joint_precision` for more information."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:48 of
msgid "`close`: bool, defaults to False"
msgstr ""

#: ../../docstring kivy.graphics.Line.close:1
#: kivy.graphics.vertex_instructions.Line:49 of
msgid "If True, the line will be closed."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:51 of
msgid "`circle`: list"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:51 of
msgid ""
"If set, the :attr:`points` will be set to build a circle. See "
":attr:`circle` for more information."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:54 of
msgid "`ellipse`: list"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:54 of
msgid ""
"If set, the :attr:`points` will be set to build an ellipse. See "
":attr:`ellipse` for more information."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:57 of
msgid "`rectangle`: list"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:57 of
msgid ""
"If set, the :attr:`points` will be set to build a rectangle. See "
":attr:`rectangle` for more information."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:60 of
msgid "`bezier`: list"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:60 of
msgid ""
"If set, the :attr:`points` will be set to build a bezier line. See "
":attr:`bezier` for more information."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:63 of
msgid "`bezier_precision`: int, defaults to 180"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:63 of
msgid "Precision of the Bezier drawing."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:65 of
msgid "`dash_offset` and `dash_length` have been added."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:68 of
msgid ""
"`width`, `cap`, `joint`, `cap_precision`, `joint_precision`, `close`, "
"`ellipse`, `rectangle` have been added."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:72 of
msgid "`bezier`, `bezier_precision` have been added."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Line:75 of
msgid "`dashes` have been added"
msgstr ""

#: ../../docstring kivy.graphics.Line.bezier:1 of
msgid ""
"Use this property to build a bezier line, without calculating the "
":attr:`points`. You can only set this property, not get it."
msgstr ""

#: ../../docstring kivy.graphics.Line.bezier:4 of
msgid "The argument must be a tuple of 2n elements, n being the number of points."
msgstr ""

#: ../../docstring kivy.graphics.Line.bezier:6 kivy.graphics.Line.rectangle:11
#: kivy.graphics.Line.rounded_rectangle:18 of
msgid "Usage::"
msgstr ""

#: ../../docstring kivy.graphics.Line.bezier:12 of
msgid ""
"Bezier lines calculations are inexpensive for a low number of points, but"
" complexity is quadratic, so lines with a lot of points can be very "
"expensive to build, use with care!"
msgstr ""

#: ../../docstring kivy.graphics.Line.bezier_precision:1 of
msgid ""
"Number of iteration for drawing the bezier between 2 segments, defaults "
"to 180. The bezier_precision must be at least 1."
msgstr ""

#: ../../docstring kivy.graphics.Line.cap:1 of
msgid ""
"Determine the cap of the line, defaults to 'round'. Can be one of 'none',"
" 'square' or 'round'"
msgstr ""

#: ../../docstring kivy.graphics.Line.cap_precision:1 of
msgid ""
"Number of iteration for drawing the \"round\" cap, defaults to 10. The "
"cap_precision must be at least 1."
msgstr ""

#: ../../docstring kivy.graphics.Line.circle:1 of
msgid ""
"Use this property to build a circle, without calculating the "
":attr:`points`. You can only set this property, not get it."
msgstr ""

#: ../../docstring kivy.graphics.Line.circle:4 of
msgid ""
"The argument must be a tuple of (center_x, center_y, radius, angle_start,"
" angle_end, segments):"
msgstr ""

#: ../../docstring kivy.graphics.Line.circle:7 of
msgid "center_x and center_y represent the center of the circle"
msgstr ""

#: ../../docstring kivy.graphics.Line.circle:8 of
msgid "radius represent the radius of the circle"
msgstr ""

#: ../../docstring kivy.graphics.Line.circle:9 kivy.graphics.Line.ellipse:9 of
msgid ""
"(optional) angle_start and angle_end are in degree. The default value is "
"0 and 360."
msgstr ""

#: ../../docstring kivy.graphics.Line.circle:11 kivy.graphics.Line.ellipse:11
#: of
msgid ""
"(optional) segments is the precision of the ellipse. The default value is"
" calculated from the range between angle."
msgstr ""

#: ../../docstring kivy.graphics.Line.circle:14 of
msgid "Note that it's up to you to :attr:`close` the circle or not."
msgstr ""

#: ../../docstring kivy.graphics.Line.circle:16 kivy.graphics.Line.ellipse:16
#: of
msgid "For example, for building a simple ellipse, in python::"
msgstr ""

#: ../../docstring kivy.graphics.Line.dash_length:1 of
msgid "Property for getting/setting the length of the dashes in the curve"
msgstr ""

#: ../../docstring kivy.graphics.Line.dash_offset:1 of
msgid "Property for getting/setting the offset between the dashes in the curve"
msgstr ""

#: ../../docstring kivy.graphics.Line.dashes:1 of
msgid "Property for getting/setting ``dashes``."
msgstr ""

#: ../../docstring kivy.graphics.Line.dashes:3 of
msgid ""
"List of [ON length, offset, ON length, offset, ...]. E.g. "
"``[2,4,1,6,8,2]`` would create a line with the first dash length 2 then "
"an offset of 4 then a dash length of 1 then an offset of 6 and so on."
msgstr ""

#: ../../docstring kivy.graphics.Line.ellipse:1 of
msgid ""
"Use this property to build an ellipse, without calculating the "
":attr:`points`. You can only set this property, not get it."
msgstr ""

#: ../../docstring kivy.graphics.Line.ellipse:4 of
msgid ""
"The argument must be a tuple of (x, y, width, height, angle_start, "
"angle_end, segments):"
msgstr ""

#: ../../docstring kivy.graphics.Line.ellipse:7 of
msgid "x and y represent the bottom left of the ellipse"
msgstr ""

#: ../../docstring kivy.graphics.Line.ellipse:8 of
msgid "width and height represent the size of the ellipse"
msgstr ""

#: ../../docstring kivy.graphics.Line.ellipse:14 of
msgid "Note that it's up to you to :attr:`close` the ellipse or not."
msgstr ""

#: ../../docstring kivy.graphics.Line.joint:1 of
msgid ""
"Determine the join of the line, defaults to 'round'. Can be one of "
"'none', 'round', 'bevel', 'miter'."
msgstr ""

#: ../../docstring kivy.graphics.Line.joint_precision:1 of
msgid ""
"Number of iteration for drawing the \"round\" joint, defaults to 10. The "
"joint_precision must be at least 1."
msgstr ""

#: ../../docstring kivy.graphics.Line.points:1 of
msgid "Property for getting/settings points of the line"
msgstr ""

#: ../../docstring kivy.graphics.Line.points:5 of
msgid ""
"This will always reconstruct the whole graphics from the new points list."
" It can be very CPU expensive."
msgstr ""

#: ../../docstring kivy.graphics.Line.rectangle:1
#: kivy.graphics.Line.rounded_rectangle:1 of
msgid ""
"Use this property to build a rectangle, without calculating the "
":attr:`points`. You can only set this property, not get it."
msgstr ""

#: ../../docstring kivy.graphics.Line.rectangle:4 of
msgid "The argument must be a tuple of (x, y, width, height):"
msgstr ""

#: ../../docstring kivy.graphics.Line.rectangle:6
#: kivy.graphics.Line.rounded_rectangle:11 of
msgid "x and y represent the bottom-left position of the rectangle"
msgstr ""

#: ../../docstring kivy.graphics.Line.rectangle:7
#: kivy.graphics.Line.rounded_rectangle:12 of
msgid "width and height represent the size"
msgstr ""

#: ../../docstring kivy.graphics.Line.rectangle:9
#: kivy.graphics.Line.rounded_rectangle:16 of
msgid "The line is automatically closed."
msgstr ""

#: ../../docstring kivy.graphics.Line.rounded_rectangle:4 of
msgid "The argument must be a tuple of one of the following forms:"
msgstr ""

#: ../../docstring kivy.graphics.Line.rounded_rectangle:6 of
msgid "(x, y, width, height, corner_radius)"
msgstr ""

#: ../../docstring kivy.graphics.Line.rounded_rectangle:7 of
msgid "(x, y, width, height, corner_radius, resolution)"
msgstr ""

#: ../../docstring kivy.graphics.Line.rounded_rectangle:8 of
msgid ""
"(x, y, width, height, corner_radius1, corner_radius2, corner_radius3, "
"corner_radius4)"
msgstr ""

#: ../../docstring kivy.graphics.Line.rounded_rectangle:9 of
msgid ""
"(x, y, width, height, corner_radius1, corner_radius2, corner_radius3, "
"corner_radius4, resolution)"
msgstr ""

#: ../../docstring kivy.graphics.Line.rounded_rectangle:13 of
msgid ""
"corner_radius is the number of pixels between two borders and the center "
"of the circle arc joining them"
msgstr ""

#: ../../docstring kivy.graphics.Line.rounded_rectangle:14 of
msgid ""
"resolution is the number of line segment that will be used to draw the "
"circle arc at each corner (defaults to 30)"
msgstr ""

#: ../../docstring kivy.graphics.Line.width:1 of
msgid "Determine the width of the line, defaults to 1.0."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.LoadIdentity:1 of
msgid "the instructions stack property (default='modelview_mat')"
msgstr ""

#: ../../docstring kivy.graphics.LoadIdentity.stack:1
#: kivy.graphics.MatrixInstruction.stack:1 kivy.graphics.PopMatrix.stack:1
#: kivy.graphics.PushMatrix.stack:1 of
msgid ""
"Name of the matrix stack to use. Can be 'modelview_mat', 'projection_mat'"
" or 'frag_modelview_mat'."
msgstr ""

#: ../../docstring kivy.graphics.MatrixInstruction.matrix:1 of
msgid ""
"Matrix property. Matrix from the transformation module. Setting the "
"matrix using this property when a change is made is important because it "
"will notify the context about the update."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:2 of
msgid ""
"In OpenGL ES 2.0 and in our graphics implementation, you cannot have more"
" than 65535 indices."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:5 of
msgid "A list of vertices is described as::"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:11 of
msgid ""
"If you want to draw a triangle, add 3 vertices. You can then make an "
"indices list as follows:"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:14 of
msgid "indices = [0, 1, 2]"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:19 of
msgid "`vertices`: iterable"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:20 of
msgid "List of vertices in the format (x1, y1, u1, v1, x2, y2, u2, v2...)."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:21 of
msgid "`indices`: iterable"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:22 of
msgid "List of indices in the format (i1, i2, i3...)."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:24 of
msgid "`mode`: str"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:24 of
msgid ""
"Mode of the vbo. Check :attr:`mode` for more information. Defaults to "
"'points'."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:42 of
msgid "`fmt`: list"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:27 of
msgid ""
"The format for vertices, by default, each vertex is described by 2D "
"coordinates (x, y) and 2D texture coordinate (u, v). Each element of the "
"list should be a tuple or list, of the form"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:31 of
msgid "(variable_name, size, type)"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:33 of
msgid "which will allow mapping vertex data to the glsl instructions."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:35 of
msgid "[(b'v_pos', 2, 'float'), (b'v_tc', 2, 'float'),]"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:37 of
msgid "will allow using"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:39 of
msgid "attribute vec2 v_pos; attribute vec2 v_tc;"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:42 of
msgid "in glsl's vertex shader."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:44 of
msgid ""
"Before, `vertices` and `indices` would always be converted to a list, "
"now, they are only converted to a list if they do not implement the "
"buffer interface. So e.g. numpy arrays, python arrays etc. are used in "
"place, without creating any additional copies. However, the buffers "
"cannot be readonly (even though they are not changed, due to a cython "
"limitation) and must be contiguous in memory."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Mesh:53 of
msgid ""
"When passing a memoryview or a instance that implements the buffer "
"interface, `vertices` should be a buffer of floats (`'f'` code in python "
"array) and `indices` should be a buffer of unsigned short (`'H'` code in "
"python array). Arrays in other formats will still have to be converted "
"internally, negating any potential gain."
msgstr ""

#: ../../docstring kivy.graphics.Mesh.indices:1 of
msgid "Vertex indices used to specify the order when drawing the mesh."
msgstr ""

#: ../../docstring kivy.graphics.Mesh.mode:1 of
msgid ""
"VBO Mode used for drawing vertices/indices. Can be one of 'points', "
"'line_strip', 'line_loop', 'lines', 'triangles', 'triangle_strip' or "
"'triangle_fan'."
msgstr ""

#: ../../docstring kivy.graphics.Mesh.vertices:1 of
msgid ""
"List of x, y, u, v coordinates used to construct the Mesh. Right now, the"
" Mesh instruction doesn't allow you to change the format of the vertices,"
" which means it's only x, y + one texture coordinate."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Point:1 of
msgid "width/height of 2 times the :attr:`pointsize`."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Point:5 of
msgid ""
"List of points in the format (x1, y1, x2, y2...), where each pair of "
"coordinates specifies the center of a new point."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Point:9 of
msgid "`pointsize`: float, defaults to 1."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Point:8 of
msgid ""
"The size of the point, measured from the center to the edge. A value of "
"1.0 therefore means the real size will be 2.0 x 2.0."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Point:13 of
msgid ""
"Starting from version 1.0.7, vertex instruction have a limit of 65535 "
"vertices (indices of vertex to be accurate). 2 entries in the list (x, y)"
" will be converted to 4 vertices. So the limit inside Point() class is "
"2^15-2."
msgstr ""

#: ../../docstring kivy.graphics.Point.add_point:1 of
msgid "Add a point to the current :attr:`points` list."
msgstr ""

#: ../../docstring kivy.graphics.Point.add_point:3 of
msgid ""
"If you intend to add multiple points, prefer to use this method instead "
"of reassigning a new :attr:`points` list. Assigning a new :attr:`points` "
"list will recalculate and reupload the whole buffer into the GPU. If you "
"use add_point, it will only upload the changes."
msgstr ""

#: ../../docstring kivy.graphics.Point.points:1 of
msgid ""
"Property for getting/settings the center points in the points list. Each "
"pair of coordinates specifies the center of a new point."
msgstr ""

#: ../../docstring kivy.graphics.Point.pointsize:1 of
msgid ""
"Property for getting/setting point size. The size is measured from the "
"center to the edge, so a value of 1.0 means the real size will be 2.0 x "
"2.0."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.PopState:1
#: kivy.graphics.context_instructions.PushState:1 of
msgid "state stack."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Quad:4 of
msgid "List of point in the format (x1, y1, x2, y2, x3, y3, x4, y4)."
msgstr ""

#: ../../docstring kivy.graphics.Quad.points:1 of
msgid "Property for getting/settings points of the quad."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Rectangle:3 of
msgid "`pos`: list"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Rectangle:4 of
msgid "Position of the rectangle, in the format (x, y)."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Rectangle:7 of
msgid "`size`: list"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Rectangle:6 of
msgid "Size of the rectangle, in the format (width, height)."
msgstr ""

#: ../../docstring kivy.graphics.Rectangle.pos:1 of
msgid "Property for getting/settings the position of the rectangle."
msgstr ""

#: ../../docstring kivy.graphics.Rectangle.size:1 of
msgid "Property for getting/settings the size of the rectangle."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.instructions.Canvas`"
msgstr ""

#: ../../docstring kivy.graphics.instructions.RenderContext:2 of
msgid "The vertex shader"
msgstr ""

#: ../../docstring kivy.graphics.instructions.RenderContext:3 of
msgid "The fragment shader"
msgstr ""

#: ../../docstring kivy.graphics.instructions.RenderContext:4 of
msgid "The default texture"
msgstr ""

#: ../../docstring kivy.graphics.instructions.RenderContext:5 of
msgid "The state stack (color, texture, matrix...)"
msgstr ""

#: ../../docstring kivy.graphics.RenderContext.shader:1 of
msgid "Return the shader attached to the render context."
msgstr ""

#: ../../docstring kivy.graphics.RenderContext.use_parent_frag_modelview:1 of
msgid "If True, the parent fragment modelview matrix will be used."
msgstr ""

#: ../../docstring kivy.graphics.RenderContext.use_parent_frag_modelview:5 of
msgid "rc = RenderContext(use_parent_frag_modelview=True)"
msgstr ""

#: ../../docstring kivy.graphics.RenderContext.use_parent_modelview:1 of
msgid "If True, the parent modelview matrix will be used."
msgstr ""

#: ../../docstring kivy.graphics.RenderContext.use_parent_modelview:5
#: kivy.graphics.RenderContext.use_parent_projection:5 of
msgid "Before::"
msgstr ""

#: ../../docstring kivy.graphics.RenderContext.use_parent_modelview:9
#: kivy.graphics.RenderContext.use_parent_projection:9 of
msgid "Now::"
msgstr ""

#: ../../docstring kivy.graphics.RenderContext.use_parent_projection:1 of
msgid "If True, the parent projection matrix will be used."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.context_instructions.Transform`"
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.Rotate:1 of
msgid ""
"on the modelview matrix. You can set the properties of the instructions "
"afterwards with e.g. ::"
msgstr ""

#: ../../docstring kivy.graphics.Rotate.angle:1 of
msgid "Property for getting/setting the angle of the rotation."
msgstr ""

#: ../../docstring kivy.graphics.Rotate.axis:1 of
msgid "Property for getting/setting the axis of the rotation."
msgstr ""

#: ../../docstring kivy.graphics.Rotate.axis:3 of
msgid "The format of the axis is (x, y, z)."
msgstr ""

#: ../../docstring kivy.graphics.Rotate.origin:1 of
msgid "Origin of the rotation."
msgstr ""

#: ../../docstring kivy.graphics.Rotate.origin:5 kivy.graphics.Scale.origin:5
#: of
msgid "The format of the origin can be either (x, y) or (x, y, z)."
msgstr ""

#: ../../docstring kivy.graphics.Rotate.set:1 of
msgid "Set the angle and axis of rotation."
msgstr ""

#: ../../docstring kivy.graphics.Rotate.set:7 of
msgid "The set() method doesn't use the new :attr:`origin` property."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.Scale:2 of
msgid "Create using one or three arguments::"
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.Scale:7 of
msgid ""
"Deprecated single scale property in favor of x, y, z, xyz axis "
"independent scaled factors."
msgstr ""

#: ../../docstring kivy.graphics.Scale.origin:1 of
msgid "Origin of the scale."
msgstr ""

#: ../../docstring kivy.graphics.Scale.scale:1 of
msgid "Property for getting/setting the scale."
msgstr ""

#: ../../docstring kivy.graphics.Scale.scale:3 of
msgid "Deprecated in favor of per axis scale properties x,y,z, xyz, etc."
msgstr ""

#: ../../docstring kivy.graphics.Scale.x:1 of
msgid "Property for getting/setting the scale on the X axis."
msgstr ""

#: ../../docstring kivy.graphics.Scale.xyz:1 of
msgid "3 tuple scale vector in 3D in x, y, and z axis."
msgstr ""

#: ../../docstring kivy.graphics.Scale.y:1 of
msgid "Property for getting/setting the scale on the Y axis."
msgstr ""

#: ../../docstring kivy.graphics.Scale.z:1 of
msgid "Property for getting/setting the scale on Z axis."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.graphics.vertex_instructions.Line`"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.SmoothLine:1 of
msgid "results. It has few drawbacks:"
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.SmoothLine:3 of
msgid ""
"drawing a line with alpha will probably not have the intended result if "
"the line crosses itself."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.SmoothLine:5 of
msgid ""
":attr:`~Line.cap`, :attr:`~Line.joint` and :attr:`~Line.dash` properties "
"are not supported."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.SmoothLine:7 of
msgid "it uses a custom texture with a premultiplied alpha."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.SmoothLine:8 of
msgid "lines under 1px in width are not supported: they will look the same."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.SmoothLine:12 of
msgid "This is an unfinished work, experimental, and subject to crashes."
msgstr ""

#: ../../docstring kivy.graphics.SmoothLine.overdraw_width:1 of
msgid "Determine the overdraw width of the line, defaults to 1.2."
msgstr ""

#: ../../docstring kivy.graphics.stencil_instructions.StencilPop:1 of
msgid "Pop the stencil stack. See the module documentation for more information."
msgstr ""

#: ../../docstring kivy.graphics.stencil_instructions.StencilPush:1 of
msgid "Push the stencil stack. See the module documentation for more information."
msgstr ""

#: ../../docstring kivy.graphics.stencil_instructions.StencilUnUse:1 of
msgid "Use current stencil buffer to unset the mask."
msgstr ""

#: ../../docstring kivy.graphics.stencil_instructions.StencilUse:1 of
msgid "more information."
msgstr ""

#: ../../docstring kivy.graphics.StencilUse.func_op:1 of
msgid ""
"Determine the stencil operation to use for glStencilFunc(). Can be one of"
" 'never', 'less', 'equal', 'lequal', 'greater', 'notequal', 'gequal' or "
"'always'."
msgstr ""

#: ../../docstring kivy.graphics.StencilUse.func_op:5 of
msgid "By default, the operator is set to 'equal'."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.Translate:2 of
msgid "Construct by either::"
msgstr ""

#: ../../docstring kivy.graphics.Translate.x:1 of
msgid "Property for getting/setting the translation on the X axis."
msgstr ""

#: ../../docstring kivy.graphics.Translate.xy:1 of
msgid "2 tuple with translation vector in 2D for x and y axis."
msgstr ""

#: ../../docstring kivy.graphics.Translate.xyz:1 of
msgid "3 tuple translation vector in 3D in x, y, and z axis."
msgstr ""

#: ../../docstring kivy.graphics.Translate.y:1 of
msgid "Property for getting/setting the translation on the Y axis."
msgstr ""

#: ../../docstring kivy.graphics.Translate.z:1 of
msgid "Property for getting/setting the translation on the Z axis."
msgstr ""

#: ../../docstring kivy.graphics.vertex_instructions.Triangle:4 of
msgid "List of points in the format (x1, y1, x2, y2, x3, y3)."
msgstr ""

#: ../../docstring kivy.graphics.Triangle.points:1 of
msgid "Property for getting/settings points of the triangle."
msgstr ""

#: ../../docstring kivy.graphics.context_instructions.UpdateNormalMatrix:1 of
msgid ""
"Update the normal matrix 'normal_mat' based on the current modelview "
"matrix. This will compute 'normal_mat' uniform as: `inverse( transpose( "
"mat3(mvm) ) )`"
msgstr ""

#: ../../docstring kivy.graphics.instructions.VertexInstruction:1 of
msgid ""
"that have a direct visual representation on the canvas, such as "
"Rectangles, Triangles, Lines, Ellipse and so on."
msgstr ""

#: ../../docstring kivy.graphics.VertexInstruction.source:1 of
msgid ""
"This property represents the filename to load the texture from. If you "
"want to use an image as source, do it like this::"
msgstr ""

#: ../../docstring kivy.graphics.VertexInstruction.source:7 of
msgid "Here's the equivalent in Kivy language:"
msgstr ""

#: ../../docstring kivy.graphics.VertexInstruction.source:20 of
msgid ""
"The filename will be searched for using the "
":func:`kivy.resources.resource_find` function."
msgstr ""

#: ../../docstring kivy.graphics.VertexInstruction.tex_coords:1 of
msgid ""
"This property represents the texture coordinates used for drawing the "
"vertex instruction. The value must be a list of 8 values."
msgstr ""

#: ../../docstring kivy.graphics.VertexInstruction.tex_coords:4 of
msgid ""
"A texture coordinate has a position (u, v), and a size (w, h). The size "
"can be negative, and would represent the 'flipped' texture. By default, "
"the tex_coords are::"
msgstr ""

#: ../../docstring kivy.graphics.VertexInstruction.tex_coords:10 of
msgid ""
"You can pass your own texture coordinates if you want to achieve fancy "
"effects."
msgstr ""

#: ../../docstring kivy.graphics.VertexInstruction.tex_coords:15 of
msgid ""
"The default values just mentioned can be negative. Depending on the image"
" and label providers, the coordinates are flipped vertically because of "
"the order in which the image is internally stored. Instead of flipping "
"the image data, we are just flipping the texture coordinates to be "
"faster."
msgstr ""

#: ../../docstring kivy.graphics.VertexInstruction.texture:1 of
msgid ""
"Property that represents the texture used for drawing this Instruction. "
"You can set a new texture like this::"
msgstr ""

#: ../../docstring kivy.graphics.VertexInstruction.texture:10 of
msgid "Usually, you will use the :attr:`source` attribute instead of the texture."
msgstr ""

