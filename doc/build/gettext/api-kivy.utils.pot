# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.utils.rst:3
msgid "Utils"
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils:2
msgid "The Utils module provides a selection of general utility functions and classes that may be useful for various applications. These include maths, color, algebraic and platform functions."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils:6
msgid "The OrderedDict class has been removed. Use collections.OrderedDict instead."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.dict`"
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.QueryDict:1
msgid "QueryDict is a dict() that can be queried with dot."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.list`"
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.SafeList:1
msgid "List with a clear() method."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.SafeList:4
msgid "Usage of the iterate() function will decrease your performance."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.SafeList.clear:1
msgid "Remove all items from list."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.boundary:1
msgid "Limit a value between a minvalue and maxvalue."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.deprecated:1
msgid "This is a decorator which can be used to mark functions as deprecated. It will result in a warning being emitted the first time the function is used."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.difference:1
msgid "Return the difference between 2 lists."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.escape_markup:1
msgid "Escape markup characters found in the text. Intended to be used when markup text is activated on the Label::"
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.get_color_from_hex:1
msgid "Transform a hex string color to a kivy :class:`~kivy.graphics.Color`."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.get_hex_from_color:1
msgid "Transform a kivy :class:`~kivy.graphics.Color` to a hex value::"
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.get_random_color:1
msgid "Returns a random color (4 tuple)."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.get_random_color:0
msgid "Parameters"
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.get_random_color:4
msgid "`alpha`: float, defaults to 1.0"
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.get_random_color:5
msgid "If alpha == 'random', a random alpha value is generated."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.interpolate:1
msgid "Interpolate between two values. This can be useful for smoothing some transitions. For example::"
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.interpolate:11
msgid "These interpolations work only on lists/tuples/doubles with the same dimensions. No test is done to check the dimensions are the same."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.intersection:1
msgid "Return the intersection of 2 lists."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.is_color_transparent:1
msgid "Return True if the alpha channel is 0."
msgstr ""

#: ../../docstring of kivy.utils.platform:1
msgid "A string identifying the current operating system. It is one of: `'win'`, `'linux'`, `'android'`, `'macosx'`, `'ios'` or `'unknown'`. You can use it as follows::"
msgstr ""

#: ../../docstring of kivy.utils.platform:13
msgid "platform is now a variable instead of a function."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.object`"
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.reify:1
msgid "Put the result of a method which uses this (non-data) descriptor decorator in the instance dict after the first call, effectively replacing the decorator with an instance variable."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.reify:5
msgid "It acts like @property, except that the function is only ever called once; after that, the value is cached as a regular attribute. This gives you lazy attribute creation on objects that are meant to be immutable."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.reify:9
msgid "Taken from the `Pyramid project <https://pypi.python.org/pypi/pyramid/>`_."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.reify:11
msgid "To use this as a decorator::"
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.rgba:1
msgid "Return a Kivy color (4 value from 0-1 range) from either a hex string or a list of 0-255 values."
msgstr ""

#: ../../../kivy/utils.py:docstring of kivy.utils.strtotuple:1
msgid "Convert a tuple string into a tuple with some security checks. Designed to be used with the eval() function::"
msgstr ""
