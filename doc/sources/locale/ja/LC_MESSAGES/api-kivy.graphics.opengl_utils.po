# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/api-kivy.graphics.opengl_utils.rst:3
msgid "OpenGL utilities"
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_get_extensions:1 of
msgid ""
"Return a list of OpenGL extensions available. All the names in the list "
"have the `GL_` stripped at the start (if it exists) and are in lowercase."
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_get_texture_formats:1 of
msgid ""
"Return a list of texture formats recognized by kivy. The texture list is "
"informative but might not been supported by your hardware. If you want a "
"list of supported textures, you must filter that list as follows::"
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_get_version:1 of
msgid "Return the (major, minor) OpenGL version, parsed from the GL_VERSION."
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_get_version_major:1 of
msgid "Return the major component of the OpenGL version."
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_get_version_minor:1 of
msgid "Return the minor component of the OpenGL version."
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_has_capability:1 of
msgid ""
"Return the status of a OpenGL Capability. This is a wrapper that auto-"
"discovers all the capabilities that Kivy might need. The current "
"capabilities tested are:"
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_has_capability:5 of
msgid "GLCAP_BGRA: Test the support of BGRA texture format"
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_has_capability:6 of
msgid "GLCAP_NPOT: Test the support of Non Power of Two texture"
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_has_capability:7 of
msgid "GLCAP_S3TC: Test the support of S3TC texture (DXT1, DXT3, DXT5)"
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_has_capability:8 of
msgid "GLCAP_DXT1: Test the support of DXT texture (subset of S3TC)"
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_has_capability:9 of
msgid "GLCAP_ETC1: Test the support of ETC1 texture"
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_has_extension:1 of
msgid ""
"Check if an OpenGL extension is available. If the name starts with `GL_`,"
" it will be stripped for the test and converted to lowercase."
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_has_texture_conversion:1 of
msgid "Return 1 if the texture can be converted to a native format."
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_has_texture_format:1 of
msgid ""
"Return whether a texture format is supported by your system, natively or "
"by conversion. For example, if your card doesn't support 'bgra', we are "
"able to convert to 'rgba' but only in software mode."
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_has_texture_native_format:1 of
msgid "Return 1 if the texture format is handled natively."
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_register_get_size:1 of
msgid ""
"Register an association between an OpenGL Const used in glGet* to a "
"number of elements."
msgstr ""

#: ../../docstring kivy.graphics.opengl_utils.gl_register_get_size:4 of
msgid ""
"By example, the GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX is a special pname "
"that will return the integer 1 (nvidia only)."
msgstr ""

