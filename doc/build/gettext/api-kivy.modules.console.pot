# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.modules.console.rst:3
msgid "Console"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:4
msgid "Reboot of the old inspector, designed to be modular and keep concerns separated. It also has an addons architecture that allow you to add a button, panel, or more in the Console itself."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:10
msgid "This module works, but might fail in some cases. Please contribute!"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:13
msgid "Usage"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:15
msgid "For normal module usage, please see the :mod:`~kivy.modules` documentation::"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:20
msgid "Mouse navigation"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:22
msgid "When the \"Select\" button is activated, you can:"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:24
msgid "tap once on a widget to select it without leaving inspect mode"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:25
msgid "double tap on a widget to select and leave inspect mode (then you can manipulate the widget again)"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:29
msgid "Keyboard navigation"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:31
msgid "\"Ctrl + e\": toggle console"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:32
msgid "\"Escape\": cancel widget lookup, then hide inspector view"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:33
msgid "\"Up\": select the parent widget"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:34
msgid "\"Down\": select the first child of the currently selected widget"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:35
msgid "\"Left\": select the previous sibling"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:36
msgid "\"Right\": select the next sibling"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:39
msgid "Additional information"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:41
msgid "Some properties can be edited live. However, due to the delayed usage of some properties, it might crash if you don't handle the required cases."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:45
msgid "Addons"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:47
msgid "Addons must be added to `Console.addons` before the first Clock tick of the application, or before :attr:`create_console` is called. You currently cannot add addons on the fly. Addons are quite cheap until the Console is activated. Panels are even cheaper as nothing is done until the user selects them."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:52
msgid "We provide multiple addons activated by default:"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:54
msgid "ConsoleAddonFps: display the FPS at the top-right"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:55
msgid "ConsoleAddonSelect: activate the selection mode"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:56
msgid "ConsoleAddonBreadcrumb: display the hierarchy of the current widget at the bottom"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:58
msgid "ConsoleAddonWidgetTree: panel to display the widget tree of the application"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:59
msgid "ConsoleAddonWidgetPanel: panel to display the properties of the selected widget"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:62
msgid "If you need to add custom widgets in the Console, please use either :class:`ConsoleButton`, :class:`ConsoleToggleButton` or :class:`ConsoleLabel`."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:65
msgid "An addon must inherit from the :class:`ConsoleAddon` class."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:67
msgid "For example, here is a simple addon for displaying the FPS at the top/right of the Console::"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console:90
msgid "You can create addons that add panels. Panel activation/deactivation is not tied to the addon activation/deactivation, but in some cases, you can use the same callback for deactivating the addon and the panel. Here is a simple \"About\" panel addon::"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.relativelayout.RelativeLayout`"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console:1
msgid "Console interface"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console:3
msgid "This widget is created by create_console(), when the module is loaded. During that time, you can add addons on the console to extend the functionalities, or add your own application stats / debugging module."
msgstr ""

#: ../../docstring of kivy.modules.console.Console.activated:1
msgid "True if the Console is activated (showed)"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.add_panel:1
msgid "Add a new panel in the Console."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.add_panel:3
msgid "`cb_activate` is a callable that will be called when the panel is activated by the user."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.add_panel:6
msgid "`cb_deactivate` is a callable that will be called when the panel is deactivated or when the console will hide."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.add_panel:9
msgid "`cb_refresh` is an optional callable that is called if the user click again on the button for display the panel"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.add_panel:12
msgid "When activated, it's up to the panel to display a content in the Console by using :meth:`set_content`."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.add_toolbar_widget:1
msgid "Add a widget in the top left toolbar of the Console. Use `right=True` if you wanna add the widget at the right instead."
msgstr ""

#: ../../docstring of kivy.modules.console.Console.addons:1
msgid "Array of addons that will be created at Console creation"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.highlight_at:1
msgid "Select a widget from a x/y window coordinate. This is mostly used internally when Select mode is activated"
msgstr ""

#: ../../docstring of kivy.modules.console.Console.inspect_enabled:1
msgid "Indicate if the inspector inspection is enabled. If yes, the next touch down will select a the widget under the touch"
msgstr ""

#: ../../docstring of kivy.modules.console.Console.mode:1
msgid "Display mode of the Console, either docked at the bottom, or as a floating window."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.on_touch_down:1
msgid "Receive a touch down event."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.on_touch_down:0
#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.start:0
msgid "Parameters"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.on_touch_down:7
msgid "`touch`: :class:`~kivy.input.motionevent.MotionEvent` class"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.on_touch_down:5
msgid "Touch received. The touch is in parent coordinates. See :mod:`~kivy.uix.relativelayout` for a discussion on coordinate systems."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.on_touch_down:0
msgid "Returns"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.on_touch_down:9
msgid "bool If True, the dispatching of the touch event will stop. If False, the event will continue to be dispatched to the rest of the widget tree."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.on_touch_move:1
msgid "Receive a touch move event. The touch is in parent coordinates."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.on_touch_move:3
#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.on_touch_up:3
msgid "See :meth:`on_touch_down` for more information."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.on_touch_up:1
msgid "Receive a touch up event. The touch is in parent coordinates."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.pick:1
msgid "Pick a widget at x/y, given a root `widget`"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.remove_toolbar_widget:1
msgid "Remove a widget from the toolbar"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.Console.set_content:1
msgid "Replace the Console content with a new one."
msgstr ""

#: ../../docstring of kivy.modules.console.Console.widget:1
msgid "Current widget being selected"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.object`"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.ConsoleAddon:1
msgid "Base class for implementing addons"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.ConsoleAddon.activate:1
msgid "Method called when the addon is activated by the console (when the console is displayed)"
msgstr ""

#: ../../docstring of kivy.modules.console.ConsoleAddon.console:1
msgid "Console instance"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.ConsoleAddon.deactivate:1
msgid "Method called when the addon is deactivated by the console (when the console is hidden)"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.ConsoleAddon.init:1
msgid "Method called when the addon is instantiated by the Console"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.button.Button`"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.ConsoleButton:1
msgid "Button specialized for the Console"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.label.Label`"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.ConsoleLabel:1
msgid "LabelButton specialized for the Console"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.togglebutton.ToggleButton`"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.ConsoleToggleButton:1
msgid "ToggleButton specialized for the Console"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.start:1
msgid "Create an Console instance attached to the *ctx* and bound to the Window's :meth:`~kivy.core.window.WindowBase.on_keyboard` event for capturing the keyboard shortcut."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.start:6
msgid "`win`: A :class:`Window <kivy.core.window.WindowBase>`"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.start:7
msgid "The application Window to bind to."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.start:8
msgid "`ctx`: A :class:`~kivy.uix.widget.Widget` or subclass"
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.start:9
msgid "The Widget to be inspected."
msgstr ""

#: ../../../kivy/modules/console.py:docstring of kivy.modules.console.stop:1
msgid "Stop and unload any active Inspectors for the given *ctx*."
msgstr ""
