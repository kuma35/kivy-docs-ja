# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.core.spelling.rst:3
msgid "Spelling"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling:2
msgid "Provides abstracted access to a range of spellchecking backends as well as word suggestions. The API is inspired by enchant but other backends can be added that implement the same API."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling:6
msgid "Spelling currently requires `python-enchant` for all platforms except OSX, where a native implementation exists."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoLanguageSelectedError:1
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoSuchLangError:1
msgid "Bases: :py:class:`Exception`"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoLanguageSelectedError:1
msgid "Exception to be raised when a language-using method is called but no language was selected prior to the call."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoSuchLangError:1
msgid "Exception to be raised when a specific language could not be found."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.object`"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase:1
msgid "Base class for all spelling providers. Supports some abstract methods for checking words and getting suggestions."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:1
msgid "If `word` is a valid word in `self._language` (the currently active language), returns True. If the word shouldn't be checked, returns None (e.g. for ''). If it is not a valid word in `self._language`, return False."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:0
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:0
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:0
msgid "Parameters"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:7
msgid "`word`: str"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:8
msgid "The word to check."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.list_languages:1
msgid "Return a list of all supported languages. E.g. ['en', 'en_GB', 'en_US', 'de', ...]"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:1
msgid "From the set of registered languages, select the first language for `language`."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:7
msgid "`language`: str"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:6
msgid "Language identifier. Needs to be one of the options returned by list_languages(). Sets the language used for spell checking and word suggestions."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:1
msgid "For a given `fragment` (i.e. part of a word or a word by itself), provide corrections (`fragment` may be misspelled) or completions as a list of strings."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:7
msgid "`fragment`: str"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:7
msgid "The word fragment to get suggestions/corrections for. E.g. 'foo' might become 'of', 'food' or 'foot'."
msgstr ""
