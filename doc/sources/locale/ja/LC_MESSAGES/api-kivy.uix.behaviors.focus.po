# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/api-kivy.uix.behaviors.focus.rst:3
msgid "Focus Behavior"
msgstr ""

#: kivy.uix.behaviors.focus:2 of
msgid ""
"The :class:`~kivy.uix.behaviors.FocusBehavior` `mixin "
"<https://en.wikipedia.org/wiki/Mixin>`_ class provides keyboard focus "
"behavior. When combined with other FocusBehavior widgets it allows one to"
" cycle focus among them by pressing tab. In addition, upon gaining focus,"
" the instance will automatically receive keyboard input."
msgstr ""

#: kivy.uix.behaviors.focus:9 of
msgid ""
"Focus, very different from selection, is intimately tied with the "
"keyboard; each keyboard can focus on zero or one widgets, and each widget"
" can only have the focus of one keyboard. However, multiple keyboards can"
" focus simultaneously on different widgets. When escape is hit, the "
"widget having the focus of that keyboard will de-focus."
msgstr ""

#: kivy.uix.behaviors.focus:16 of
msgid "Managing focus"
msgstr ""

#: kivy.uix.behaviors.focus:18 of
msgid ""
"In essence, focus is implemented as a doubly linked list, where each node"
" holds a (weak) reference to the instance before it and after it, as "
"visualized when cycling through the nodes using tab (forward) or "
"shift+tab (backward). If a previous or next widget is not specified, "
":attr:`focus_next` and :attr:`focus_previous` defaults to `None`. This "
"means that the :attr:`~kivy.uix.widget.Widget.children` list and "
":attr:`parents <kivy.uix.widget.Widget.parent>` are walked to find the "
"next focusable widget, unless :attr:`focus_next` or "
":attr:`focus_previous` is set to the `StopIteration` class, in which case"
" focus stops there."
msgstr ""

#: kivy.uix.behaviors.focus:29 of
msgid ""
"For example, to cycle focus between :class:`~kivy.uix.button.Button` "
"elements of a :class:`~kivy.uix.gridlayout.GridLayout`::"
msgstr ""

#: kivy.uix.behaviors.focus:41 of
msgid ""
"When using a software keyboard, typical on mobile and touch devices, the "
"keyboard display behavior is determined by the "
":attr:`~kivy.core.window.WindowBase.softinput_mode` property. You can use"
" this property to ensure the focused widget is not covered or obscured by"
" the keyboard."
msgstr ""

#: kivy.uix.behaviors.focus:48 of
msgid "Initializing focus"
msgstr ""

#: kivy.uix.behaviors.focus:50 of
msgid ""
"Widgets needs to be visible before they can receive the focus. This means"
" that setting their *focus* property to True before they are visible will"
" have no effect. To initialize focus, you can use the 'on_parent' event::"
msgstr ""

#: kivy.uix.behaviors.focus:67 of
msgid ""
"If you are using a :class:`~kivy.uix.popup`, you can use the 'on_open' "
"event."
msgstr ""

#: kivy.uix.behaviors.focus:69 of
msgid ""
"For an overview of behaviors, please refer to the "
":mod:`~kivy.uix.behaviors` documentation."
msgstr ""

#: kivy.uix.behaviors.focus:74 of
msgid ""
"This code is still experimental, and its API is subject to change in a "
"future version."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`builtins.object`"
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior:1 of
msgid ""
"Provides keyboard focus behavior. When combined with other FocusBehavior "
"widgets it allows one to cycle focus among them by pressing tab. Please "
"see the :mod:`focus behavior module documentation "
"<kivy.uix.behaviors.focus>` for more information."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focus:1 of
msgid "Whether the instance currently has focus."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focus:3 of
msgid ""
"Setting it to True will bind to and/or request the keyboard, and input "
"will be forwarded to the instance. Setting it to False will unbind and/or"
" release the keyboard. For a given keyboard, only one widget can have its"
" focus, so focusing one will automatically unfocus the other instance "
"holding its focus."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focus:9 of
msgid ""
"When using a software keyboard, please refer to the "
":attr:`~kivy.core.window.WindowBase.softinput_mode` property to determine"
" how the keyboard display is handled."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focus:13 of
msgid ""
":attr:`focus` is a :class:`~kivy.properties.BooleanProperty` and defaults"
" to False."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focus_next:1 of
msgid ""
"The :class:`FocusBehavior` instance to acquire focus when tab is pressed "
"and this instance has focus, if not `None` or `StopIteration`."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focus_next:5 of
msgid ""
"When tab is pressed, focus cycles through all the :class:`FocusBehavior` "
"widgets that are linked through :attr:`focus_next` and are focusable. If "
":attr:`focus_next` is `None`, it instead walks the children lists to find"
" the next focusable widget. Finally, if :attr:`focus_next` is the "
"`StopIteration` class, focus won't move forward, but end here."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focus_next:22 of
msgid ""
":attr:`focus_next` is an :class:`~kivy.properties.ObjectProperty` and "
"defaults to `None`."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focus_previous:1 of
msgid ""
"The :class:`FocusBehavior` instance to acquire focus when shift+tab is "
"pressed on this instance, if not None or `StopIteration`."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focus_previous:4 of
msgid ""
"When shift+tab is pressed, focus cycles through all the "
":class:`FocusBehavior` widgets that are linked through "
":attr:`focus_previous` and are focusable. If :attr:`focus_previous` is "
"`None`, it instead walks the children tree to find the previous focusable"
" widget. Finally, if :attr:`focus_previous` is the `StopIteration` class,"
" focus won't move backward, but end here."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focus_previous:21 of
msgid ""
":attr:`focus_previous` is an :class:`~kivy.properties.ObjectProperty` and"
" defaults to `None`."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focused:1 of
msgid "An alias of :attr:`focus`."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focused:3 of
msgid ""
":attr:`focused` is a :class:`~kivy.properties.BooleanProperty` and "
"defaults to False."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.focused:7 of
msgid ":attr:`focused` is an alias of :attr:`focus` and will be removed in 2.0.0."
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.get_focus_next:1 of
msgid ""
"Returns the next focusable widget using either :attr:`focus_next` or the "
":attr:`children` similar to the order when tabbing forwards with the "
"``tab`` key."
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.get_focus_previous:1 of
msgid ""
"Returns the previous focusable widget using either :attr:`focus_previous`"
" or the :attr:`children` similar to the order when ``tab`` + ``shift`` "
"key are triggered together."
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.hide_keyboard:1 of
msgid "Convenience function to hide the keyboard in managed mode."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.ignored_touch:1 of
msgid ""
"A list of touches that should not be used to defocus. After on_touch_up, "
"every touch that is not in :attr:`ignored_touch` will defocus all the "
"focused widgets if the config keyboard mode is not multi. Touches on "
"focusable widgets that were used to focus are automatically added here."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.ignored_touch:6 of
msgid "Example usage::"
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.ignored_touch:14 of
msgid "Notice that you need to access this as a class, not an instance variable."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.input_type:1 of
msgid "The kind of input keyboard to request."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.input_type:5 of
msgid "Changed default value from `text` to `null`. Added `null` to options."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.input_type:9 of
msgid ""
"As the default value has been changed, you may need to adjust "
"`input_type` in your code."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.input_type:12 of
msgid ""
":attr:`input_type` is an :class:`~kivy.properties.OptionsProperty` and "
"defaults to 'null'. Can be one of 'null', 'text', 'number', 'url', "
"'mail', 'datetime', 'tel' or 'address'."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.is_focusable:1 of
msgid ""
"Whether the instance can become focused. If focused, it'll lose focus "
"when set to False."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.is_focusable:4 of
msgid ""
":attr:`is_focusable` is a :class:`~kivy.properties.BooleanProperty` and "
"defaults to True on a desktop (i.e. `desktop` is True in "
":mod:`~kivy.config`), False otherwise."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard:1 of
msgid "The keyboard to bind to (or bound to the widget) when focused."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard:3 of
msgid ""
"When None, a keyboard is requested and released whenever the widget comes"
" into and out of focus. If not None, it must be a keyboard, which gets "
"bound and unbound from the widget whenever it's in or out of focus. It is"
" useful only when more than one keyboard is available, so it is "
"recommended to be set to None when only one keyboard is available."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard:9 of
msgid ""
"If more than one keyboard is available, whenever an instance gets focused"
" a new keyboard will be requested if None. Unless the other instances "
"lose focus (e.g. if tab was used), a new keyboard will appear. When this "
"is undesired, the keyboard property can be used. For example, if there "
"are two users with two keyboards, then each keyboard can be assigned to "
"different groups of instances of FocusBehavior, ensuring that within each"
" group, only one FocusBehavior will have focus, and will receive input "
"from the correct keyboard. See `keyboard_mode` in :mod:`~kivy.config` for"
" more information on the keyboard modes."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard:19 of
msgid "**Keyboard and focus behavior**"
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard:21 of
msgid ""
"When using the keyboard, there are some important default behaviors you "
"should keep in mind."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard:24 of
msgid ""
"When Config's `keyboard_mode` is multi, each new touch is considered a "
"touch by a different user and will set the focus (if clicked on a "
"focusable) with a new keyboard. Already focused elements will not lose "
"their focus (even if an unfocusable widget is touched)."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard:29 of
msgid ""
"If the keyboard property is set, that keyboard will be used when the "
"instance gets focused. If widgets with different keyboards are linked "
"through :attr:`focus_next` and :attr:`focus_previous`, then as they are "
"tabbed through, different keyboards will become active. Therefore, "
"typically it's undesirable to link instances which are assigned different"
" keyboards."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard:36 of
msgid ""
"When a widget has focus, setting its keyboard to None will remove its "
"keyboard, but the widget will then immediately try to get another "
"keyboard. In order to remove its keyboard, rather set its :attr:`focus` "
"to False."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard:41 of
msgid ""
"When using a software keyboard, typical on mobile and touch devices, the "
"keyboard display behavior is determined by the "
":attr:`~kivy.core.window.WindowBase.softinput_mode` property. You can use"
" this property to ensure the focused widget is not covered or obscured."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard:46 of
msgid ""
":attr:`keyboard` is an :class:`~kivy.properties.AliasProperty` and "
"defaults to None."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard_mode:1 of
msgid ""
"Determines how the keyboard visibility should be managed. 'auto' will "
"result in the standard behaviour of showing/hiding on focus. 'managed' "
"requires setting the keyboard visibility manually, or calling the helper "
"functions :meth:`show_keyboard` and :meth:`hide_keyboard`."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.keyboard_mode:6 of
msgid ""
":attr:`keyboard_mode` is an :class:`~kivy.properties.OptionsProperty` and"
" defaults to 'auto'. Can be one of 'auto' or 'managed'."
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_down:1
#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_up:1 of
msgid "The method bound to the keyboard when the instance has focus."
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_down:3 of
msgid ""
"When the instance becomes focused, this method is bound to the keyboard "
"and will be called for every input press. The parameters are the same as "
":meth:`kivy.core.window.WindowBase.on_key_down`."
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_down:7 of
msgid ""
"When overwriting the method in the derived widget, super should be called"
" to enable tab cycling. If the derived widget wishes to use tab for its "
"own purposes, it can call super after it has processed the character (if "
"it does not wish to consume the tab)."
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_down:12 of
msgid ""
"Similar to other keyboard functions, it should return True if the key was"
" consumed."
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_up:3 of
msgid ""
"When the instance becomes focused, this method is bound to the keyboard "
"and will be called for every input release. The parameters are the same "
"as :meth:`kivy.core.window.WindowBase.on_key_up`."
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_up:7 of
msgid ""
"When overwriting the method in the derived widget, super should be called"
" to enable de-focusing on escape. If the derived widget wishes to use "
"escape for its own purposes, it can call super after it has processed the"
" character (if it does not wish to consume the escape)."
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_on_key_up:12 of
msgid "See :meth:`keyboard_on_key_down`"
msgstr ""

#: ../../docstring
#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_suggestions:1 of
msgid ""
"If True provides auto suggestions on top of keyboard. This will only work"
" if :attr:`input_type` is set to `text`, `url`, `mail` or `address`."
msgstr ""

#: ../../docstring
#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_suggestions:6 of
msgid ""
"On Android, `keyboard_suggestions` relies on "
"`InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS` to work, but some keyboards "
"just ignore this flag. If you want to disable suggestions at all on "
"Android, you can set `input_type` to `null`, which will request the input"
" method to run in a limited \"generate key events\" mode."
msgstr ""

#: ../../docstring
#: kivy.uix.behaviors.focus.FocusBehavior.keyboard_suggestions:14 of
msgid ""
":attr:`keyboard_suggestions` is a "
":class:`~kivy.properties.BooleanProperty` and defaults to True"
msgstr ""

#: kivy.uix.behaviors.focus.FocusBehavior.show_keyboard:1 of
msgid "Convenience function to show the keyboard in managed mode."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.unfocus_on_touch:1 of
msgid "Whether a instance should lose focus when clicked outside the instance."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.unfocus_on_touch:3 of
msgid ""
"When a user clicks on a widget that is focus aware and shares the same "
"keyboard as this widget (which in the case of only one keyboard, are all "
"focus aware widgets), then as the other widgets gains focus, this widget "
"loses focus. In addition to that, if this property is `True`, clicking on"
" any widget other than this widget, will remove focus form this widget."
msgstr ""

#: ../../docstring kivy.uix.behaviors.focus.FocusBehavior.unfocus_on_touch:10
#: of
msgid ""
":attr:`unfocus_on_touch` is a :class:`~kivy.properties.BooleanProperty` "
"and defaults to `False` if the `keyboard_mode` in "
":attr:`~kivy.config.Config` is `'multi'` or `'systemandmulti'`, otherwise"
" it defaults to `True`."
msgstr ""

