# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../sources/api-kivy.input.providers.tuio.rst:3
msgid "TUIO Input Provider"
msgstr ""

#: kivy.input.providers.tuio:2 of
msgid ""
"TUIO is the de facto standard network protocol for the transmission of "
"touch and fiducial information between a server and a client. To learn "
"more about TUIO (which is itself based on the OSC protocol), please refer"
" to http://tuio.org -- The specification should be of special interest."
msgstr ""

#: kivy.input.providers.tuio:9 of
msgid "Configure a TUIO provider in the config.ini"
msgstr ""

#: kivy.input.providers.tuio:11 of
msgid ""
"The TUIO provider can be configured in the configuration file in the "
"``[input]`` section::"
msgstr ""

#: kivy.input.providers.tuio:19 of
msgid "Configure a TUIO provider in the App"
msgstr ""

#: kivy.input.providers.tuio:21 of
msgid "You must add the provider before your application is run, like this::"
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.input.providers.tuio.TuioMotionEvent`"
msgstr ""

#: kivy.input.providers.tuio.Tuio2dCurMotionEvent:1 of
msgid "A 2dCur TUIO touch."
msgstr ""

#: kivy.input.providers.tuio.Tuio2dCurMotionEvent.depack:1
#: kivy.input.providers.tuio.Tuio2dObjMotionEvent.depack:1 of
msgid "Depack `args` into attributes of the class"
msgstr ""

#: kivy.input.providers.tuio.Tuio2dObjMotionEvent:1 of
msgid "A 2dObj TUIO object."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.input.provider.MotionEventProvider`"
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider:1 of
msgid ""
"The TUIO provider listens to a socket and handles some of the incoming "
"OSC messages:"
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider:4 of
msgid "/tuio/2Dcur"
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider:5 of
msgid "/tuio/2Dobj"
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider:7 of
msgid "You can easily extend the provider to handle new TUIO paths like so::"
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider:30 of
msgid ""
"The class name is of no technical importance. Your class will be "
"associated with the path that you pass to the ``register()`` function. To"
" keep things simple, you should name your class after the path that it "
"handles, though."
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider.create:1 of
msgid "Create a touch event from a TUIO path"
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider.register:1 of
msgid "Register a new path to handle in TUIO provider"
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider.start:1 of
msgid "Start the TUIO provider"
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider.stop:1 of
msgid "Stop the TUIO provider"
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider.unregister:1 of
msgid "Unregister a path to stop handling it in the TUIO provider"
msgstr ""

#: kivy.input.providers.tuio.TuioMotionEventProvider.update:1 of
msgid "Update the TUIO provider (pop events from the queue)"
msgstr ""

