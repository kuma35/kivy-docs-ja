# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 2.2.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-12 08:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.uix.sandbox.rst:3
msgid "Sandbox"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox:6
msgid "This is experimental and subject to change as long as this warning notice is present."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox:9
msgid "This is a widget that runs itself and all of its children in a Sandbox. That means if a child raises an Exception, it will be caught. The Sandbox itself runs its own Clock, Cache, etc."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox:13
msgid "The SandBox widget is still experimental and required for the Kivy designer. When the user designs their own widget, if they do something wrong (wrong size value, invalid python code), it will be caught correctly without breaking the whole application. Because it has been designed that way, we are still enhancing this widget and the :mod:`kivy.context` module. Don't use it unless you know what you are doing."
msgstr ""

#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.uix.floatlayout.FloatLayout`"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox:1
msgid "Sandbox widget, used to trap all the exceptions raised by child widgets."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.add_widget:1
msgid "Add a new widget as a child of this widget."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.add_widget:0
#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.remove_widget:0
#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_motion:0
#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_touch_down:0
msgid "Parameters"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.add_widget:4
#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.remove_widget:5
msgid "`widget`: :class:`Widget`"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.add_widget:5
msgid "Widget to add to our list of children."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.add_widget:12
msgid "`index`: int, defaults to 0"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.add_widget:7
msgid "Index to insert the widget in the list. Notice that the default of 0 means the widget is inserted at the beginning of the list and will thus be drawn on top of other sibling widgets. For a full discussion of the index and widget hierarchy, please see the :doc:`Widgets Programming Guide <guide/widgets>`."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.add_widget:18
msgid "`canvas`: str, defaults to None"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.add_widget:15
msgid "Canvas to add widget's canvas to. Can be 'before', 'after' or None for the default canvas."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.clear_widgets:1
msgid "Remove all (or the specified) :attr:`~Widget.children` of this widget. If the 'children' argument is specified, it should be a list (or filtered list) of children of the current widget."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.clear_widgets:5
msgid "The `children` argument can be used to specify the children you want to remove."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.clear_widgets:10
msgid "Specifying an empty ``children`` list leaves the widgets unchanged. Previously it was treated like ``None`` and all children were removed."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.on_context_created:1
msgid "Override this method in order to load your kv file or do anything else with the newly created context."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.on_exception:1
msgid "Override this method in order to catch all the exceptions from children."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.on_exception:4
msgid "If you return True, it will not reraise the exception. If you return False, the exception will be raised to the parent."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_motion:1
msgid "Called when a motion event is received."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_motion:4
msgid "`etype`: `str`"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_motion:5
msgid "Event type, one of \"begin\", \"update\" or \"end\""
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_motion:6
msgid "`me`: :class:`~kivy.input.motionevent.MotionEvent`"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_motion:7
msgid "Received motion event"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_motion:0
#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_touch_down:0
msgid "Returns"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_motion:8
msgid "`bool` `True` to stop event dispatching"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_motion:14
msgid "This is an experimental method and it remains so while this warning is present."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_touch_down:1
msgid "Receive a touch down event."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_touch_down:7
msgid "`touch`: :class:`~kivy.input.motionevent.MotionEvent` class"
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_touch_down:5
msgid "Touch received. The touch is in parent coordinates. See :mod:`~kivy.uix.relativelayout` for a discussion on coordinate systems."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_touch_down:9
msgid "bool If True, the dispatching of the touch event will stop. If False, the event will continue to be dispatched to the rest of the widget tree."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_touch_move:1
msgid "Receive a touch move event. The touch is in parent coordinates."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_touch_move:3
#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_touch_up:3
msgid "See :meth:`on_touch_down` for more information."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.widget.Widget.on_touch_up:1
msgid "Receive a touch up event. The touch is in parent coordinates."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.remove_widget:1
msgid "Remove a widget from the children of this widget."
msgstr ""

#: ../../../kivy/uix/sandbox.py:docstring of kivy.uix.sandbox.Sandbox.remove_widget:5
msgid "Widget to remove from our children list."
msgstr ""
